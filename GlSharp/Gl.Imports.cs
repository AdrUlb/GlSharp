using GLenum = uint;
using GLboolean = bool;
using GLbitfield = uint;
using GLbyte = sbyte;
using GLubyte = byte;
using GLshort = short;
using GLushort = ushort;
using GLint = int;
using GLuint = uint;
using GLclampx = int;
using GLsizei = int;
using GLfloat = float;
using GLclampf = float;
using GLdouble = double;
using GLclampd = double;
using GLeglClientBufferEXT = nuint;
using GLeglImageOES = nuint;
using GLchar = byte;
using GLcharARB = byte;
using GLhandleARB = nuint; // Size??
using GLhalf = ushort;
using GLhalfARB = ushort;
using GLfixed = int;
using GLintptr = nint;
using GLintptrARB = nint;
using GLsizeiptr = nint;
using GLsizeiptrARB = nint;
using GLint64 = long;
using GLint64EXT = long;
using GLuint64 = ulong;
using GLuint64EXT = ulong;
using GLsync = nuint; // typedef struct __GLsync *GLsync;

using _cl_context = nuint; // struct _cl_context;
using _cl_event = nuint; // struct _cl_event;
using GLDEBUGPROC = nuint;
using GLDEBUGPROCARB = nuint;
using GLDEBUGPROCKHR = nuint;

// Vendor extension types
using GLDEBUGPROCAMD = nuint;
using GLhalfNV = ushort;
using GLvdpauSurfaceNV = nint; // typedef GLintptr GLvdpauSurfaceNV;
using GLVULKANPROCNV = nuint;

namespace GlSharp;

unsafe partial class Gl
{
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glAccum = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glAccum");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glAccumxOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glAccumxOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glActiveProgramEXT = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glActiveProgramEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glActiveShaderProgram = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glActiveShaderProgram");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glActiveShaderProgramEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glActiveShaderProgramEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glActiveStencilFaceEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glActiveStencilFaceEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glActiveTexture = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glActiveTexture");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glActiveTextureARB = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glActiveTextureARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, void> _glActiveVaryingNV = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, void>)getProcAddress("glActiveVaryingNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glAlphaFragmentOp1ATI = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glAlphaFragmentOp1ATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glAlphaFragmentOp2ATI = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glAlphaFragmentOp2ATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glAlphaFragmentOp3ATI = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glAlphaFragmentOp3ATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glAlphaFunc = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glAlphaFunc");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLclampf, void> _glAlphaFuncQCOM = (delegate* unmanaged[Stdcall]<GLenum, GLclampf, void>)getProcAddress("glAlphaFuncQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glAlphaFuncx = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glAlphaFuncx");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glAlphaFuncxOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glAlphaFuncxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glAlphaToCoverageDitherControlNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glAlphaToCoverageDitherControlNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glApplyFramebufferAttachmentCMAAINTEL = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glApplyFramebufferAttachmentCMAAINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glApplyTextureEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glApplyTextureEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLuint, GLboolean> _glAcquireKeyedMutexWin32EXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLuint, GLboolean>)getProcAddress("glAcquireKeyedMutexWin32EXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLboolean*, GLboolean> _glAreProgramsResidentNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLboolean*, GLboolean>)getProcAddress("glAreProgramsResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLboolean*, GLboolean> _glAreTexturesResident = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLboolean*, GLboolean>)getProcAddress("glAreTexturesResident");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLboolean*, GLboolean> _glAreTexturesResidentEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLboolean*, GLboolean>)getProcAddress("glAreTexturesResidentEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glArrayElement = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glArrayElement");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glArrayElementEXT = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glArrayElementEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLuint, GLuint, void> _glArrayObjectATI = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLuint, GLuint, void>)getProcAddress("glArrayObjectATI");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLuint64*, GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, GLsizei, GLuint*, GLuint64*, GLuint> _glAsyncCopyBufferSubDataNVX = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLuint64*, GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, GLsizei, GLuint*, GLuint64*, GLuint>)getProcAddress("glAsyncCopyBufferSubDataNVX");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLuint64*, GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLuint*, GLuint64*, GLuint> _glAsyncCopyImageSubDataNVX = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLuint64*, GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLuint*, GLuint64*, GLuint>)getProcAddress("glAsyncCopyImageSubDataNVX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glAsyncMarkerSGIX = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glAsyncMarkerSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLhandleARB, void> _glAttachObjectARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLhandleARB, void>)getProcAddress("glAttachObjectARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glAttachShader = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glAttachShader");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glBegin = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glBegin");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glBeginConditionalRender = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glBeginConditionalRender");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glBeginConditionalRenderNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glBeginConditionalRenderNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBeginConditionalRenderNVX = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBeginConditionalRenderNVX");
	private readonly delegate* unmanaged[Stdcall]<void> _glBeginFragmentShaderATI = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glBeginFragmentShaderATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBeginOcclusionQueryNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBeginOcclusionQueryNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBeginPerfMonitorAMD = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBeginPerfMonitorAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBeginPerfQueryINTEL = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBeginPerfQueryINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBeginQuery = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBeginQuery");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBeginQueryARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBeginQueryARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBeginQueryEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBeginQueryEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void> _glBeginQueryIndexed = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void>)getProcAddress("glBeginQueryIndexed");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glBeginTransformFeedback = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glBeginTransformFeedback");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glBeginTransformFeedbackEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glBeginTransformFeedbackEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glBeginTransformFeedbackNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glBeginTransformFeedbackNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glBeginVertexShaderEXT = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glBeginVertexShaderEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBeginVideoCaptureNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBeginVideoCaptureNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLchar*, void> _glBindAttribLocation = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLchar*, void>)getProcAddress("glBindAttribLocation");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLuint, GLcharARB*, void> _glBindAttribLocationARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLuint, GLcharARB*, void>)getProcAddress("glBindAttribLocationARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindBuffer = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindBufferARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindBufferARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void> _glBindBufferBase = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void>)getProcAddress("glBindBufferBase");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void> _glBindBufferBaseEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void>)getProcAddress("glBindBufferBaseEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void> _glBindBufferBaseNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void>)getProcAddress("glBindBufferBaseNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, void> _glBindBufferOffsetEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, void>)getProcAddress("glBindBufferOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, void> _glBindBufferOffsetNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, void>)getProcAddress("glBindBufferOffsetNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, GLsizeiptr, void> _glBindBufferRange = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glBindBufferRange");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, GLsizeiptr, void> _glBindBufferRangeEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glBindBufferRangeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, GLsizeiptr, void> _glBindBufferRangeNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glBindBufferRangeNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, void> _glBindBuffersBase = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, void>)getProcAddress("glBindBuffersBase");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, GLintptr*, GLsizeiptr*, void> _glBindBuffersRange = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, GLintptr*, GLsizeiptr*, void>)getProcAddress("glBindBuffersRange");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLchar*, void> _glBindFragDataLocation = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLchar*, void>)getProcAddress("glBindFragDataLocation");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLchar*, void> _glBindFragDataLocationEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLchar*, void>)getProcAddress("glBindFragDataLocationEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLchar*, void> _glBindFragDataLocationIndexed = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLchar*, void>)getProcAddress("glBindFragDataLocationIndexed");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLchar*, void> _glBindFragDataLocationIndexedEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLchar*, void>)getProcAddress("glBindFragDataLocationIndexedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBindFragmentShaderATI = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBindFragmentShaderATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindFramebuffer = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindFramebuffer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindFramebufferEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindFramebufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindFramebufferOES = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindFramebufferOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum, void> _glBindImageTexture = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum, void>)getProcAddress("glBindImageTexture");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint, void> _glBindImageTextureEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint, void>)getProcAddress("glBindImageTextureEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, void> _glBindImageTextures = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, void>)getProcAddress("glBindImageTextures");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint> _glBindLightParameterEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint>)getProcAddress("glBindLightParameterEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint> _glBindMaterialParameterEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint>)getProcAddress("glBindMaterialParameterEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glBindMultiTextureEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glBindMultiTextureEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint> _glBindParameterEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint>)getProcAddress("glBindParameterEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindProgramARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindProgramARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindProgramNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindProgramNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBindProgramPipeline = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBindProgramPipeline");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBindProgramPipelineEXT = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBindProgramPipelineEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindRenderbuffer = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindRenderbuffer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindRenderbufferEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindRenderbufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindRenderbufferOES = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindRenderbufferOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glBindSampler = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glBindSampler");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, void> _glBindSamplers = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, void>)getProcAddress("glBindSamplers");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBindShadingRateImageNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBindShadingRateImageNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint> _glBindTexGenParameterEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint>)getProcAddress("glBindTexGenParameterEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindTexture = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindTexture");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindTextureEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindTextureEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glBindTextureUnit = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glBindTextureUnit");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint> _glBindTextureUnitParameterEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint>)getProcAddress("glBindTextureUnitParameterEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, void> _glBindTextures = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, void>)getProcAddress("glBindTextures");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindTransformFeedback = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindTransformFeedback");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glBindTransformFeedbackNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glBindTransformFeedbackNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBindVertexArray = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBindVertexArray");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBindVertexArrayAPPLE = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBindVertexArrayAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBindVertexArrayOES = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBindVertexArrayOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLintptr, GLsizei, void> _glBindVertexBuffer = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLintptr, GLsizei, void>)getProcAddress("glBindVertexBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLintptr*, GLsizei*, void> _glBindVertexBuffers = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLintptr*, GLsizei*, void>)getProcAddress("glBindVertexBuffers");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glBindVertexShaderEXT = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glBindVertexShaderEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptrARB, void> _glBindVideoCaptureStreamBufferNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptrARB, void>)getProcAddress("glBindVideoCaptureStreamBufferNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLenum, GLuint, void> _glBindVideoCaptureStreamTextureNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLenum, GLuint, void>)getProcAddress("glBindVideoCaptureStreamTextureNV");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void> _glBinormal3bEXT = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void>)getProcAddress("glBinormal3bEXT");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glBinormal3bvEXT = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glBinormal3bvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glBinormal3dEXT = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glBinormal3dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glBinormal3dvEXT = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glBinormal3dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glBinormal3fEXT = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glBinormal3fEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glBinormal3fvEXT = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glBinormal3fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glBinormal3iEXT = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glBinormal3iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glBinormal3ivEXT = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glBinormal3ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glBinormal3sEXT = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glBinormal3sEXT");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glBinormal3svEXT = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glBinormal3svEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glBinormalPointerEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glBinormalPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*, void> _glBitmap = (delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, GLubyte*, void>)getProcAddress("glBitmap");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, GLubyte*, void> _glBitmapxOES = (delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, GLubyte*, void>)getProcAddress("glBitmapxOES");
	private readonly delegate* unmanaged[Stdcall]<void> _glBlendBarrier = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glBlendBarrier");
	private readonly delegate* unmanaged[Stdcall]<void> _glBlendBarrierKHR = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glBlendBarrierKHR");
	private readonly delegate* unmanaged[Stdcall]<void> _glBlendBarrierNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glBlendBarrierNV");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glBlendColor = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glBlendColor");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glBlendColorEXT = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glBlendColorEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glBlendColorxOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glBlendColorxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glBlendEquation = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glBlendEquation");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glBlendEquationEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glBlendEquationEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glBlendEquationIndexedAMD = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glBlendEquationIndexedAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glBlendEquationOES = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glBlendEquationOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glBlendEquationSeparate = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glBlendEquationSeparate");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glBlendEquationSeparateEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glBlendEquationSeparateEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendEquationSeparateIndexedAMD = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendEquationSeparateIndexedAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glBlendEquationSeparateOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glBlendEquationSeparateOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendEquationSeparatei = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendEquationSeparatei");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendEquationSeparateiARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendEquationSeparateiARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendEquationSeparateiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendEquationSeparateiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendEquationSeparateiOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendEquationSeparateiOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glBlendEquationi = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glBlendEquationi");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glBlendEquationiARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glBlendEquationiARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glBlendEquationiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glBlendEquationiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glBlendEquationiOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glBlendEquationiOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glBlendFunc = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glBlendFunc");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendFuncIndexedAMD = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendFuncIndexedAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void> _glBlendFuncSeparate = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glBlendFuncSeparate");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void> _glBlendFuncSeparateEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glBlendFuncSeparateEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void> _glBlendFuncSeparateINGR = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glBlendFuncSeparateINGR");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void> _glBlendFuncSeparateIndexedAMD = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glBlendFuncSeparateIndexedAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void> _glBlendFuncSeparateOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glBlendFuncSeparateOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void> _glBlendFuncSeparatei = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glBlendFuncSeparatei");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void> _glBlendFuncSeparateiARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glBlendFuncSeparateiARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void> _glBlendFuncSeparateiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glBlendFuncSeparateiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void> _glBlendFuncSeparateiOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glBlendFuncSeparateiOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendFunci = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendFunci");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendFunciARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendFunciARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendFunciEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendFunciEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void> _glBlendFunciOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void>)getProcAddress("glBlendFunciOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glBlendParameteriNV = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glBlendParameteriNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> _glBlitFramebuffer = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void>)getProcAddress("glBlitFramebuffer");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> _glBlitFramebufferANGLE = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void>)getProcAddress("glBlitFramebufferANGLE");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> _glBlitFramebufferEXT = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void>)getProcAddress("glBlitFramebufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> _glBlitFramebufferLayerEXT = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void>)getProcAddress("glBlitFramebufferLayerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> _glBlitFramebufferLayersEXT = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void>)getProcAddress("glBlitFramebufferLayersEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> _glBlitFramebufferNV = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void>)getProcAddress("glBlitFramebufferNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> _glBlitNamedFramebuffer = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void>)getProcAddress("glBlitNamedFramebuffer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint64EXT, GLsizeiptr, void> _glBufferAddressRangeNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint64EXT, GLsizeiptr, void>)getProcAddress("glBufferAddressRangeNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint64, void> _glBufferAttachMemoryNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint64, void>)getProcAddress("glBufferAttachMemoryNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, void*, GLenum, void> _glBufferData = (delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, void*, GLenum, void>)getProcAddress("glBufferData");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizeiptrARB, void*, GLenum, void> _glBufferDataARB = (delegate* unmanaged[Stdcall]<GLenum, GLsizeiptrARB, void*, GLenum, void>)getProcAddress("glBufferDataARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLboolean, void> _glBufferPageCommitmentARB = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLboolean, void>)getProcAddress("glBufferPageCommitmentARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLuint, GLuint64, GLboolean, void> _glBufferPageCommitmentMemNV = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLuint, GLuint64, GLboolean, void>)getProcAddress("glBufferPageCommitmentMemNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glBufferParameteriAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glBufferParameteriAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, void*, GLbitfield, void> _glBufferStorage = (delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, void*, GLbitfield, void>)getProcAddress("glBufferStorage");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, void*, GLbitfield, void> _glBufferStorageEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, void*, GLbitfield, void>)getProcAddress("glBufferStorageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield, void> _glBufferStorageExternalEXT = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield, void>)getProcAddress("glBufferStorageExternalEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, GLuint, GLuint64, void> _glBufferStorageMemEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizeiptr, GLuint, GLuint64, void>)getProcAddress("glBufferStorageMemEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void*, void> _glBufferSubData = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void*, void>)getProcAddress("glBufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptrARB, GLsizeiptrARB, void*, void> _glBufferSubDataARB = (delegate* unmanaged[Stdcall]<GLenum, GLintptrARB, GLsizeiptrARB, void*, void>)getProcAddress("glBufferSubDataARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glCallCommandListNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glCallCommandListNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glCallList = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glCallList");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, void> _glCallLists = (delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, void>)getProcAddress("glCallLists");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum> _glCheckFramebufferStatus = (delegate* unmanaged[Stdcall]<GLenum, GLenum>)getProcAddress("glCheckFramebufferStatus");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum> _glCheckFramebufferStatusEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum>)getProcAddress("glCheckFramebufferStatusEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum> _glCheckFramebufferStatusOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum>)getProcAddress("glCheckFramebufferStatusOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum> _glCheckNamedFramebufferStatus = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum>)getProcAddress("glCheckNamedFramebufferStatus");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum> _glCheckNamedFramebufferStatusEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum>)getProcAddress("glCheckNamedFramebufferStatusEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glClampColor = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glClampColor");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glClampColorARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glClampColorARB");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glClear = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glClear");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glClearAccum = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glClearAccum");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glClearAccumxOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glClearAccumxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void*, void> _glClearBufferData = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void*, void>)getProcAddress("glClearBufferData");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, void*, void> _glClearBufferSubData = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, void*, void>)getProcAddress("glClearBufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLfloat, GLint, void> _glClearBufferfi = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLfloat, GLint, void>)getProcAddress("glClearBufferfi");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLfloat*, void> _glClearBufferfv = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLfloat*, void>)getProcAddress("glClearBufferfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint*, void> _glClearBufferiv = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint*, void>)getProcAddress("glClearBufferiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint*, void> _glClearBufferuiv = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint*, void>)getProcAddress("glClearBufferuiv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glClearColor = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glClearColor");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> _glClearColorIiEXT = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void>)getProcAddress("glClearColorIiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void> _glClearColorIuiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glClearColorIuiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glClearColorx = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glClearColorx");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glClearColorxOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glClearColorxOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, void> _glClearDepth = (delegate* unmanaged[Stdcall]<GLdouble, void>)getProcAddress("glClearDepth");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, void> _glClearDepthdNV = (delegate* unmanaged[Stdcall]<GLdouble, void>)getProcAddress("glClearDepthdNV");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glClearDepthf = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glClearDepthf");
	private readonly delegate* unmanaged[Stdcall]<GLclampf, void> _glClearDepthfOES = (delegate* unmanaged[Stdcall]<GLclampf, void>)getProcAddress("glClearDepthfOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glClearDepthx = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glClearDepthx");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glClearDepthxOES = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glClearDepthxOES");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glClearIndex = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glClearIndex");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, void*, void> _glClearNamedBufferData = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, void*, void>)getProcAddress("glClearNamedBufferData");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, void*, void> _glClearNamedBufferDataEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, void*, void>)getProcAddress("glClearNamedBufferDataEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, void*, void> _glClearNamedBufferSubData = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, void*, void>)getProcAddress("glClearNamedBufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizeiptr, GLsizeiptr, GLenum, GLenum, void*, void> _glClearNamedBufferSubDataEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizeiptr, GLsizeiptr, GLenum, GLenum, void*, void>)getProcAddress("glClearNamedBufferSubDataEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLfloat, GLint, void> _glClearNamedFramebufferfi = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLfloat, GLint, void>)getProcAddress("glClearNamedFramebufferfi");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLfloat*, void> _glClearNamedFramebufferfv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLfloat*, void>)getProcAddress("glClearNamedFramebufferfv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint*, void> _glClearNamedFramebufferiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint*, void>)getProcAddress("glClearNamedFramebufferiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLuint*, void> _glClearNamedFramebufferuiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLuint*, void>)getProcAddress("glClearNamedFramebufferuiv");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLuint*, void> _glClearPixelLocalStorageuiEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLuint*, void>)getProcAddress("glClearPixelLocalStorageuiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glClearStencil = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glClearStencil");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLenum, void*, void> _glClearTexImage = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLenum, void*, void>)getProcAddress("glClearTexImage");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLenum, void*, void> _glClearTexImageEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLenum, void*, void>)getProcAddress("glClearTexImageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glClearTexSubImage = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glClearTexSubImage");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glClearTexSubImageEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glClearTexSubImageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glClientActiveTexture = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glClientActiveTexture");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glClientActiveTextureARB = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glClientActiveTextureARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glClientActiveVertexStreamATI = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glClientActiveVertexStreamATI");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glClientAttribDefaultEXT = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glClientAttribDefaultEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLuint64*, void> _glClientWaitSemaphoreui64NVX = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLuint64*, void>)getProcAddress("glClientWaitSemaphoreui64NVX");
	private readonly delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, GLenum> _glClientWaitSync = (delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, GLenum>)getProcAddress("glClientWaitSync");
	private readonly delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, GLenum> _glClientWaitSyncAPPLE = (delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, GLenum>)getProcAddress("glClientWaitSyncAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glClipControl = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glClipControl");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glClipControlEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glClipControlEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glClipPlane = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glClipPlane");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glClipPlanef = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glClipPlanef");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glClipPlanefIMG = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glClipPlanefIMG");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glClipPlanefOES = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glClipPlanefOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glClipPlanex = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glClipPlanex");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glClipPlanexIMG = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glClipPlanexIMG");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glClipPlanexOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glClipPlanexOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void> _glColor3b = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void>)getProcAddress("glColor3b");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glColor3bv = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glColor3bv");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glColor3d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glColor3d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glColor3dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glColor3dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glColor3f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glColor3f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glColor3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glColor3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void> _glColor3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void>)getProcAddress("glColor3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glColor3fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glColor3fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void> _glColor3hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glColor3hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glColor3hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glColor3hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glColor3i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glColor3i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glColor3iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glColor3iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glColor3s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glColor3s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glColor3sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glColor3sv");
	private readonly delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, void> _glColor3ub = (delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, void>)getProcAddress("glColor3ub");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, void> _glColor3ubv = (delegate* unmanaged[Stdcall]<GLubyte*, void>)getProcAddress("glColor3ubv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glColor3ui = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glColor3ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, void> _glColor3uiv = (delegate* unmanaged[Stdcall]<GLuint*, void>)getProcAddress("glColor3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLushort, GLushort, GLushort, void> _glColor3us = (delegate* unmanaged[Stdcall]<GLushort, GLushort, GLushort, void>)getProcAddress("glColor3us");
	private readonly delegate* unmanaged[Stdcall]<GLushort*, void> _glColor3usv = (delegate* unmanaged[Stdcall]<GLushort*, void>)getProcAddress("glColor3usv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glColor3xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glColor3xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glColor3xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glColor3xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, GLbyte, void> _glColor4b = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, GLbyte, void>)getProcAddress("glColor4b");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glColor4bv = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glColor4bv");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void> _glColor4d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glColor4d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glColor4dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glColor4dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glColor4f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glColor4f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glColor4fNormal3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glColor4fNormal3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, void> _glColor4fNormal3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, void>)getProcAddress("glColor4fNormal3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glColor4fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glColor4fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void> _glColor4hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glColor4hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glColor4hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glColor4hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> _glColor4i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void>)getProcAddress("glColor4i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glColor4iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glColor4iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void> _glColor4s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glColor4s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glColor4sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glColor4sv");
	private readonly delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, GLubyte, void> _glColor4ub = (delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, GLubyte, void>)getProcAddress("glColor4ub");
	private readonly delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, void> _glColor4ubVertex2fSUN = (delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, void>)getProcAddress("glColor4ubVertex2fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, GLfloat*, void> _glColor4ubVertex2fvSUN = (delegate* unmanaged[Stdcall]<GLubyte*, GLfloat*, void>)getProcAddress("glColor4ubVertex2fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat, void> _glColor4ubVertex3fSUN = (delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glColor4ubVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, GLfloat*, void> _glColor4ubVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLubyte*, GLfloat*, void>)getProcAddress("glColor4ubVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, void> _glColor4ubv = (delegate* unmanaged[Stdcall]<GLubyte*, void>)getProcAddress("glColor4ubv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void> _glColor4ui = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glColor4ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, void> _glColor4uiv = (delegate* unmanaged[Stdcall]<GLuint*, void>)getProcAddress("glColor4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLushort, GLushort, GLushort, GLushort, void> _glColor4us = (delegate* unmanaged[Stdcall]<GLushort, GLushort, GLushort, GLushort, void>)getProcAddress("glColor4us");
	private readonly delegate* unmanaged[Stdcall]<GLushort*, void> _glColor4usv = (delegate* unmanaged[Stdcall]<GLushort*, void>)getProcAddress("glColor4usv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glColor4x = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glColor4x");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glColor4xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glColor4xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glColor4xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glColor4xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void> _glColorFormatNV = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void>)getProcAddress("glColorFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glColorFragmentOp1ATI = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glColorFragmentOp1ATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glColorFragmentOp2ATI = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glColorFragmentOp2ATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glColorFragmentOp3ATI = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glColorFragmentOp3ATI");
	private readonly delegate* unmanaged[Stdcall]<GLboolean, GLboolean, GLboolean, GLboolean, void> _glColorMask = (delegate* unmanaged[Stdcall]<GLboolean, GLboolean, GLboolean, GLboolean, void>)getProcAddress("glColorMask");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void> _glColorMaskIndexedEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void>)getProcAddress("glColorMaskIndexedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void> _glColorMaski = (delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void>)getProcAddress("glColorMaski");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void> _glColorMaskiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void>)getProcAddress("glColorMaskiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void> _glColorMaskiOES = (delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void>)getProcAddress("glColorMaskiOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glColorMaterial = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glColorMaterial");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glColorP3ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glColorP3ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glColorP3uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glColorP3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glColorP4ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glColorP4ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glColorP4uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glColorP4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glColorPointer = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glColorPointer");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, GLsizei, void*, void> _glColorPointerEXT = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, GLsizei, void*, void>)getProcAddress("glColorPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLint, void*, GLint, void> _glColorPointerListIBM = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLint, void*, GLint, void>)getProcAddress("glColorPointerListIBM");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, void*, void> _glColorPointervINTEL = (delegate* unmanaged[Stdcall]<GLint, GLenum, void*, void>)getProcAddress("glColorPointervINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glColorSubTable = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glColorSubTable");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glColorSubTableEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glColorSubTableEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void> _glColorTable = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glColorTable");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void> _glColorTableEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glColorTableEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glColorTableParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glColorTableParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glColorTableParameterfvSGI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glColorTableParameterfvSGI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glColorTableParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glColorTableParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glColorTableParameterivSGI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glColorTableParameterivSGI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void> _glColorTableSGI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glColorTableSGI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, void> _glCombinerInputNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glCombinerInputNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean, void> _glCombinerOutputNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean, void>)getProcAddress("glCombinerOutputNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glCombinerParameterfNV = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glCombinerParameterfNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glCombinerParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glCombinerParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glCombinerParameteriNV = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glCombinerParameteriNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glCombinerParameterivNV = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glCombinerParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glCombinerStageParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glCombinerStageParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glCommandListSegmentsNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glCommandListSegmentsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glCompileCommandListNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glCompileCommandListNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glCompileShader = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glCompileShader");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, void> _glCompileShaderARB = (delegate* unmanaged[Stdcall]<GLhandleARB, void>)getProcAddress("glCompileShaderARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLint*, void> _glCompileShaderIncludeARB = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLint*, void>)getProcAddress("glCompileShaderIncludeARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void*, void> _glCompressedMultiTexImage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedMultiTexImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void*, void> _glCompressedMultiTexImage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedMultiTexImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void> _glCompressedMultiTexImage3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedMultiTexImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void> _glCompressedMultiTexSubImage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedMultiTexSubImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedMultiTexSubImage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedMultiTexSubImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedMultiTexSubImage3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedMultiTexSubImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void*, void> _glCompressedTexImage1D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTexImage1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void*, void> _glCompressedTexImage1DARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTexImage1DARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void*, void> _glCompressedTexImage2D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTexImage2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void*, void> _glCompressedTexImage2DARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTexImage2DARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void> _glCompressedTexImage3D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTexImage3D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void> _glCompressedTexImage3DARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTexImage3DARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void> _glCompressedTexImage3DOES = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTexImage3DOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTexSubImage1D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTexSubImage1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTexSubImage1DARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTexSubImage1DARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTexSubImage2D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTexSubImage2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTexSubImage2DARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTexSubImage2DARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTexSubImage3D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTexSubImage3D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTexSubImage3DARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTexSubImage3DARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTexSubImage3DOES = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTexSubImage3DOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void*, void> _glCompressedTextureImage1DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTextureImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void*, void> _glCompressedTextureImage2DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTextureImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void> _glCompressedTextureImage3DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, void*, void>)getProcAddress("glCompressedTextureImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTextureSubImage1D = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTextureSubImage1D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTextureSubImage1DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTextureSubImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTextureSubImage2D = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTextureSubImage2D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTextureSubImage2DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTextureSubImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTextureSubImage3D = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTextureSubImage3D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void> _glCompressedTextureSubImage3DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, void*, void>)getProcAddress("glCompressedTextureSubImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glConservativeRasterParameterfNV = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glConservativeRasterParameterfNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glConservativeRasterParameteriNV = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glConservativeRasterParameteriNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void> _glConvolutionFilter1D = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glConvolutionFilter1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void> _glConvolutionFilter1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glConvolutionFilter1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glConvolutionFilter2D = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glConvolutionFilter2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glConvolutionFilter2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glConvolutionFilter2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glConvolutionParameterf = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glConvolutionParameterf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glConvolutionParameterfEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glConvolutionParameterfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glConvolutionParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glConvolutionParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glConvolutionParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glConvolutionParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glConvolutionParameteri = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glConvolutionParameteri");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glConvolutionParameteriEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glConvolutionParameteriEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glConvolutionParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glConvolutionParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glConvolutionParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glConvolutionParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glConvolutionParameterxOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glConvolutionParameterxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glConvolutionParameterxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glConvolutionParameterxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr, void> _glCopyBufferSubData = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr, void>)getProcAddress("glCopyBufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr, void> _glCopyBufferSubDataNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr, void>)getProcAddress("glCopyBufferSubDataNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLint, GLint, GLsizei, void> _glCopyColorSubTable = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLint, GLint, GLsizei, void>)getProcAddress("glCopyColorSubTable");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLint, GLint, GLsizei, void> _glCopyColorSubTableEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLint, GLint, GLsizei, void>)getProcAddress("glCopyColorSubTableEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, void> _glCopyColorTable = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, void>)getProcAddress("glCopyColorTable");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, void> _glCopyColorTableSGI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, void>)getProcAddress("glCopyColorTableSGI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, void> _glCopyConvolutionFilter1D = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, void>)getProcAddress("glCopyConvolutionFilter1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, void> _glCopyConvolutionFilter1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, void>)getProcAddress("glCopyConvolutionFilter1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, void> _glCopyConvolutionFilter2D = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyConvolutionFilter2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, void> _glCopyConvolutionFilter2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyConvolutionFilter2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void> _glCopyImageSubData = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glCopyImageSubData");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void> _glCopyImageSubDataEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glCopyImageSubDataEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void> _glCopyImageSubDataNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glCopyImageSubDataNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void> _glCopyImageSubDataOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glCopyImageSubDataOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint, void> _glCopyMultiTexImage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint, void>)getProcAddress("glCopyMultiTexImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, void> _glCopyMultiTexImage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, void>)getProcAddress("glCopyMultiTexImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, void> _glCopyMultiTexSubImage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, void>)getProcAddress("glCopyMultiTexSubImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyMultiTexSubImage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyMultiTexSubImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyMultiTexSubImage3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyMultiTexSubImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, void> _glCopyNamedBufferSubData = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, void>)getProcAddress("glCopyNamedBufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glCopyPathNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glCopyPathNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, void> _glCopyPixels = (delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, void>)getProcAddress("glCopyPixels");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint, void> _glCopyTexImage1D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint, void>)getProcAddress("glCopyTexImage1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint, void> _glCopyTexImage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint, void>)getProcAddress("glCopyTexImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, void> _glCopyTexImage2D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, void>)getProcAddress("glCopyTexImage2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, void> _glCopyTexImage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, void>)getProcAddress("glCopyTexImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, void> _glCopyTexSubImage1D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, void>)getProcAddress("glCopyTexSubImage1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, void> _glCopyTexSubImage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, void>)getProcAddress("glCopyTexSubImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyTexSubImage2D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyTexSubImage2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyTexSubImage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyTexSubImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyTexSubImage3D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyTexSubImage3D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyTexSubImage3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyTexSubImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyTexSubImage3DOES = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyTexSubImage3DOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint, void> _glCopyTextureImage1DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint, void>)getProcAddress("glCopyTextureImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, void> _glCopyTextureImage2DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, void>)getProcAddress("glCopyTextureImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLsizei, void> _glCopyTextureLevelsAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLsizei, void>)getProcAddress("glCopyTextureLevelsAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, void> _glCopyTextureSubImage1D = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, void>)getProcAddress("glCopyTextureSubImage1D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, void> _glCopyTextureSubImage1DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, void>)getProcAddress("glCopyTextureSubImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyTextureSubImage2D = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyTextureSubImage2D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyTextureSubImage2DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyTextureSubImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyTextureSubImage3D = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyTextureSubImage3D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void> _glCopyTextureSubImage3DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glCopyTextureSubImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLenum, GLenum, GLfloat*, void> _glCoverFillPathInstancedNV = (delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLenum, GLenum, GLfloat*, void>)getProcAddress("glCoverFillPathInstancedNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glCoverFillPathNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glCoverFillPathNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLenum, GLenum, GLfloat*, void> _glCoverStrokePathInstancedNV = (delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLenum, GLenum, GLfloat*, void>)getProcAddress("glCoverStrokePathInstancedNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glCoverStrokePathNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glCoverStrokePathNV");
	private readonly delegate* unmanaged[Stdcall]<GLboolean, void> _glCoverageMaskNV = (delegate* unmanaged[Stdcall]<GLboolean, void>)getProcAddress("glCoverageMaskNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glCoverageModulationNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glCoverageModulationNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLfloat*, void> _glCoverageModulationTableNV = (delegate* unmanaged[Stdcall]<GLsizei, GLfloat*, void>)getProcAddress("glCoverageModulationTableNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glCoverageOperationNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glCoverageOperationNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateBuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateBuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateCommandListsNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateCommandListsNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateFramebuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateFramebuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateMemoryObjectsEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateMemoryObjectsEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glCreatePerfQueryINTEL = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glCreatePerfQueryINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLuint> _glCreateProgram = (delegate* unmanaged[Stdcall]<GLuint>)getProcAddress("glCreateProgram");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB> _glCreateProgramObjectARB = (delegate* unmanaged[Stdcall]<GLhandleARB>)getProcAddress("glCreateProgramObjectARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateProgramPipelines = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateProgramPipelines");
	private readonly delegate* unmanaged[Stdcall]<GLuint> _glCreateProgressFenceNVX = (delegate* unmanaged[Stdcall]<GLuint>)getProcAddress("glCreateProgressFenceNVX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> _glCreateQueries = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void>)getProcAddress("glCreateQueries");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateRenderbuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateRenderbuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateSamplers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateSamplers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateSemaphoresNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateSemaphoresNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint> _glCreateShader = (delegate* unmanaged[Stdcall]<GLenum, GLuint>)getProcAddress("glCreateShader");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhandleARB> _glCreateShaderObjectARB = (delegate* unmanaged[Stdcall]<GLenum, GLhandleARB>)getProcAddress("glCreateShaderObjectARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLchar*, GLuint> _glCreateShaderProgramEXT = (delegate* unmanaged[Stdcall]<GLenum, GLchar*, GLuint>)getProcAddress("glCreateShaderProgramEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLchar*, GLuint> _glCreateShaderProgramv = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLchar*, GLuint>)getProcAddress("glCreateShaderProgramv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLchar*, GLuint> _glCreateShaderProgramvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLchar*, GLuint>)getProcAddress("glCreateShaderProgramvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateStatesNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateStatesNV");
	private readonly delegate* unmanaged[Stdcall]<_cl_context*, _cl_event*, GLbitfield, GLsync> _glCreateSyncFromCLeventARB = (delegate* unmanaged[Stdcall]<_cl_context*, _cl_event*, GLbitfield, GLsync>)getProcAddress("glCreateSyncFromCLeventARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> _glCreateTextures = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void>)getProcAddress("glCreateTextures");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateTransformFeedbacks = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateTransformFeedbacks");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glCreateVertexArrays = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glCreateVertexArrays");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glCullFace = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glCullFace");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glCullParameterdvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glCullParameterdvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glCullParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glCullParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glCurrentPaletteMatrixARB = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glCurrentPaletteMatrixARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glCurrentPaletteMatrixOES = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glCurrentPaletteMatrixOES");
	private readonly delegate* unmanaged[Stdcall]<GLDEBUGPROC, void*, void> _glDebugMessageCallback = (delegate* unmanaged[Stdcall]<GLDEBUGPROC, void*, void>)getProcAddress("glDebugMessageCallback");
	private readonly delegate* unmanaged[Stdcall]<GLDEBUGPROCAMD, void*, void> _glDebugMessageCallbackAMD = (delegate* unmanaged[Stdcall]<GLDEBUGPROCAMD, void*, void>)getProcAddress("glDebugMessageCallbackAMD");
	private readonly delegate* unmanaged[Stdcall]<GLDEBUGPROCARB, void*, void> _glDebugMessageCallbackARB = (delegate* unmanaged[Stdcall]<GLDEBUGPROCARB, void*, void>)getProcAddress("glDebugMessageCallbackARB");
	private readonly delegate* unmanaged[Stdcall]<GLDEBUGPROCKHR, void*, void> _glDebugMessageCallbackKHR = (delegate* unmanaged[Stdcall]<GLDEBUGPROCKHR, void*, void>)getProcAddress("glDebugMessageCallbackKHR");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLuint*, GLboolean, void> _glDebugMessageControl = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLuint*, GLboolean, void>)getProcAddress("glDebugMessageControl");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLuint*, GLboolean, void> _glDebugMessageControlARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLuint*, GLboolean, void>)getProcAddress("glDebugMessageControlARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLuint*, GLboolean, void> _glDebugMessageControlKHR = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLuint*, GLboolean, void>)getProcAddress("glDebugMessageControlKHR");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLuint*, GLboolean, void> _glDebugMessageEnableAMD = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLuint*, GLboolean, void>)getProcAddress("glDebugMessageEnableAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar*, void> _glDebugMessageInsert = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar*, void>)getProcAddress("glDebugMessageInsert");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLsizei, GLchar*, void> _glDebugMessageInsertAMD = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLsizei, GLchar*, void>)getProcAddress("glDebugMessageInsertAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar*, void> _glDebugMessageInsertARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar*, void>)getProcAddress("glDebugMessageInsertARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar*, void> _glDebugMessageInsertKHR = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLenum, GLsizei, GLchar*, void>)getProcAddress("glDebugMessageInsertKHR");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glDeformSGIX = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glDeformSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*, void> _glDeformationMap3dSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*, void>)getProcAddress("glDeformationMap3dSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*, void> _glDeformationMap3fSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*, void>)getProcAddress("glDeformationMap3fSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, void> _glDeleteAsyncMarkersSGIX = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, void>)getProcAddress("glDeleteAsyncMarkersSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteBuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteBuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteBuffersARB = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteBuffersARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteCommandListsNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteCommandListsNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteFencesAPPLE = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteFencesAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteFencesNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteFencesNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glDeleteFragmentShaderATI = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glDeleteFragmentShaderATI");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteFramebuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteFramebuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteFramebuffersEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteFramebuffersEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteFramebuffersOES = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteFramebuffersOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, void> _glDeleteLists = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, void>)getProcAddress("glDeleteLists");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteMemoryObjectsEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteMemoryObjectsEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLchar*, void> _glDeleteNamedStringARB = (delegate* unmanaged[Stdcall]<GLint, GLchar*, void>)getProcAddress("glDeleteNamedStringARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void> _glDeleteNamesAMD = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void>)getProcAddress("glDeleteNamesAMD");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, void> _glDeleteObjectARB = (delegate* unmanaged[Stdcall]<GLhandleARB, void>)getProcAddress("glDeleteObjectARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteOcclusionQueriesNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteOcclusionQueriesNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, void> _glDeletePathsNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, void>)getProcAddress("glDeletePathsNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeletePerfMonitorsAMD = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeletePerfMonitorsAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glDeletePerfQueryINTEL = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glDeletePerfQueryINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glDeleteProgram = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glDeleteProgram");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteProgramPipelines = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteProgramPipelines");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteProgramPipelinesEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteProgramPipelinesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteProgramsARB = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteProgramsARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteProgramsNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteProgramsNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteQueries = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteQueries");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteQueriesARB = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteQueriesARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteQueriesEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteQueriesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLint*, void> _glDeleteQueryResourceTagNV = (delegate* unmanaged[Stdcall]<GLsizei, GLint*, void>)getProcAddress("glDeleteQueryResourceTagNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteRenderbuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteRenderbuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteRenderbuffersEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteRenderbuffersEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteRenderbuffersOES = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteRenderbuffersOES");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteSamplers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteSamplers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteSemaphoresEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteSemaphoresEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glDeleteShader = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glDeleteShader");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteStatesNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteStatesNV");
	private readonly delegate* unmanaged[Stdcall]<GLsync, void> _glDeleteSync = (delegate* unmanaged[Stdcall]<GLsync, void>)getProcAddress("glDeleteSync");
	private readonly delegate* unmanaged[Stdcall]<GLsync, void> _glDeleteSyncAPPLE = (delegate* unmanaged[Stdcall]<GLsync, void>)getProcAddress("glDeleteSyncAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteTextures = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteTextures");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteTexturesEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteTexturesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteTransformFeedbacks = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteTransformFeedbacks");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteTransformFeedbacksNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteTransformFeedbacksNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteVertexArrays = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteVertexArrays");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteVertexArraysAPPLE = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteVertexArraysAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glDeleteVertexArraysOES = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glDeleteVertexArraysOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glDeleteVertexShaderEXT = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glDeleteVertexShaderEXT");
	private readonly delegate* unmanaged[Stdcall]<GLclampd, GLclampd, void> _glDepthBoundsEXT = (delegate* unmanaged[Stdcall]<GLclampd, GLclampd, void>)getProcAddress("glDepthBoundsEXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glDepthBoundsdNV = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glDepthBoundsdNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glDepthFunc = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glDepthFunc");
	private readonly delegate* unmanaged[Stdcall]<GLboolean, void> _glDepthMask = (delegate* unmanaged[Stdcall]<GLboolean, void>)getProcAddress("glDepthMask");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glDepthRange = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glDepthRange");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void> _glDepthRangeArraydvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void>)getProcAddress("glDepthRangeArraydvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glDepthRangeArrayfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glDepthRangeArrayfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glDepthRangeArrayfvOES = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glDepthRangeArrayfvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void> _glDepthRangeArrayv = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void>)getProcAddress("glDepthRangeArrayv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> _glDepthRangeIndexed = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void>)getProcAddress("glDepthRangeIndexed");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> _glDepthRangeIndexeddNV = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void>)getProcAddress("glDepthRangeIndexeddNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void> _glDepthRangeIndexedfNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void>)getProcAddress("glDepthRangeIndexedfNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void> _glDepthRangeIndexedfOES = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void>)getProcAddress("glDepthRangeIndexedfOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glDepthRangedNV = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glDepthRangedNV");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glDepthRangef = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glDepthRangef");
	private readonly delegate* unmanaged[Stdcall]<GLclampf, GLclampf, void> _glDepthRangefOES = (delegate* unmanaged[Stdcall]<GLclampf, GLclampf, void>)getProcAddress("glDepthRangefOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void> _glDepthRangex = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void>)getProcAddress("glDepthRangex");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void> _glDepthRangexOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void>)getProcAddress("glDepthRangexOES");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLhandleARB, void> _glDetachObjectARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLhandleARB, void>)getProcAddress("glDetachObjectARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glDetachShader = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glDetachShader");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void> _glDetailTexFuncSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void>)getProcAddress("glDetailTexFuncSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glDisable = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glDisable");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glDisableClientState = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glDisableClientState");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDisableClientStateIndexedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDisableClientStateIndexedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDisableClientStateiEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDisableClientStateiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glDisableDriverControlQCOM = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glDisableDriverControlQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDisableIndexedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDisableIndexedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glDisableVariantClientStateEXT = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glDisableVariantClientStateEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glDisableVertexArrayAttrib = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glDisableVertexArrayAttrib");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glDisableVertexArrayAttribEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glDisableVertexArrayAttribEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glDisableVertexArrayEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glDisableVertexArrayEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glDisableVertexAttribAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glDisableVertexAttribAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glDisableVertexAttribArray = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glDisableVertexAttribArray");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glDisableVertexAttribArrayARB = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glDisableVertexAttribArrayARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDisablei = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDisablei");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDisableiEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDisableiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDisableiNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDisableiNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDisableiOES = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDisableiOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum*, void> _glDiscardFramebufferEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum*, void>)getProcAddress("glDiscardFramebufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glDispatchCompute = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glDispatchCompute");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glDispatchComputeGroupSizeARB = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glDispatchComputeGroupSizeARB");
	private readonly delegate* unmanaged[Stdcall]<GLintptr, void> _glDispatchComputeIndirect = (delegate* unmanaged[Stdcall]<GLintptr, void>)getProcAddress("glDispatchComputeIndirect");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void> _glDrawArrays = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void>)getProcAddress("glDrawArrays");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void> _glDrawArraysEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void>)getProcAddress("glDrawArraysEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> _glDrawArraysIndirect = (delegate* unmanaged[Stdcall]<GLenum, void*, void>)getProcAddress("glDrawArraysIndirect");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void> _glDrawArraysInstanced = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void>)getProcAddress("glDrawArraysInstanced");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void> _glDrawArraysInstancedANGLE = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void>)getProcAddress("glDrawArraysInstancedANGLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void> _glDrawArraysInstancedARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void>)getProcAddress("glDrawArraysInstancedARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, GLuint, void> _glDrawArraysInstancedBaseInstance = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, GLuint, void>)getProcAddress("glDrawArraysInstancedBaseInstance");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, GLuint, void> _glDrawArraysInstancedBaseInstanceEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, GLuint, void>)getProcAddress("glDrawArraysInstancedBaseInstanceEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void> _glDrawArraysInstancedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void>)getProcAddress("glDrawArraysInstancedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void> _glDrawArraysInstancedNV = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void>)getProcAddress("glDrawArraysInstancedNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glDrawBuffer = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glDrawBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void> _glDrawBuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void>)getProcAddress("glDrawBuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void> _glDrawBuffersARB = (delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void>)getProcAddress("glDrawBuffersARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void> _glDrawBuffersATI = (delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void>)getProcAddress("glDrawBuffersATI");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void> _glDrawBuffersEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void>)getProcAddress("glDrawBuffersEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum*, GLint*, void> _glDrawBuffersIndexedEXT = (delegate* unmanaged[Stdcall]<GLint, GLenum*, GLint*, void>)getProcAddress("glDrawBuffersIndexedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void> _glDrawBuffersNV = (delegate* unmanaged[Stdcall]<GLsizei, GLenum*, void>)getProcAddress("glDrawBuffersNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint64*, GLsizei*, GLuint, void> _glDrawCommandsAddressNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint64*, GLsizei*, GLuint, void>)getProcAddress("glDrawCommandsAddressNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLintptr*, GLsizei*, GLuint, void> _glDrawCommandsNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLintptr*, GLsizei*, GLuint, void>)getProcAddress("glDrawCommandsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint64*, GLsizei*, GLuint*, GLuint*, GLuint, void> _glDrawCommandsStatesAddressNV = (delegate* unmanaged[Stdcall]<GLuint64*, GLsizei*, GLuint*, GLuint*, GLuint, void>)getProcAddress("glDrawCommandsStatesAddressNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr*, GLsizei*, GLuint*, GLuint*, GLuint, void> _glDrawCommandsStatesNV = (delegate* unmanaged[Stdcall]<GLuint, GLintptr*, GLsizei*, GLuint*, GLuint*, GLuint, void>)getProcAddress("glDrawCommandsStatesNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void> _glDrawElementArrayAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void>)getProcAddress("glDrawElementArrayAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void> _glDrawElementArrayATI = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void>)getProcAddress("glDrawElementArrayATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, void> _glDrawElements = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, void>)getProcAddress("glDrawElements");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLint, void> _glDrawElementsBaseVertex = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLint, void>)getProcAddress("glDrawElementsBaseVertex");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLint, void> _glDrawElementsBaseVertexEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLint, void>)getProcAddress("glDrawElementsBaseVertexEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLint, void> _glDrawElementsBaseVertexOES = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLint, void>)getProcAddress("glDrawElementsBaseVertexOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void> _glDrawElementsIndirect = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void>)getProcAddress("glDrawElementsIndirect");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void> _glDrawElementsInstanced = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void>)getProcAddress("glDrawElementsInstanced");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void> _glDrawElementsInstancedANGLE = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void>)getProcAddress("glDrawElementsInstancedANGLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void> _glDrawElementsInstancedARB = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void>)getProcAddress("glDrawElementsInstancedARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLuint, void> _glDrawElementsInstancedBaseInstance = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLuint, void>)getProcAddress("glDrawElementsInstancedBaseInstance");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLuint, void> _glDrawElementsInstancedBaseInstanceEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLuint, void>)getProcAddress("glDrawElementsInstancedBaseInstanceEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, void> _glDrawElementsInstancedBaseVertex = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, void>)getProcAddress("glDrawElementsInstancedBaseVertex");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, GLuint, void> _glDrawElementsInstancedBaseVertexBaseInstance = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, GLuint, void>)getProcAddress("glDrawElementsInstancedBaseVertexBaseInstance");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, GLuint, void> _glDrawElementsInstancedBaseVertexBaseInstanceEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, GLuint, void>)getProcAddress("glDrawElementsInstancedBaseVertexBaseInstanceEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, void> _glDrawElementsInstancedBaseVertexEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, void>)getProcAddress("glDrawElementsInstancedBaseVertexEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, void> _glDrawElementsInstancedBaseVertexOES = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, GLint, void>)getProcAddress("glDrawElementsInstancedBaseVertexOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void> _glDrawElementsInstancedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void>)getProcAddress("glDrawElementsInstancedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void> _glDrawElementsInstancedNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLsizei, void>)getProcAddress("glDrawElementsInstancedNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void> _glDrawMeshArraysSUN = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, GLsizei, void>)getProcAddress("glDrawMeshArraysSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glDrawMeshTasksNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glDrawMeshTasksNV");
	private readonly delegate* unmanaged[Stdcall]<GLintptr, void> _glDrawMeshTasksIndirectNV = (delegate* unmanaged[Stdcall]<GLintptr, void>)getProcAddress("glDrawMeshTasksIndirectNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLenum, GLenum, void*, void> _glDrawPixels = (delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glDrawPixels");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLint, GLsizei, void> _glDrawRangeElementArrayAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLint, GLsizei, void>)getProcAddress("glDrawRangeElementArrayAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, void> _glDrawRangeElementArrayATI = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, void>)getProcAddress("glDrawRangeElementArrayATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, void> _glDrawRangeElements = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, void>)getProcAddress("glDrawRangeElements");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, GLint, void> _glDrawRangeElementsBaseVertex = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, GLint, void>)getProcAddress("glDrawRangeElementsBaseVertex");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, GLint, void> _glDrawRangeElementsBaseVertexEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, GLint, void>)getProcAddress("glDrawRangeElementsBaseVertexEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, GLint, void> _glDrawRangeElementsBaseVertexOES = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, GLint, void>)getProcAddress("glDrawRangeElementsBaseVertexOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, void> _glDrawRangeElementsEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLenum, void*, void>)getProcAddress("glDrawRangeElementsEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glDrawTexfOES = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glDrawTexfOES");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glDrawTexfvOES = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glDrawTexfvOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, void> _glDrawTexiOES = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, void>)getProcAddress("glDrawTexiOES");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glDrawTexivOES = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glDrawTexivOES");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, GLshort, void> _glDrawTexsOES = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glDrawTexsOES");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glDrawTexsvOES = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glDrawTexsvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glDrawTextureNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glDrawTextureNV");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void> _glDrawTexxOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glDrawTexxOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glDrawTexxvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glDrawTexxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDrawTransformFeedback = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDrawTransformFeedback");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDrawTransformFeedbackEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDrawTransformFeedbackEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, void> _glDrawTransformFeedbackInstanced = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, void>)getProcAddress("glDrawTransformFeedbackInstanced");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, void> _glDrawTransformFeedbackInstancedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, void>)getProcAddress("glDrawTransformFeedbackInstancedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glDrawTransformFeedbackNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glDrawTransformFeedbackNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void> _glDrawTransformFeedbackStream = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void>)getProcAddress("glDrawTransformFeedbackStream");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, void> _glDrawTransformFeedbackStreamInstanced = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, void>)getProcAddress("glDrawTransformFeedbackStreamInstanced");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLeglImageOES, void> _glEGLImageTargetRenderbufferStorageOES = (delegate* unmanaged[Stdcall]<GLenum, GLeglImageOES, void>)getProcAddress("glEGLImageTargetRenderbufferStorageOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLeglImageOES, GLint*, void> _glEGLImageTargetTexStorageEXT = (delegate* unmanaged[Stdcall]<GLenum, GLeglImageOES, GLint*, void>)getProcAddress("glEGLImageTargetTexStorageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLeglImageOES, void> _glEGLImageTargetTexture2DOES = (delegate* unmanaged[Stdcall]<GLenum, GLeglImageOES, void>)getProcAddress("glEGLImageTargetTexture2DOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLeglImageOES, GLint*, void> _glEGLImageTargetTextureStorageEXT = (delegate* unmanaged[Stdcall]<GLuint, GLeglImageOES, GLint*, void>)getProcAddress("glEGLImageTargetTextureStorageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLboolean, void> _glEdgeFlag = (delegate* unmanaged[Stdcall]<GLboolean, void>)getProcAddress("glEdgeFlag");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, void> _glEdgeFlagFormatNV = (delegate* unmanaged[Stdcall]<GLsizei, void>)getProcAddress("glEdgeFlagFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, void*, void> _glEdgeFlagPointer = (delegate* unmanaged[Stdcall]<GLsizei, void*, void>)getProcAddress("glEdgeFlagPointer");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLboolean*, void> _glEdgeFlagPointerEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLboolean*, void>)getProcAddress("glEdgeFlagPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLboolean*, GLint, void> _glEdgeFlagPointerListIBM = (delegate* unmanaged[Stdcall]<GLint, GLboolean*, GLint, void>)getProcAddress("glEdgeFlagPointerListIBM");
	private readonly delegate* unmanaged[Stdcall]<GLboolean*, void> _glEdgeFlagv = (delegate* unmanaged[Stdcall]<GLboolean*, void>)getProcAddress("glEdgeFlagv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> _glElementPointerAPPLE = (delegate* unmanaged[Stdcall]<GLenum, void*, void>)getProcAddress("glElementPointerAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> _glElementPointerATI = (delegate* unmanaged[Stdcall]<GLenum, void*, void>)getProcAddress("glElementPointerATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glEnable = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glEnable");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glEnableClientState = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glEnableClientState");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glEnableClientStateIndexedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glEnableClientStateIndexedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glEnableClientStateiEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glEnableClientStateiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glEnableDriverControlQCOM = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glEnableDriverControlQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glEnableIndexedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glEnableIndexedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glEnableVariantClientStateEXT = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glEnableVariantClientStateEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glEnableVertexArrayAttrib = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glEnableVertexArrayAttrib");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glEnableVertexArrayAttribEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glEnableVertexArrayAttribEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glEnableVertexArrayEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glEnableVertexArrayEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glEnableVertexAttribAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glEnableVertexAttribAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glEnableVertexAttribArray = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glEnableVertexAttribArray");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glEnableVertexAttribArrayARB = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glEnableVertexAttribArrayARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glEnablei = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glEnablei");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glEnableiEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glEnableiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glEnableiNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glEnableiNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glEnableiOES = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glEnableiOES");
	private readonly delegate* unmanaged[Stdcall]<void> _glEnd = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEnd");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndConditionalRender = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndConditionalRender");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndConditionalRenderNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndConditionalRenderNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndConditionalRenderNVX = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndConditionalRenderNVX");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndFragmentShaderATI = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndFragmentShaderATI");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndList = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndList");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndOcclusionQueryNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndOcclusionQueryNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glEndPerfMonitorAMD = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glEndPerfMonitorAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glEndPerfQueryINTEL = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glEndPerfQueryINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glEndQuery = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glEndQuery");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glEndQueryARB = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glEndQueryARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glEndQueryEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glEndQueryEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glEndQueryIndexed = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glEndQueryIndexed");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glEndTilingQCOM = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glEndTilingQCOM");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndTransformFeedback = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndTransformFeedback");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndTransformFeedbackEXT = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndTransformFeedbackEXT");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndTransformFeedbackNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndTransformFeedbackNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glEndVertexShaderEXT = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEndVertexShaderEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glEndVideoCaptureNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glEndVideoCaptureNV");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, void> _glEvalCoord1d = (delegate* unmanaged[Stdcall]<GLdouble, void>)getProcAddress("glEvalCoord1d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glEvalCoord1dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glEvalCoord1dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glEvalCoord1f = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glEvalCoord1f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glEvalCoord1fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glEvalCoord1fv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glEvalCoord1xOES = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glEvalCoord1xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glEvalCoord1xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glEvalCoord1xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glEvalCoord2d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glEvalCoord2d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glEvalCoord2dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glEvalCoord2dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glEvalCoord2f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glEvalCoord2f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glEvalCoord2fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glEvalCoord2fv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void> _glEvalCoord2xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void>)getProcAddress("glEvalCoord2xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glEvalCoord2xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glEvalCoord2xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glEvalMapsNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glEvalMapsNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, void> _glEvalMesh1 = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, void>)getProcAddress("glEvalMesh1");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, void> _glEvalMesh2 = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, void>)getProcAddress("glEvalMesh2");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glEvalPoint1 = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glEvalPoint1");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> _glEvalPoint2 = (delegate* unmanaged[Stdcall]<GLint, GLint, void>)getProcAddress("glEvalPoint2");
	private readonly delegate* unmanaged[Stdcall]<void> _glEvaluateDepthValuesARB = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glEvaluateDepthValuesARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glExecuteProgramNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glExecuteProgramNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> _glExtGetBufferPointervQCOM = (delegate* unmanaged[Stdcall]<GLenum, void*, void>)getProcAddress("glExtGetBufferPointervQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void> _glExtGetBuffersQCOM = (delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void>)getProcAddress("glExtGetBuffersQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void> _glExtGetFramebuffersQCOM = (delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void>)getProcAddress("glExtGetFramebuffersQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint*, void> _glExtGetProgramBinarySourceQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint*, void>)getProcAddress("glExtGetProgramBinarySourceQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void> _glExtGetProgramsQCOM = (delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void>)getProcAddress("glExtGetProgramsQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void> _glExtGetRenderbuffersQCOM = (delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void>)getProcAddress("glExtGetRenderbuffersQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void> _glExtGetShadersQCOM = (delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void>)getProcAddress("glExtGetShadersQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLint*, void> _glExtGetTexLevelParameterivQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLint*, void>)getProcAddress("glExtGetTexLevelParameterivQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glExtGetTexSubImageQCOM = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glExtGetTexSubImageQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void> _glExtGetTexturesQCOM = (delegate* unmanaged[Stdcall]<GLuint*, GLint, GLint*, void>)getProcAddress("glExtGetTexturesQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glExtIsProgramBinaryQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glExtIsProgramBinaryQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glExtTexObjectStateOverrideiQCOM = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glExtTexObjectStateOverrideiQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glExtractComponentEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glExtractComponentEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum, GLfloat*, void> _glFeedbackBuffer = (delegate* unmanaged[Stdcall]<GLsizei, GLenum, GLfloat*, void>)getProcAddress("glFeedbackBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum, GLfixed*, void> _glFeedbackBufferxOES = (delegate* unmanaged[Stdcall]<GLsizei, GLenum, GLfixed*, void>)getProcAddress("glFeedbackBufferxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbitfield, GLsync> _glFenceSync = (delegate* unmanaged[Stdcall]<GLenum, GLbitfield, GLsync>)getProcAddress("glFenceSync");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbitfield, GLsync> _glFenceSyncAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLbitfield, GLsync>)getProcAddress("glFenceSyncAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void> _glFinalCombinerInputNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glFinalCombinerInputNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glFinish = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glFinish");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLint> _glFinishAsyncSGIX = (delegate* unmanaged[Stdcall]<GLuint*, GLint>)getProcAddress("glFinishAsyncSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glFinishFenceAPPLE = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glFinishFenceAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glFinishFenceNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glFinishFenceNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glFinishObjectAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glFinishObjectAPPLE");
	private readonly delegate* unmanaged[Stdcall]<void> _glFinishTextureSUNX = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glFinishTextureSUNX");
	private readonly delegate* unmanaged[Stdcall]<void> _glFlush = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glFlush");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void> _glFlushMappedBufferRange = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void>)getProcAddress("glFlushMappedBufferRange");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void> _glFlushMappedBufferRangeAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void>)getProcAddress("glFlushMappedBufferRangeAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void> _glFlushMappedBufferRangeEXT = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void>)getProcAddress("glFlushMappedBufferRangeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void> _glFlushMappedNamedBufferRange = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glFlushMappedNamedBufferRange");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void> _glFlushMappedNamedBufferRangeEXT = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glFlushMappedNamedBufferRangeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glFlushPixelDataRangeNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glFlushPixelDataRangeNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glFlushRasterSGIX = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glFlushRasterSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glFlushStaticDataIBM = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glFlushStaticDataIBM");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, void*, void> _glFlushVertexArrayRangeAPPLE = (delegate* unmanaged[Stdcall]<GLsizei, void*, void>)getProcAddress("glFlushVertexArrayRangeAPPLE");
	private readonly delegate* unmanaged[Stdcall]<void> _glFlushVertexArrayRangeNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glFlushVertexArrayRangeNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void> _glFogCoordFormatNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void>)getProcAddress("glFogCoordFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glFogCoordPointer = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glFogCoordPointer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glFogCoordPointerEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glFogCoordPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void*, GLint, void> _glFogCoordPointerListIBM = (delegate* unmanaged[Stdcall]<GLenum, GLint, void*, GLint, void>)getProcAddress("glFogCoordPointerListIBM");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, void> _glFogCoordd = (delegate* unmanaged[Stdcall]<GLdouble, void>)getProcAddress("glFogCoordd");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, void> _glFogCoorddEXT = (delegate* unmanaged[Stdcall]<GLdouble, void>)getProcAddress("glFogCoorddEXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glFogCoorddv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glFogCoorddv");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glFogCoorddvEXT = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glFogCoorddvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glFogCoordf = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glFogCoordf");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glFogCoordfEXT = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glFogCoordfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glFogCoordfv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glFogCoordfv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glFogCoordfvEXT = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glFogCoordfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, void> _glFogCoordhNV = (delegate* unmanaged[Stdcall]<GLhalfNV, void>)getProcAddress("glFogCoordhNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glFogCoordhvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glFogCoordhvNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLfloat*, void> _glFogFuncSGIS = (delegate* unmanaged[Stdcall]<GLsizei, GLfloat*, void>)getProcAddress("glFogFuncSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glFogf = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glFogf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glFogfv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glFogfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glFogi = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glFogi");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glFogiv = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glFogiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glFogx = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glFogx");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glFogxOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glFogxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glFogxv = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glFogxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glFogxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glFogxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glFragmentColorMaterialSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glFragmentColorMaterialSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glFragmentCoverageColorNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glFragmentCoverageColorNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glFragmentLightModelfSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glFragmentLightModelfSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glFragmentLightModelfvSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glFragmentLightModelfvSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glFragmentLightModeliSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glFragmentLightModeliSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glFragmentLightModelivSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glFragmentLightModelivSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glFragmentLightfSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glFragmentLightfSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glFragmentLightfvSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glFragmentLightfvSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glFragmentLightiSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glFragmentLightiSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glFragmentLightivSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glFragmentLightivSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glFragmentMaterialfSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glFragmentMaterialfSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glFragmentMaterialfvSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glFragmentMaterialfvSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glFragmentMaterialiSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glFragmentMaterialiSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glFragmentMaterialivSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glFragmentMaterialivSGIX");
	private readonly delegate* unmanaged[Stdcall]<void> _glFrameTerminatorGREMEDY = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glFrameTerminatorGREMEDY");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glFrameZoomSGIX = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glFrameZoomSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glFramebufferDrawBufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glFramebufferDrawBufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, void> _glFramebufferDrawBuffersEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, void>)getProcAddress("glFramebufferDrawBuffersEXT");
	private readonly delegate* unmanaged[Stdcall]<void> _glFramebufferFetchBarrierEXT = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glFramebufferFetchBarrierEXT");
	private readonly delegate* unmanaged[Stdcall]<void> _glFramebufferFetchBarrierQCOM = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glFramebufferFetchBarrierQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLuint*, void> _glFramebufferFoveationConfigQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLuint*, void>)getProcAddress("glFramebufferFoveationConfigQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glFramebufferFoveationParametersQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glFramebufferFoveationParametersQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glFramebufferParameteri = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glFramebufferParameteri");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, void> _glFramebufferPixelLocalStorageSizeEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, void>)getProcAddress("glFramebufferPixelLocalStorageSizeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glFramebufferReadBufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glFramebufferReadBufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, void> _glFramebufferRenderbuffer = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, void>)getProcAddress("glFramebufferRenderbuffer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, void> _glFramebufferRenderbufferEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, void>)getProcAddress("glFramebufferRenderbufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, void> _glFramebufferRenderbufferOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, void>)getProcAddress("glFramebufferRenderbufferOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void> _glFramebufferSampleLocationsfvARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glFramebufferSampleLocationsfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void> _glFramebufferSampleLocationsfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glFramebufferSampleLocationsfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLfloat*, void> _glFramebufferSamplePositionsfvAMD = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLfloat*, void>)getProcAddress("glFramebufferSamplePositionsfvAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLsizei, GLsizei, GLsizei, void> _glFramebufferShadingRateEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glFramebufferShadingRateEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, void> _glFramebufferTexture = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glFramebufferTexture");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void> _glFramebufferTexture1D = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glFramebufferTexture1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void> _glFramebufferTexture1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glFramebufferTexture1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void> _glFramebufferTexture2D = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glFramebufferTexture2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void> _glFramebufferTexture2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glFramebufferTexture2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLint, GLint, void> _glFramebufferTexture2DDownsampleIMG = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLint, GLint, void>)getProcAddress("glFramebufferTexture2DDownsampleIMG");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLsizei, void> _glFramebufferTexture2DMultisampleEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLsizei, void>)getProcAddress("glFramebufferTexture2DMultisampleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLsizei, void> _glFramebufferTexture2DMultisampleIMG = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLsizei, void>)getProcAddress("glFramebufferTexture2DMultisampleIMG");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void> _glFramebufferTexture2DOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glFramebufferTexture2DOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLint, void> _glFramebufferTexture3D = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLint, void>)getProcAddress("glFramebufferTexture3D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLint, void> _glFramebufferTexture3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLint, void>)getProcAddress("glFramebufferTexture3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLint, void> _glFramebufferTexture3DOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLint, GLint, void>)getProcAddress("glFramebufferTexture3DOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, void> _glFramebufferTextureARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glFramebufferTextureARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, void> _glFramebufferTextureEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glFramebufferTextureEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLenum, void> _glFramebufferTextureFaceARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLenum, void>)getProcAddress("glFramebufferTextureFaceARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLenum, void> _glFramebufferTextureFaceEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLenum, void>)getProcAddress("glFramebufferTextureFaceEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, void> _glFramebufferTextureLayer = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, void>)getProcAddress("glFramebufferTextureLayer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, void> _glFramebufferTextureLayerARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, void>)getProcAddress("glFramebufferTextureLayerARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, void> _glFramebufferTextureLayerEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, void>)getProcAddress("glFramebufferTextureLayerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, GLint, GLint, void> _glFramebufferTextureLayerDownsampleIMG = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, GLint, GLint, void>)getProcAddress("glFramebufferTextureLayerDownsampleIMG");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLsizei, GLint, GLsizei, void> _glFramebufferTextureMultisampleMultiviewOVR = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLsizei, GLint, GLsizei, void>)getProcAddress("glFramebufferTextureMultisampleMultiviewOVR");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, GLsizei, void> _glFramebufferTextureMultiviewOVR = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, GLint, GLsizei, void>)getProcAddress("glFramebufferTextureMultiviewOVR");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, void> _glFramebufferTextureOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glFramebufferTextureOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glFreeObjectBufferATI = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glFreeObjectBufferATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glFrontFace = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glFrontFace");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, void> _glFrustum = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glFrustum");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glFrustumf = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glFrustumf");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glFrustumfOES = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glFrustumfOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void> _glFrustumx = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glFrustumx");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void> _glFrustumxOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glFrustumxOES");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint> _glGenAsyncMarkersSGIX = (delegate* unmanaged[Stdcall]<GLsizei, GLuint>)getProcAddress("glGenAsyncMarkersSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenBuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenBuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenBuffersARB = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenBuffersARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenFencesAPPLE = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenFencesAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenFencesNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenFencesNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint> _glGenFragmentShadersATI = (delegate* unmanaged[Stdcall]<GLuint, GLuint>)getProcAddress("glGenFragmentShadersATI");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenFramebuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenFramebuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenFramebuffersEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenFramebuffersEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenFramebuffersOES = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenFramebuffersOES");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint> _glGenLists = (delegate* unmanaged[Stdcall]<GLsizei, GLuint>)getProcAddress("glGenLists");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void> _glGenNamesAMD = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void>)getProcAddress("glGenNamesAMD");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenOcclusionQueriesNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenOcclusionQueriesNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint> _glGenPathsNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint>)getProcAddress("glGenPathsNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenPerfMonitorsAMD = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenPerfMonitorsAMD");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenProgramPipelines = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenProgramPipelines");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenProgramPipelinesEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenProgramPipelinesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenProgramsARB = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenProgramsARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenProgramsNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenProgramsNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenQueries = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenQueries");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenQueriesARB = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenQueriesARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenQueriesEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenQueriesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLint*, void> _glGenQueryResourceTagNV = (delegate* unmanaged[Stdcall]<GLsizei, GLint*, void>)getProcAddress("glGenQueryResourceTagNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenRenderbuffers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenRenderbuffers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenRenderbuffersEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenRenderbuffersEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenRenderbuffersOES = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenRenderbuffersOES");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenSamplers = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenSamplers");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenSemaphoresEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenSemaphoresEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLuint> _glGenSymbolsEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, GLuint>)getProcAddress("glGenSymbolsEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenTextures = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenTextures");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenTexturesEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenTexturesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenTransformFeedbacks = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenTransformFeedbacks");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenTransformFeedbacksNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenTransformFeedbacksNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenVertexArrays = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenVertexArrays");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenVertexArraysAPPLE = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenVertexArraysAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glGenVertexArraysOES = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glGenVertexArraysOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint> _glGenVertexShadersEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint>)getProcAddress("glGenVertexShadersEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glGenerateMipmap = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glGenerateMipmap");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glGenerateMipmapEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glGenerateMipmapEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glGenerateMipmapOES = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glGenerateMipmapOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glGenerateMultiTexMipmapEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glGenerateMultiTexMipmapEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glGenerateTextureMipmap = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glGenerateTextureMipmap");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glGenerateTextureMipmapEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glGenerateTextureMipmapEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> _glGetActiveAtomicCounterBufferiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void>)getProcAddress("glGetActiveAtomicCounterBufferiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*, void> _glGetActiveAttrib = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*, void>)getProcAddress("glGetActiveAttrib");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*, void> _glGetActiveAttribARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*, void>)getProcAddress("glGetActiveAttribARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetActiveSubroutineName = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetActiveSubroutineName");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetActiveSubroutineUniformName = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetActiveSubroutineUniformName");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLint*, void> _glGetActiveSubroutineUniformiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLint*, void>)getProcAddress("glGetActiveSubroutineUniformiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*, void> _glGetActiveUniform = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLchar*, void>)getProcAddress("glGetActiveUniform");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*, void> _glGetActiveUniformARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLuint, GLsizei, GLsizei*, GLint*, GLenum*, GLcharARB*, void>)getProcAddress("glGetActiveUniformARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetActiveUniformBlockName = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetActiveUniformBlockName");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> _glGetActiveUniformBlockiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void>)getProcAddress("glGetActiveUniformBlockiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetActiveUniformName = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetActiveUniformName");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLenum, GLint*, void> _glGetActiveUniformsiv = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLenum, GLint*, void>)getProcAddress("glGetActiveUniformsiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*, void> _glGetActiveVaryingNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*, void>)getProcAddress("glGetActiveVaryingNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetArrayObjectfvATI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetArrayObjectfvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetArrayObjectivATI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetArrayObjectivATI");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLsizei, GLsizei*, GLhandleARB*, void> _glGetAttachedObjectsARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLsizei, GLsizei*, GLhandleARB*, void>)getProcAddress("glGetAttachedObjectsARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLuint*, void> _glGetAttachedShaders = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLuint*, void>)getProcAddress("glGetAttachedShaders");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint> _glGetAttribLocation = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint>)getProcAddress("glGetAttribLocation");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLcharARB*, GLint> _glGetAttribLocationARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLcharARB*, GLint>)getProcAddress("glGetAttribLocationARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean*, void> _glGetBooleanIndexedvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean*, void>)getProcAddress("glGetBooleanIndexedvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean*, void> _glGetBooleani_v = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean*, void>)getProcAddress("glGetBooleani_v");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean*, void> _glGetBooleanv = (delegate* unmanaged[Stdcall]<GLenum, GLboolean*, void>)getProcAddress("glGetBooleanv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint64*, void> _glGetBufferParameteri64v = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint64*, void>)getProcAddress("glGetBufferParameteri64v");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetBufferParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetBufferParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetBufferParameterivARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetBufferParameterivARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint64EXT*, void> _glGetBufferParameterui64vNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint64EXT*, void>)getProcAddress("glGetBufferParameterui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void> _glGetBufferPointerv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void>)getProcAddress("glGetBufferPointerv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void> _glGetBufferPointervARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void>)getProcAddress("glGetBufferPointervARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void> _glGetBufferPointervOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void>)getProcAddress("glGetBufferPointervOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void*, void> _glGetBufferSubData = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, void*, void>)getProcAddress("glGetBufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptrARB, GLsizeiptrARB, void*, void> _glGetBufferSubDataARB = (delegate* unmanaged[Stdcall]<GLenum, GLintptrARB, GLsizeiptrARB, void*, void>)getProcAddress("glGetBufferSubDataARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glGetClipPlane = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glGetClipPlane");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glGetClipPlanef = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glGetClipPlanef");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glGetClipPlanefOES = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glGetClipPlanefOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glGetClipPlanex = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glGetClipPlanex");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glGetClipPlanexOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glGetClipPlanexOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void> _glGetColorTable = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void>)getProcAddress("glGetColorTable");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void> _glGetColorTableEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void>)getProcAddress("glGetColorTableEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetColorTableParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetColorTableParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetColorTableParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetColorTableParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetColorTableParameterfvSGI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetColorTableParameterfvSGI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetColorTableParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetColorTableParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetColorTableParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetColorTableParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetColorTableParameterivSGI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetColorTableParameterivSGI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void> _glGetColorTableSGI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void>)getProcAddress("glGetColorTableSGI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, GLfloat*, void> _glGetCombinerInputParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetCombinerInputParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, GLint*, void> _glGetCombinerInputParameterivNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glGetCombinerInputParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void> _glGetCombinerOutputParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetCombinerOutputParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glGetCombinerOutputParameterivNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glGetCombinerOutputParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetCombinerStageParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetCombinerStageParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint> _glGetCommandHeaderNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint>)getProcAddress("glGetCommandHeaderNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void*, void> _glGetCompressedMultiTexImageEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void*, void>)getProcAddress("glGetCompressedMultiTexImageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void*, void> _glGetCompressedTexImage = (delegate* unmanaged[Stdcall]<GLenum, GLint, void*, void>)getProcAddress("glGetCompressedTexImage");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void*, void> _glGetCompressedTexImageARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, void*, void>)getProcAddress("glGetCompressedTexImageARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, void*, void> _glGetCompressedTextureImage = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, void*, void>)getProcAddress("glGetCompressedTextureImage");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void*, void> _glGetCompressedTextureImageEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void*, void>)getProcAddress("glGetCompressedTextureImageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, void*, void> _glGetCompressedTextureSubImage = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, void*, void>)getProcAddress("glGetCompressedTextureSubImage");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void> _glGetConvolutionFilter = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void>)getProcAddress("glGetConvolutionFilter");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void> _glGetConvolutionFilterEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void>)getProcAddress("glGetConvolutionFilterEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetConvolutionParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetConvolutionParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetConvolutionParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetConvolutionParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetConvolutionParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetConvolutionParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetConvolutionParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetConvolutionParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetConvolutionParameterxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetConvolutionParameterxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLfloat*, void> _glGetCoverageModulationTableNV = (delegate* unmanaged[Stdcall]<GLsizei, GLfloat*, void>)getProcAddress("glGetCoverageModulationTableNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*, GLuint> _glGetDebugMessageLog = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*, GLuint>)getProcAddress("glGetDebugMessageLog");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLsizei*, GLchar*, GLuint> _glGetDebugMessageLogAMD = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLsizei*, GLchar*, GLuint>)getProcAddress("glGetDebugMessageLogAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*, GLuint> _glGetDebugMessageLogARB = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*, GLuint>)getProcAddress("glGetDebugMessageLogARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*, GLuint> _glGetDebugMessageLogKHR = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLenum*, GLuint*, GLenum*, GLsizei*, GLchar*, GLuint>)getProcAddress("glGetDebugMessageLogKHR");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glGetDetailTexFuncSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glGetDetailTexFuncSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void> _glGetDoubleIndexedvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void>)getProcAddress("glGetDoubleIndexedvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void> _glGetDoublei_v = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void>)getProcAddress("glGetDoublei_v");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void> _glGetDoublei_vEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void>)getProcAddress("glGetDoublei_vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glGetDoublev = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glGetDoublev");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetDriverControlStringQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetDriverControlStringQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLint*, GLsizei, GLuint*, void> _glGetDriverControlsQCOM = (delegate* unmanaged[Stdcall]<GLint*, GLsizei, GLuint*, void>)getProcAddress("glGetDriverControlsQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLenum> _glGetError = (delegate* unmanaged[Stdcall]<GLenum>)getProcAddress("glGetError");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetFenceivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetFenceivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetFinalCombinerInputParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetFinalCombinerInputParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetFinalCombinerInputParameterivNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetFinalCombinerInputParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, void> _glGetFirstPerfQueryIdINTEL = (delegate* unmanaged[Stdcall]<GLuint*, void>)getProcAddress("glGetFirstPerfQueryIdINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glGetFixedv = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glGetFixedv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glGetFixedvOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glGetFixedvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glGetFloatIndexedvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetFloatIndexedvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glGetFloati_v = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetFloati_v");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glGetFloati_vEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetFloati_vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glGetFloati_vNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetFloati_vNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glGetFloati_vOES = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetFloati_vOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glGetFloatv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glGetFloatv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glGetFogFuncSGIS = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glGetFogFuncSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint> _glGetFragDataIndex = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint>)getProcAddress("glGetFragDataIndex");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint> _glGetFragDataIndexEXT = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint>)getProcAddress("glGetFragDataIndexEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint> _glGetFragDataLocation = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint>)getProcAddress("glGetFragDataLocation");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint> _glGetFragDataLocationEXT = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint>)getProcAddress("glGetFragDataLocationEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetFragmentLightfvSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetFragmentLightfvSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetFragmentLightivSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetFragmentLightivSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetFragmentMaterialfvSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetFragmentMaterialfvSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetFragmentMaterialivSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetFragmentMaterialivSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLsizei*, GLenum*, void> _glGetFragmentShadingRatesEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLsizei, GLsizei*, GLenum*, void>)getProcAddress("glGetFragmentShadingRatesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glGetFramebufferAttachmentParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glGetFramebufferAttachmentParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glGetFramebufferAttachmentParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glGetFramebufferAttachmentParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glGetFramebufferAttachmentParameterivOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glGetFramebufferAttachmentParameterivOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLuint, GLsizei, GLfloat*, void> _glGetFramebufferParameterfvAMD = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glGetFramebufferParameterfvAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetFramebufferParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetFramebufferParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetFramebufferParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetFramebufferParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei> _glGetFramebufferPixelLocalStorageSizeEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei>)getProcAddress("glGetFramebufferPixelLocalStorageSizeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum> _glGetGraphicsResetStatus = (delegate* unmanaged[Stdcall]<GLenum>)getProcAddress("glGetGraphicsResetStatus");
	private readonly delegate* unmanaged[Stdcall]<GLenum> _glGetGraphicsResetStatusARB = (delegate* unmanaged[Stdcall]<GLenum>)getProcAddress("glGetGraphicsResetStatusARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum> _glGetGraphicsResetStatusEXT = (delegate* unmanaged[Stdcall]<GLenum>)getProcAddress("glGetGraphicsResetStatusEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum> _glGetGraphicsResetStatusKHR = (delegate* unmanaged[Stdcall]<GLenum>)getProcAddress("glGetGraphicsResetStatusKHR");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhandleARB> _glGetHandleARB = (delegate* unmanaged[Stdcall]<GLenum, GLhandleARB>)getProcAddress("glGetHandleARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, void*, void> _glGetHistogram = (delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, void*, void>)getProcAddress("glGetHistogram");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, void*, void> _glGetHistogramEXT = (delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, void*, void>)getProcAddress("glGetHistogramEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetHistogramParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetHistogramParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetHistogramParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetHistogramParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetHistogramParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetHistogramParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetHistogramParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetHistogramParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetHistogramParameterxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetHistogramParameterxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLboolean, GLint, GLenum, GLuint64> _glGetImageHandleARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLboolean, GLint, GLenum, GLuint64>)getProcAddress("glGetImageHandleARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLboolean, GLint, GLenum, GLuint64> _glGetImageHandleNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLboolean, GLint, GLenum, GLuint64>)getProcAddress("glGetImageHandleNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetImageTransformParameterfvHP = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetImageTransformParameterfvHP");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetImageTransformParameterivHP = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetImageTransformParameterivHP");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLsizei, GLsizei*, GLcharARB*, void> _glGetInfoLogARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLsizei, GLsizei*, GLcharARB*, void>)getProcAddress("glGetInfoLogARB");
	private readonly delegate* unmanaged[Stdcall]<GLint> _glGetInstrumentsSGIX = (delegate* unmanaged[Stdcall]<GLint>)getProcAddress("glGetInstrumentsSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint64*, void> _glGetInteger64i_v = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint64*, void>)getProcAddress("glGetInteger64i_v");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint64*, void> _glGetInteger64v = (delegate* unmanaged[Stdcall]<GLenum, GLint64*, void>)getProcAddress("glGetInteger64v");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint64*, void> _glGetInteger64vAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLint64*, void>)getProcAddress("glGetInteger64vAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint64*, void> _glGetInteger64vEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint64*, void>)getProcAddress("glGetInteger64vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void> _glGetIntegerIndexedvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void>)getProcAddress("glGetIntegerIndexedvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void> _glGetIntegeri_v = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void>)getProcAddress("glGetIntegeri_v");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void> _glGetIntegeri_vEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void>)getProcAddress("glGetIntegeri_vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint64EXT*, void> _glGetIntegerui64i_vNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint64EXT*, void>)getProcAddress("glGetIntegerui64i_vNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint64EXT*, void> _glGetIntegerui64vNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint64EXT*, void>)getProcAddress("glGetIntegerui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glGetIntegerv = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glGetIntegerv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLsizei, GLint*, void> _glGetInternalformatSampleivNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLenum, GLsizei, GLint*, void>)getProcAddress("glGetInternalformatSampleivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLint64*, void> _glGetInternalformati64v = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLint64*, void>)getProcAddress("glGetInternalformati64v");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLint*, void> _glGetInternalformativ = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, GLint*, void>)getProcAddress("glGetInternalformativ");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean*, void> _glGetInvariantBooleanvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean*, void>)getProcAddress("glGetInvariantBooleanvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetInvariantFloatvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetInvariantFloatvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetInvariantIntegervEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetInvariantIntegervEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetLightfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetLightfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetLightiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetLightiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetLightxOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetLightxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetLightxv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetLightxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetLightxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetLightxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetListParameterfvSGIX = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetListParameterfvSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetListParameterivSGIX = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetListParameterivSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean*, void> _glGetLocalConstantBooleanvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean*, void>)getProcAddress("glGetLocalConstantBooleanvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetLocalConstantFloatvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetLocalConstantFloatvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetLocalConstantIntegervEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetLocalConstantIntegervEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLfloat*, void> _glGetMapAttribParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetMapAttribParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLint*, void> _glGetMapAttribParameterivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLint*, void>)getProcAddress("glGetMapAttribParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, void*, void> _glGetMapControlPointsNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, void*, void>)getProcAddress("glGetMapControlPointsNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetMapParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetMapParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetMapParameterivNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetMapParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLdouble*, void> _glGetMapdv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLdouble*, void>)getProcAddress("glGetMapdv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetMapfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetMapfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetMapiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetMapiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetMapxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetMapxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetMaterialfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetMaterialfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetMaterialiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetMaterialiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glGetMaterialxOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glGetMaterialxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetMaterialxv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetMaterialxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetMaterialxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetMaterialxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLsizei, GLuint*, void> _glGetMemoryObjectDetachedResourcesuivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLsizei, GLuint*, void>)getProcAddress("glGetMemoryObjectDetachedResourcesuivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetMemoryObjectParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetMemoryObjectParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, void*, void> _glGetMinmax = (delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, void*, void>)getProcAddress("glGetMinmax");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, void*, void> _glGetMinmaxEXT = (delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, void*, void>)getProcAddress("glGetMinmaxEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetMinmaxParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetMinmaxParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetMinmaxParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetMinmaxParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetMinmaxParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetMinmaxParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetMinmaxParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetMinmaxParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void> _glGetMultiTexEnvfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetMultiTexEnvfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glGetMultiTexEnvivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glGetMultiTexEnvivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLdouble*, void> _glGetMultiTexGendvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLdouble*, void>)getProcAddress("glGetMultiTexGendvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void> _glGetMultiTexGenfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetMultiTexGenfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glGetMultiTexGenivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glGetMultiTexGenivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLenum, void*, void> _glGetMultiTexImageEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLenum, void*, void>)getProcAddress("glGetMultiTexImageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLfloat*, void> _glGetMultiTexLevelParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLfloat*, void>)getProcAddress("glGetMultiTexLevelParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLint*, void> _glGetMultiTexLevelParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLenum, GLint*, void>)getProcAddress("glGetMultiTexLevelParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glGetMultiTexParameterIivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glGetMultiTexParameterIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint*, void> _glGetMultiTexParameterIuivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint*, void>)getProcAddress("glGetMultiTexParameterIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void> _glGetMultiTexParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetMultiTexParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glGetMultiTexParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glGetMultiTexParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glGetMultisamplefv = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetMultisamplefv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glGetMultisamplefvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetMultisamplefvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64*, void> _glGetNamedBufferParameteri64v = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64*, void>)getProcAddress("glGetNamedBufferParameteri64v");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetNamedBufferParameteriv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetNamedBufferParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetNamedBufferParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetNamedBufferParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64EXT*, void> _glGetNamedBufferParameterui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64EXT*, void>)getProcAddress("glGetNamedBufferParameterui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glGetNamedBufferPointerv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glGetNamedBufferPointerv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glGetNamedBufferPointervEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glGetNamedBufferPointervEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void> _glGetNamedBufferSubData = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void>)getProcAddress("glGetNamedBufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void> _glGetNamedBufferSubDataEXT = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void>)getProcAddress("glGetNamedBufferSubDataEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLuint, GLsizei, GLfloat*, void> _glGetNamedFramebufferParameterfvAMD = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glGetNamedFramebufferParameterfvAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> _glGetNamedFramebufferAttachmentParameteriv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void>)getProcAddress("glGetNamedFramebufferAttachmentParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> _glGetNamedFramebufferAttachmentParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void>)getProcAddress("glGetNamedFramebufferAttachmentParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetNamedFramebufferParameteriv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetNamedFramebufferParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetNamedFramebufferParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetNamedFramebufferParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint*, void> _glGetNamedProgramLocalParameterIivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint*, void>)getProcAddress("glGetNamedProgramLocalParameterIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLuint*, void> _glGetNamedProgramLocalParameterIuivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLuint*, void>)getProcAddress("glGetNamedProgramLocalParameterIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLdouble*, void> _glGetNamedProgramLocalParameterdvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLdouble*, void>)getProcAddress("glGetNamedProgramLocalParameterdvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLfloat*, void> _glGetNamedProgramLocalParameterfvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetNamedProgramLocalParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void*, void> _glGetNamedProgramStringEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, void*, void>)getProcAddress("glGetNamedProgramStringEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> _glGetNamedProgramivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void>)getProcAddress("glGetNamedProgramivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetNamedRenderbufferParameteriv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetNamedRenderbufferParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetNamedRenderbufferParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetNamedRenderbufferParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLchar*, GLsizei, GLint*, GLchar*, void> _glGetNamedStringARB = (delegate* unmanaged[Stdcall]<GLint, GLchar*, GLsizei, GLint*, GLchar*, void>)getProcAddress("glGetNamedStringARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLchar*, GLenum, GLint*, void> _glGetNamedStringivARB = (delegate* unmanaged[Stdcall]<GLint, GLchar*, GLenum, GLint*, void>)getProcAddress("glGetNamedStringivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glGetNextPerfQueryIdINTEL = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glGetNextPerfQueryIdINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetObjectBufferfvATI = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetObjectBufferfvATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetObjectBufferivATI = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetObjectBufferivATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetObjectLabel = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetObjectLabel");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetObjectLabelEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetObjectLabelEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetObjectLabelKHR = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetObjectLabelKHR");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLenum, GLfloat*, void> _glGetObjectParameterfvARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLenum, GLfloat*, void>)getProcAddress("glGetObjectParameterfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLint*, void> _glGetObjectParameterivAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLint*, void>)getProcAddress("glGetObjectParameterivAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLenum, GLint*, void> _glGetObjectParameterivARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLenum, GLint*, void>)getProcAddress("glGetObjectParameterivARB");
	private readonly delegate* unmanaged[Stdcall]<void*, GLsizei, GLsizei*, GLchar*, void> _glGetObjectPtrLabel = (delegate* unmanaged[Stdcall]<void*, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetObjectPtrLabel");
	private readonly delegate* unmanaged[Stdcall]<void*, GLsizei, GLsizei*, GLchar*, void> _glGetObjectPtrLabelKHR = (delegate* unmanaged[Stdcall]<void*, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetObjectPtrLabelKHR");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetOcclusionQueryivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetOcclusionQueryivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetOcclusionQueryuivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetOcclusionQueryuivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetPathColorGenfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetPathColorGenfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetPathColorGenivNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetPathColorGenivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> _glGetPathCommandsNV = (delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void>)getProcAddress("glGetPathCommandsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glGetPathCoordsNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glGetPathCoordsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glGetPathDashArrayNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glGetPathDashArrayNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLfloat> _glGetPathLengthNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLfloat>)getProcAddress("glGetPathLengthNV");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, GLuint, GLsizei, GLsizei, GLfloat*, void> _glGetPathMetricRangeNV = (delegate* unmanaged[Stdcall]<GLbitfield, GLuint, GLsizei, GLsizei, GLfloat*, void>)getProcAddress("glGetPathMetricRangeNV");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, GLsizei, GLenum, void*, GLuint, GLsizei, GLfloat*, void> _glGetPathMetricsNV = (delegate* unmanaged[Stdcall]<GLbitfield, GLsizei, GLenum, void*, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glGetPathMetricsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetPathParameterfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetPathParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetPathParameterivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetPathParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLuint, GLfloat, GLfloat, GLenum, GLfloat*, void> _glGetPathSpacingNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, void*, GLuint, GLfloat, GLfloat, GLenum, GLfloat*, void>)getProcAddress("glGetPathSpacingNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetPathTexGenfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetPathTexGenfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetPathTexGenivNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetPathTexGenivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLchar*, GLuint, GLchar*, GLuint*, GLuint*, GLuint*, GLuint*, GLuint64*, void> _glGetPerfCounterInfoINTEL = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLchar*, GLuint, GLchar*, GLuint*, GLuint*, GLuint*, GLuint*, GLuint64*, void>)getProcAddress("glGetPerfCounterInfoINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLuint*, GLint*, void> _glGetPerfMonitorCounterDataAMD = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLuint*, GLint*, void>)getProcAddress("glGetPerfMonitorCounterDataAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, void*, void> _glGetPerfMonitorCounterInfoAMD = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, void*, void>)getProcAddress("glGetPerfMonitorCounterInfoAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetPerfMonitorCounterStringAMD = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetPerfMonitorCounterStringAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, GLint*, GLsizei, GLuint*, void> _glGetPerfMonitorCountersAMD = (delegate* unmanaged[Stdcall]<GLuint, GLint*, GLint*, GLsizei, GLuint*, void>)getProcAddress("glGetPerfMonitorCountersAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetPerfMonitorGroupStringAMD = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetPerfMonitorGroupStringAMD");
	private readonly delegate* unmanaged[Stdcall]<GLint*, GLsizei, GLuint*, void> _glGetPerfMonitorGroupsAMD = (delegate* unmanaged[Stdcall]<GLint*, GLsizei, GLuint*, void>)getProcAddress("glGetPerfMonitorGroupsAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, void*, GLuint*, void> _glGetPerfQueryDataINTEL = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, void*, GLuint*, void>)getProcAddress("glGetPerfQueryDataINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLchar*, GLuint*, void> _glGetPerfQueryIdByNameINTEL = (delegate* unmanaged[Stdcall]<GLchar*, GLuint*, void>)getProcAddress("glGetPerfQueryIdByNameINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLchar*, GLuint*, GLuint*, GLuint*, GLuint*, void> _glGetPerfQueryInfoINTEL = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLchar*, GLuint*, GLuint*, GLuint*, GLuint*, void>)getProcAddress("glGetPerfQueryInfoINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glGetPixelMapfv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glGetPixelMapfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glGetPixelMapuiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glGetPixelMapuiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLushort*, void> _glGetPixelMapusv = (delegate* unmanaged[Stdcall]<GLenum, GLushort*, void>)getProcAddress("glGetPixelMapusv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLfixed*, void> _glGetPixelMapxv = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLfixed*, void>)getProcAddress("glGetPixelMapxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glGetPixelTexGenParameterfvSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glGetPixelTexGenParameterfvSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glGetPixelTexGenParameterivSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glGetPixelTexGenParameterivSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetPixelTransformParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetPixelTransformParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetPixelTransformParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetPixelTransformParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void*, void> _glGetPointerIndexedvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void*, void>)getProcAddress("glGetPointerIndexedvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void*, void> _glGetPointeri_vEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void*, void>)getProcAddress("glGetPointeri_vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> _glGetPointerv = (delegate* unmanaged[Stdcall]<GLenum, void*, void>)getProcAddress("glGetPointerv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> _glGetPointervEXT = (delegate* unmanaged[Stdcall]<GLenum, void*, void>)getProcAddress("glGetPointervEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> _glGetPointervKHR = (delegate* unmanaged[Stdcall]<GLenum, void*, void>)getProcAddress("glGetPointervKHR");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, void> _glGetPolygonStipple = (delegate* unmanaged[Stdcall]<GLubyte*, void>)getProcAddress("glGetPolygonStipple");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLenum*, void*, void> _glGetProgramBinary = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLenum*, void*, void>)getProcAddress("glGetProgramBinary");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLenum*, void*, void> _glGetProgramBinaryOES = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLenum*, void*, void>)getProcAddress("glGetProgramBinaryOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void> _glGetProgramEnvParameterIivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void>)getProcAddress("glGetProgramEnvParameterIivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void> _glGetProgramEnvParameterIuivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void>)getProcAddress("glGetProgramEnvParameterIuivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void> _glGetProgramEnvParameterdvARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void>)getProcAddress("glGetProgramEnvParameterdvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glGetProgramEnvParameterfvARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetProgramEnvParameterfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetProgramInfoLog = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetProgramInfoLog");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> _glGetProgramInterfaceiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void>)getProcAddress("glGetProgramInterfaceiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void> _glGetProgramLocalParameterIivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void>)getProcAddress("glGetProgramLocalParameterIivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void> _glGetProgramLocalParameterIuivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void>)getProcAddress("glGetProgramLocalParameterIuivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void> _glGetProgramLocalParameterdvARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void>)getProcAddress("glGetProgramLocalParameterdvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glGetProgramLocalParameterfvARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glGetProgramLocalParameterfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLdouble*, void> _glGetProgramNamedParameterdvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLdouble*, void>)getProcAddress("glGetProgramNamedParameterdvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLfloat*, void> _glGetProgramNamedParameterfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLfloat*, void>)getProcAddress("glGetProgramNamedParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLdouble*, void> _glGetProgramParameterdvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLdouble*, void>)getProcAddress("glGetProgramParameterdvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLfloat*, void> _glGetProgramParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetProgramParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetProgramPipelineInfoLog = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetProgramPipelineInfoLog");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetProgramPipelineInfoLogEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetProgramPipelineInfoLogEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetProgramPipelineiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetProgramPipelineiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetProgramPipelineivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetProgramPipelineivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLuint> _glGetProgramResourceIndex = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLuint>)getProcAddress("glGetProgramResourceIndex");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint> _glGetProgramResourceLocation = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint>)getProcAddress("glGetProgramResourceLocation");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint> _glGetProgramResourceLocationIndex = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint>)getProcAddress("glGetProgramResourceLocationIndex");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint> _glGetProgramResourceLocationIndexEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint>)getProcAddress("glGetProgramResourceLocationIndexEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetProgramResourceName = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetProgramResourceName");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLenum*, GLsizei, GLsizei*, GLfloat*, void> _glGetProgramResourcefvNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLenum*, GLsizei, GLsizei*, GLfloat*, void>)getProcAddress("glGetProgramResourcefvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLenum*, GLsizei, GLsizei*, GLint*, void> _glGetProgramResourceiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLenum*, GLsizei, GLsizei*, GLint*, void>)getProcAddress("glGetProgramResourceiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> _glGetProgramStageiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void>)getProcAddress("glGetProgramStageiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void> _glGetProgramStringARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void>)getProcAddress("glGetProgramStringARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLubyte*, void> _glGetProgramStringNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLubyte*, void>)getProcAddress("glGetProgramStringNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void> _glGetProgramSubroutineParameteruivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void>)getProcAddress("glGetProgramSubroutineParameteruivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetProgramiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetProgramiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetProgramivARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetProgramivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetProgramivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetProgramivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void> _glGetQueryBufferObjecti64v = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void>)getProcAddress("glGetQueryBufferObjecti64v");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void> _glGetQueryBufferObjectiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void>)getProcAddress("glGetQueryBufferObjectiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void> _glGetQueryBufferObjectui64v = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void>)getProcAddress("glGetQueryBufferObjectui64v");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void> _glGetQueryBufferObjectuiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLintptr, void>)getProcAddress("glGetQueryBufferObjectuiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLint*, void> _glGetQueryIndexediv = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLint*, void>)getProcAddress("glGetQueryIndexediv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64*, void> _glGetQueryObjecti64v = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64*, void>)getProcAddress("glGetQueryObjecti64v");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64*, void> _glGetQueryObjecti64vEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64*, void>)getProcAddress("glGetQueryObjecti64vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetQueryObjectiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetQueryObjectiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetQueryObjectivARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetQueryObjectivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetQueryObjectivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetQueryObjectivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64*, void> _glGetQueryObjectui64v = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64*, void>)getProcAddress("glGetQueryObjectui64v");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64*, void> _glGetQueryObjectui64vEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64*, void>)getProcAddress("glGetQueryObjectui64vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetQueryObjectuiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetQueryObjectuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetQueryObjectuivARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetQueryObjectuivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetQueryObjectuivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetQueryObjectuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetQueryiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetQueryiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetQueryivARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetQueryivARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetQueryivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetQueryivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetRenderbufferParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetRenderbufferParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetRenderbufferParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetRenderbufferParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetRenderbufferParameterivOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetRenderbufferParameterivOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetSamplerParameterIiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetSamplerParameterIiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetSamplerParameterIivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetSamplerParameterIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetSamplerParameterIivOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetSamplerParameterIivOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetSamplerParameterIuiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetSamplerParameterIuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetSamplerParameterIuivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetSamplerParameterIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetSamplerParameterIuivOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetSamplerParameterIuivOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetSamplerParameterfv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetSamplerParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetSamplerParameteriv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetSamplerParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetSemaphoreParameterivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetSemaphoreParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64*, void> _glGetSemaphoreParameterui64vEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64*, void>)getProcAddress("glGetSemaphoreParameterui64vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void*, void*, void> _glGetSeparableFilter = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void*, void*, void>)getProcAddress("glGetSeparableFilter");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void*, void*, void> _glGetSeparableFilterEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void*, void*, void*, void>)getProcAddress("glGetSeparableFilterEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetShaderInfoLog = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetShaderInfoLog");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, GLint*, void> _glGetShaderPrecisionFormat = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, GLint*, void>)getProcAddress("glGetShaderPrecisionFormat");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetShaderSource = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetShaderSource");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLsizei, GLsizei*, GLcharARB*, void> _glGetShaderSourceARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLsizei, GLsizei*, GLcharARB*, void>)getProcAddress("glGetShaderSourceARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetShaderiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetShaderiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum*, void> _glGetShadingRateImagePaletteNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum*, void>)getProcAddress("glGetShadingRateImagePaletteNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLint*, void> _glGetShadingRateSampleLocationivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLint*, void>)getProcAddress("glGetShadingRateSampleLocationivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glGetSharpenTexFuncSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glGetSharpenTexFuncSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLushort> _glGetStageIndexNV = (delegate* unmanaged[Stdcall]<GLenum, GLushort>)getProcAddress("glGetStageIndexNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLubyte*> _glGetString = (delegate* unmanaged[Stdcall]<GLenum, GLubyte*>)getProcAddress("glGetString");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLubyte*> _glGetStringi = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLubyte*>)getProcAddress("glGetStringi");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLuint> _glGetSubroutineIndex = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLuint>)getProcAddress("glGetSubroutineIndex");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint> _glGetSubroutineUniformLocation = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLchar*, GLint>)getProcAddress("glGetSubroutineUniformLocation");
	private readonly delegate* unmanaged[Stdcall]<GLsync, GLenum, GLsizei, GLsizei*, GLint*, void> _glGetSynciv = (delegate* unmanaged[Stdcall]<GLsync, GLenum, GLsizei, GLsizei*, GLint*, void>)getProcAddress("glGetSynciv");
	private readonly delegate* unmanaged[Stdcall]<GLsync, GLenum, GLsizei, GLsizei*, GLint*, void> _glGetSyncivAPPLE = (delegate* unmanaged[Stdcall]<GLsync, GLenum, GLsizei, GLsizei*, GLint*, void>)getProcAddress("glGetSyncivAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glGetTexBumpParameterfvATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glGetTexBumpParameterfvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glGetTexBumpParameterivATI = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glGetTexBumpParameterivATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetTexEnvfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetTexEnvfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetTexEnviv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetTexEnviv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetTexEnvxv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetTexEnvxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetTexEnvxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetTexEnvxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetTexFilterFuncSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetTexFilterFuncSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLdouble*, void> _glGetTexGendv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLdouble*, void>)getProcAddress("glGetTexGendv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetTexGenfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetTexGenfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetTexGenfvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetTexGenfvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetTexGeniv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetTexGeniv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetTexGenivOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetTexGenivOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetTexGenxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetTexGenxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLenum, void*, void> _glGetTexImage = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLenum, void*, void>)getProcAddress("glGetTexImage");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLfloat*, void> _glGetTexLevelParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLfloat*, void>)getProcAddress("glGetTexLevelParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint*, void> _glGetTexLevelParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLint*, void>)getProcAddress("glGetTexLevelParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLfixed*, void> _glGetTexLevelParameterxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLfixed*, void>)getProcAddress("glGetTexLevelParameterxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetTexParameterIiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetTexParameterIiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetTexParameterIivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetTexParameterIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetTexParameterIivOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetTexParameterIivOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glGetTexParameterIuiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glGetTexParameterIuiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glGetTexParameterIuivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glGetTexParameterIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glGetTexParameterIuivOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glGetTexParameterIuivOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void> _glGetTexParameterPointervAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, void>)getProcAddress("glGetTexParameterPointervAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glGetTexParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetTexParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetTexParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetTexParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetTexParameterxv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetTexParameterxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glGetTexParameterxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glGetTexParameterxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64> _glGetTextureHandleARB = (delegate* unmanaged[Stdcall]<GLuint, GLuint64>)getProcAddress("glGetTextureHandleARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64> _glGetTextureHandleIMG = (delegate* unmanaged[Stdcall]<GLuint, GLuint64>)getProcAddress("glGetTextureHandleIMG");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64> _glGetTextureHandleNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64>)getProcAddress("glGetTextureHandleNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLenum, GLsizei, void*, void> _glGetTextureImage = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetTextureImage");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLenum, void*, void> _glGetTextureImageEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLenum, void*, void>)getProcAddress("glGetTextureImageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLfloat*, void> _glGetTextureLevelParameterfv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLfloat*, void>)getProcAddress("glGetTextureLevelParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLfloat*, void> _glGetTextureLevelParameterfvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLfloat*, void>)getProcAddress("glGetTextureLevelParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLint*, void> _glGetTextureLevelParameteriv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLint*, void>)getProcAddress("glGetTextureLevelParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLint*, void> _glGetTextureLevelParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLenum, GLint*, void>)getProcAddress("glGetTextureLevelParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetTextureParameterIiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetTextureParameterIiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> _glGetTextureParameterIivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void>)getProcAddress("glGetTextureParameterIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetTextureParameterIuiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetTextureParameterIuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint*, void> _glGetTextureParameterIuivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint*, void>)getProcAddress("glGetTextureParameterIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetTextureParameterfv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetTextureParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLfloat*, void> _glGetTextureParameterfvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLfloat*, void>)getProcAddress("glGetTextureParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetTextureParameteriv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetTextureParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> _glGetTextureParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void>)getProcAddress("glGetTextureParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64> _glGetTextureSamplerHandleARB = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64>)getProcAddress("glGetTextureSamplerHandleARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64> _glGetTextureSamplerHandleIMG = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64>)getProcAddress("glGetTextureSamplerHandleIMG");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64> _glGetTextureSamplerHandleNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64>)getProcAddress("glGetTextureSamplerHandleNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void> _glGetTextureSubImage = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetTextureSubImage");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLint*, void> _glGetTrackMatrixivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLint*, void>)getProcAddress("glGetTrackMatrixivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*, void> _glGetTransformFeedbackVarying = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*, void>)getProcAddress("glGetTransformFeedbackVarying");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*, void> _glGetTransformFeedbackVaryingEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLsizei*, GLsizei*, GLenum*, GLchar*, void>)getProcAddress("glGetTransformFeedbackVaryingEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint*, void> _glGetTransformFeedbackVaryingNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint*, void>)getProcAddress("glGetTransformFeedbackVaryingNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint64*, void> _glGetTransformFeedbacki64_v = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint64*, void>)getProcAddress("glGetTransformFeedbacki64_v");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint*, void> _glGetTransformFeedbacki_v = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint*, void>)getProcAddress("glGetTransformFeedbacki_v");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetTransformFeedbackiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetTransformFeedbackiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void> _glGetTranslatedShaderSourceANGLE = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei*, GLchar*, void>)getProcAddress("glGetTranslatedShaderSourceANGLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLuint> _glGetUniformBlockIndex = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLuint>)getProcAddress("glGetUniformBlockIndex");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint> _glGetUniformBufferSizeEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint>)getProcAddress("glGetUniformBufferSizeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLuint*, void> _glGetUniformIndices = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLuint*, void>)getProcAddress("glGetUniformIndices");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint> _glGetUniformLocation = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint>)getProcAddress("glGetUniformLocation");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLcharARB*, GLint> _glGetUniformLocationARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLcharARB*, GLint>)getProcAddress("glGetUniformLocationARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLintptr> _glGetUniformOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLintptr>)getProcAddress("glGetUniformOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint*, void> _glGetUniformSubroutineuiv = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint*, void>)getProcAddress("glGetUniformSubroutineuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble*, void> _glGetUniformdv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble*, void>)getProcAddress("glGetUniformdv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat*, void> _glGetUniformfv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat*, void>)getProcAddress("glGetUniformfv");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLint, GLfloat*, void> _glGetUniformfvARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLint, GLfloat*, void>)getProcAddress("glGetUniformfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64*, void> _glGetUniformi64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64*, void>)getProcAddress("glGetUniformi64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT*, void> _glGetUniformi64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT*, void>)getProcAddress("glGetUniformi64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint*, void> _glGetUniformiv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint*, void>)getProcAddress("glGetUniformiv");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLint, GLint*, void> _glGetUniformivARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLint, GLint*, void>)getProcAddress("glGetUniformivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64*, void> _glGetUniformui64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64*, void>)getProcAddress("glGetUniformui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT*, void> _glGetUniformui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT*, void>)getProcAddress("glGetUniformui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint*, void> _glGetUniformuiv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint*, void>)getProcAddress("glGetUniformuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint*, void> _glGetUniformuivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint*, void>)getProcAddress("glGetUniformuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLubyte*, void> _glGetUnsignedBytevEXT = (delegate* unmanaged[Stdcall]<GLenum, GLubyte*, void>)getProcAddress("glGetUnsignedBytevEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLubyte*, void> _glGetUnsignedBytei_vEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLubyte*, void>)getProcAddress("glGetUnsignedBytei_vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetVariantArrayObjectfvATI = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetVariantArrayObjectfvATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVariantArrayObjectivATI = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVariantArrayObjectivATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean*, void> _glGetVariantBooleanvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean*, void>)getProcAddress("glGetVariantBooleanvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetVariantFloatvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetVariantFloatvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVariantIntegervEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVariantIntegervEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glGetVariantPointervEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glGetVariantPointervEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint> _glGetVaryingLocationNV = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLint>)getProcAddress("glGetVaryingLocationNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint64*, void> _glGetVertexArrayIndexed64iv = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint64*, void>)getProcAddress("glGetVertexArrayIndexed64iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> _glGetVertexArrayIndexediv = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexArrayIndexediv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> _glGetVertexArrayIntegeri_vEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexArrayIntegeri_vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVertexArrayIntegervEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexArrayIntegervEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, void*, void> _glGetVertexArrayPointeri_vEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, void*, void>)getProcAddress("glGetVertexArrayPointeri_vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glGetVertexArrayPointervEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glGetVertexArrayPointervEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVertexArrayiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexArrayiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetVertexAttribArrayObjectfvATI = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetVertexAttribArrayObjectfvATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVertexAttribArrayObjectivATI = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexAttribArrayObjectivATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVertexAttribIiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexAttribIiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVertexAttribIivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexAttribIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetVertexAttribIuiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetVertexAttribIuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetVertexAttribIuivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetVertexAttribIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void> _glGetVertexAttribLdv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void>)getProcAddress("glGetVertexAttribLdv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void> _glGetVertexAttribLdvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void>)getProcAddress("glGetVertexAttribLdvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64EXT*, void> _glGetVertexAttribLi64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64EXT*, void>)getProcAddress("glGetVertexAttribLi64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64EXT*, void> _glGetVertexAttribLui64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64EXT*, void>)getProcAddress("glGetVertexAttribLui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64EXT*, void> _glGetVertexAttribLui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64EXT*, void>)getProcAddress("glGetVertexAttribLui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glGetVertexAttribPointerv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glGetVertexAttribPointerv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glGetVertexAttribPointervARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glGetVertexAttribPointervARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glGetVertexAttribPointervNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glGetVertexAttribPointervNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void> _glGetVertexAttribdv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void>)getProcAddress("glGetVertexAttribdv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void> _glGetVertexAttribdvARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void>)getProcAddress("glGetVertexAttribdvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void> _glGetVertexAttribdvNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLdouble*, void>)getProcAddress("glGetVertexAttribdvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetVertexAttribfv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetVertexAttribfv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetVertexAttribfvARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetVertexAttribfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glGetVertexAttribfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetVertexAttribfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVertexAttribiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexAttribiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVertexAttribivARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexAttribivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVertexAttribivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVertexAttribivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLdouble*, void> _glGetVideoCaptureStreamdvNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLdouble*, void>)getProcAddress("glGetVideoCaptureStreamdvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLfloat*, void> _glGetVideoCaptureStreamfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLfloat*, void>)getProcAddress("glGetVideoCaptureStreamfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> _glGetVideoCaptureStreamivNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void>)getProcAddress("glGetVideoCaptureStreamivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVideoCaptureivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVideoCaptureivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64EXT*, void> _glGetVideoi64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint64EXT*, void>)getProcAddress("glGetVideoi64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glGetVideoivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glGetVideoivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64EXT*, void> _glGetVideoui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64EXT*, void>)getProcAddress("glGetVideoui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glGetVideouivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glGetVideouivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, void> _glGetnColorTable = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnColorTable");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, void> _glGetnColorTableARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnColorTableARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void*, void> _glGetnCompressedTexImage = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void*, void>)getProcAddress("glGetnCompressedTexImage");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void*, void> _glGetnCompressedTexImageARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLsizei, void*, void>)getProcAddress("glGetnCompressedTexImageARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, void> _glGetnConvolutionFilter = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnConvolutionFilter");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, void> _glGetnConvolutionFilterARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnConvolutionFilterARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, GLsizei, void*, void> _glGetnHistogram = (delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnHistogram");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, GLsizei, void*, void> _glGetnHistogramARB = (delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnHistogramARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLdouble*, void> _glGetnMapdv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLdouble*, void>)getProcAddress("glGetnMapdv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLdouble*, void> _glGetnMapdvARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLdouble*, void>)getProcAddress("glGetnMapdvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLfloat*, void> _glGetnMapfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLfloat*, void>)getProcAddress("glGetnMapfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLfloat*, void> _glGetnMapfvARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLfloat*, void>)getProcAddress("glGetnMapfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLint*, void> _glGetnMapiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLint*, void>)getProcAddress("glGetnMapiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLint*, void> _glGetnMapivARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLint*, void>)getProcAddress("glGetnMapivARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, GLsizei, void*, void> _glGetnMinmax = (delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnMinmax");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, GLsizei, void*, void> _glGetnMinmaxARB = (delegate* unmanaged[Stdcall]<GLenum, GLboolean, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnMinmaxARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void> _glGetnPixelMapfv = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void>)getProcAddress("glGetnPixelMapfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void> _glGetnPixelMapfvARB = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void>)getProcAddress("glGetnPixelMapfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> _glGetnPixelMapuiv = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void>)getProcAddress("glGetnPixelMapuiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> _glGetnPixelMapuivARB = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void>)getProcAddress("glGetnPixelMapuivARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLushort*, void> _glGetnPixelMapusv = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLushort*, void>)getProcAddress("glGetnPixelMapusv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLushort*, void> _glGetnPixelMapusvARB = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLushort*, void>)getProcAddress("glGetnPixelMapusvARB");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLubyte*, void> _glGetnPolygonStipple = (delegate* unmanaged[Stdcall]<GLsizei, GLubyte*, void>)getProcAddress("glGetnPolygonStipple");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLubyte*, void> _glGetnPolygonStippleARB = (delegate* unmanaged[Stdcall]<GLsizei, GLubyte*, void>)getProcAddress("glGetnPolygonStippleARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, GLsizei, void*, void*, void> _glGetnSeparableFilter = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, GLsizei, void*, void*, void>)getProcAddress("glGetnSeparableFilter");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, GLsizei, void*, void*, void> _glGetnSeparableFilterARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLsizei, void*, GLsizei, void*, void*, void>)getProcAddress("glGetnSeparableFilterARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLenum, GLsizei, void*, void> _glGetnTexImage = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnTexImage");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLenum, GLsizei, void*, void> _glGetnTexImageARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glGetnTexImageARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glGetnUniformdv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glGetnUniformdv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glGetnUniformdvARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glGetnUniformdvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glGetnUniformfv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glGetnUniformfv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glGetnUniformfvARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glGetnUniformfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glGetnUniformfvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glGetnUniformfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glGetnUniformfvKHR = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glGetnUniformfvKHR");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void> _glGetnUniformi64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void>)getProcAddress("glGetnUniformi64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glGetnUniformiv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glGetnUniformiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glGetnUniformivARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glGetnUniformivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glGetnUniformivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glGetnUniformivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glGetnUniformivKHR = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glGetnUniformivKHR");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void> _glGetnUniformui64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void>)getProcAddress("glGetnUniformui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glGetnUniformuiv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glGetnUniformuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glGetnUniformuivARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glGetnUniformuivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glGetnUniformuivKHR = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glGetnUniformuivKHR");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, void> _glGlobalAlphaFactorbSUN = (delegate* unmanaged[Stdcall]<GLbyte, void>)getProcAddress("glGlobalAlphaFactorbSUN");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, void> _glGlobalAlphaFactordSUN = (delegate* unmanaged[Stdcall]<GLdouble, void>)getProcAddress("glGlobalAlphaFactordSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glGlobalAlphaFactorfSUN = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glGlobalAlphaFactorfSUN");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glGlobalAlphaFactoriSUN = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glGlobalAlphaFactoriSUN");
	private readonly delegate* unmanaged[Stdcall]<GLshort, void> _glGlobalAlphaFactorsSUN = (delegate* unmanaged[Stdcall]<GLshort, void>)getProcAddress("glGlobalAlphaFactorsSUN");
	private readonly delegate* unmanaged[Stdcall]<GLubyte, void> _glGlobalAlphaFactorubSUN = (delegate* unmanaged[Stdcall]<GLubyte, void>)getProcAddress("glGlobalAlphaFactorubSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glGlobalAlphaFactoruiSUN = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glGlobalAlphaFactoruiSUN");
	private readonly delegate* unmanaged[Stdcall]<GLushort, void> _glGlobalAlphaFactorusSUN = (delegate* unmanaged[Stdcall]<GLushort, void>)getProcAddress("glGlobalAlphaFactorusSUN");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glHint = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glHint");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glHintPGI = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glHintPGI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLboolean, void> _glHistogram = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLboolean, void>)getProcAddress("glHistogram");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLboolean, void> _glHistogramEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLboolean, void>)getProcAddress("glHistogramEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> _glIglooInterfaceSGIX = (delegate* unmanaged[Stdcall]<GLenum, void*, void>)getProcAddress("glIglooInterfaceSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glImageTransformParameterfHP = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glImageTransformParameterfHP");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glImageTransformParameterfvHP = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glImageTransformParameterfvHP");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glImageTransformParameteriHP = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glImageTransformParameteriHP");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glImageTransformParameterivHP = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glImageTransformParameterivHP");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLenum, GLint, void> _glImportMemoryFdEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLenum, GLint, void>)getProcAddress("glImportMemoryFdEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLenum, void*, void> _glImportMemoryWin32HandleEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLenum, void*, void>)getProcAddress("glImportMemoryWin32HandleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLenum, void*, void> _glImportMemoryWin32NameEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLenum, void*, void>)getProcAddress("glImportMemoryWin32NameEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glImportSemaphoreFdEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glImportSemaphoreFdEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glImportSemaphoreWin32HandleEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glImportSemaphoreWin32HandleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glImportSemaphoreWin32NameEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glImportSemaphoreWin32NameEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLbitfield, GLsync> _glImportSyncEXT = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLbitfield, GLsync>)getProcAddress("glImportSyncEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void> _glIndexFormatNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void>)getProcAddress("glIndexFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLclampf, void> _glIndexFuncEXT = (delegate* unmanaged[Stdcall]<GLenum, GLclampf, void>)getProcAddress("glIndexFuncEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glIndexMask = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glIndexMask");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glIndexMaterialEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glIndexMaterialEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glIndexPointer = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glIndexPointer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, void*, void> _glIndexPointerEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, void*, void>)getProcAddress("glIndexPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void*, GLint, void> _glIndexPointerListIBM = (delegate* unmanaged[Stdcall]<GLenum, GLint, void*, GLint, void>)getProcAddress("glIndexPointerListIBM");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, void> _glIndexd = (delegate* unmanaged[Stdcall]<GLdouble, void>)getProcAddress("glIndexd");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glIndexdv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glIndexdv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glIndexf = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glIndexf");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glIndexfv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glIndexfv");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glIndexi = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glIndexi");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glIndexiv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glIndexiv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, void> _glIndexs = (delegate* unmanaged[Stdcall]<GLshort, void>)getProcAddress("glIndexs");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glIndexsv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glIndexsv");
	private readonly delegate* unmanaged[Stdcall]<GLubyte, void> _glIndexub = (delegate* unmanaged[Stdcall]<GLubyte, void>)getProcAddress("glIndexub");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, void> _glIndexubv = (delegate* unmanaged[Stdcall]<GLubyte*, void>)getProcAddress("glIndexubv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glIndexxOES = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glIndexxOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glIndexxvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glIndexxvOES");
	private readonly delegate* unmanaged[Stdcall]<void> _glInitNames = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glInitNames");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glInsertComponentEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glInsertComponentEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLchar*, void> _glInsertEventMarkerEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLchar*, void>)getProcAddress("glInsertEventMarkerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLint*, void> _glInstrumentsBufferSGIX = (delegate* unmanaged[Stdcall]<GLsizei, GLint*, void>)getProcAddress("glInstrumentsBufferSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glInterleavedArrays = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glInterleavedArrays");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat, void> _glInterpolatePathsNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat, void>)getProcAddress("glInterpolatePathsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glInvalidateBufferData = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glInvalidateBufferData");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void> _glInvalidateBufferSubData = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glInvalidateBufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum*, void> _glInvalidateFramebuffer = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum*, void>)getProcAddress("glInvalidateFramebuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, void> _glInvalidateNamedFramebufferData = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, void>)getProcAddress("glInvalidateNamedFramebufferData");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLint, GLint, GLsizei, GLsizei, void> _glInvalidateNamedFramebufferSubData = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glInvalidateNamedFramebufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum*, GLint, GLint, GLsizei, GLsizei, void> _glInvalidateSubFramebuffer = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum*, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glInvalidateSubFramebuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, void> _glInvalidateTexImage = (delegate* unmanaged[Stdcall]<GLuint, GLint, void>)getProcAddress("glInvalidateTexImage");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void> _glInvalidateTexSubImage = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glInvalidateTexSubImage");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsAsyncMarkerSGIX = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsAsyncMarkerSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsBuffer = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsBufferARB = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsBufferARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean> _glIsBufferResidentNV = (delegate* unmanaged[Stdcall]<GLenum, GLboolean>)getProcAddress("glIsBufferResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsCommandListNV = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsCommandListNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean> _glIsEnabled = (delegate* unmanaged[Stdcall]<GLenum, GLboolean>)getProcAddress("glIsEnabled");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean> _glIsEnabledIndexedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean>)getProcAddress("glIsEnabledIndexedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean> _glIsEnabledi = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean>)getProcAddress("glIsEnabledi");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean> _glIsEnablediEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean>)getProcAddress("glIsEnablediEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean> _glIsEnablediNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean>)getProcAddress("glIsEnablediNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean> _glIsEnablediOES = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean>)getProcAddress("glIsEnablediOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsFenceAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsFenceAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsFenceNV = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsFenceNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsFramebuffer = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsFramebuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsFramebufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsFramebufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsFramebufferOES = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsFramebufferOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, GLboolean> _glIsImageHandleResidentARB = (delegate* unmanaged[Stdcall]<GLuint64, GLboolean>)getProcAddress("glIsImageHandleResidentARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, GLboolean> _glIsImageHandleResidentNV = (delegate* unmanaged[Stdcall]<GLuint64, GLboolean>)getProcAddress("glIsImageHandleResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsList = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsList");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsMemoryObjectEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsMemoryObjectEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean> _glIsNameAMD = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean>)getProcAddress("glIsNameAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsNamedBufferResidentNV = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsNamedBufferResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLchar*, GLboolean> _glIsNamedStringARB = (delegate* unmanaged[Stdcall]<GLint, GLchar*, GLboolean>)getProcAddress("glIsNamedStringARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsObjectBufferATI = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsObjectBufferATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsOcclusionQueryNV = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsOcclusionQueryNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsPathNV = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsPathNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, GLboolean> _glIsPointInFillPathNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, GLboolean>)getProcAddress("glIsPointInFillPathNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLboolean> _glIsPointInStrokePathNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLboolean>)getProcAddress("glIsPointInStrokePathNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsProgram = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsProgram");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsProgramARB = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsProgramARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsProgramNV = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsProgramNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsProgramPipeline = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsProgramPipeline");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsProgramPipelineEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsProgramPipelineEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsQuery = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsQuery");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsQueryARB = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsQueryARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsQueryEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsQueryEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsRenderbuffer = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsRenderbuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsRenderbufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsRenderbufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsRenderbufferOES = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsRenderbufferOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsSemaphoreEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsSemaphoreEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsSampler = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsSampler");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsShader = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsShader");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsStateNV = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsStateNV");
	private readonly delegate* unmanaged[Stdcall]<GLsync, GLboolean> _glIsSync = (delegate* unmanaged[Stdcall]<GLsync, GLboolean>)getProcAddress("glIsSync");
	private readonly delegate* unmanaged[Stdcall]<GLsync, GLboolean> _glIsSyncAPPLE = (delegate* unmanaged[Stdcall]<GLsync, GLboolean>)getProcAddress("glIsSyncAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsTexture = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsTexture");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsTextureEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsTextureEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, GLboolean> _glIsTextureHandleResidentARB = (delegate* unmanaged[Stdcall]<GLuint64, GLboolean>)getProcAddress("glIsTextureHandleResidentARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, GLboolean> _glIsTextureHandleResidentNV = (delegate* unmanaged[Stdcall]<GLuint64, GLboolean>)getProcAddress("glIsTextureHandleResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsTransformFeedback = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsTransformFeedback");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsTransformFeedbackNV = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsTransformFeedbackNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean> _glIsVariantEnabledEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean>)getProcAddress("glIsVariantEnabledEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsVertexArray = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsVertexArray");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsVertexArrayAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsVertexArrayAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glIsVertexArrayOES = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glIsVertexArrayOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean> _glIsVertexAttribEnabledAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean>)getProcAddress("glIsVertexAttribEnabledAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void> _glLGPUCopyImageSubDataNVX = (delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glLGPUCopyImageSubDataNVX");
	private readonly delegate* unmanaged[Stdcall]<void> _glLGPUInterlockNVX = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glLGPUInterlockNVX");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, GLuint, GLintptr, GLsizeiptr, void*, void> _glLGPUNamedBufferSubDataNVX = (delegate* unmanaged[Stdcall]<GLbitfield, GLuint, GLintptr, GLsizeiptr, void*, void>)getProcAddress("glLGPUNamedBufferSubDataNVX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void> _glLabelObjectEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void>)getProcAddress("glLabelObjectEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glLightEnviSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glLightEnviSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glLightModelf = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glLightModelf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glLightModelfv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glLightModelfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glLightModeli = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glLightModeli");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glLightModeliv = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glLightModeliv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glLightModelx = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glLightModelx");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glLightModelxOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glLightModelxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glLightModelxv = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glLightModelxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glLightModelxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glLightModelxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glLightf = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glLightf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glLightfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glLightfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glLighti = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glLighti");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glLightiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glLightiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glLightx = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glLightx");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glLightxOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glLightxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glLightxv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glLightxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glLightxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glLightxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLushort, void> _glLineStipple = (delegate* unmanaged[Stdcall]<GLint, GLushort, void>)getProcAddress("glLineStipple");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glLineWidth = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glLineWidth");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glLineWidthx = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glLineWidthx");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glLineWidthxOES = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glLineWidthxOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glLinkProgram = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glLinkProgram");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, void> _glLinkProgramARB = (delegate* unmanaged[Stdcall]<GLhandleARB, void>)getProcAddress("glLinkProgramARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glListBase = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glListBase");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void*, GLsizei*, GLuint*, GLuint*, GLuint, void> _glListDrawCommandsStatesClientNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void*, GLsizei*, GLuint*, GLuint*, GLuint, void>)getProcAddress("glListDrawCommandsStatesClientNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void> _glListParameterfSGIX = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void>)getProcAddress("glListParameterfSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glListParameterfvSGIX = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glListParameterfvSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glListParameteriSGIX = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glListParameteriSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glListParameterivSGIX = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glListParameterivSGIX");
	private readonly delegate* unmanaged[Stdcall]<void> _glLoadIdentity = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glLoadIdentity");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glLoadIdentityDeformationMapSGIX = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glLoadIdentityDeformationMapSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glLoadMatrixd = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glLoadMatrixd");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glLoadMatrixf = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glLoadMatrixf");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glLoadMatrixx = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glLoadMatrixx");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glLoadMatrixxOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glLoadMatrixxOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glLoadName = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glLoadName");
	private readonly delegate* unmanaged[Stdcall]<void> _glLoadPaletteFromModelViewMatrixOES = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glLoadPaletteFromModelViewMatrixOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLubyte*, void> _glLoadProgramNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLubyte*, void>)getProcAddress("glLoadProgramNV");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glLoadTransposeMatrixd = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glLoadTransposeMatrixd");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glLoadTransposeMatrixdARB = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glLoadTransposeMatrixdARB");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glLoadTransposeMatrixf = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glLoadTransposeMatrixf");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glLoadTransposeMatrixfARB = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glLoadTransposeMatrixfARB");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glLoadTransposeMatrixxOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glLoadTransposeMatrixxOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, void> _glLockArraysEXT = (delegate* unmanaged[Stdcall]<GLint, GLsizei, void>)getProcAddress("glLockArraysEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glLogicOp = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glLogicOp");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glMakeBufferNonResidentNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glMakeBufferNonResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glMakeBufferResidentNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glMakeBufferResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, void> _glMakeImageHandleNonResidentARB = (delegate* unmanaged[Stdcall]<GLuint64, void>)getProcAddress("glMakeImageHandleNonResidentARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, void> _glMakeImageHandleNonResidentNV = (delegate* unmanaged[Stdcall]<GLuint64, void>)getProcAddress("glMakeImageHandleNonResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, GLenum, void> _glMakeImageHandleResidentARB = (delegate* unmanaged[Stdcall]<GLuint64, GLenum, void>)getProcAddress("glMakeImageHandleResidentARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, GLenum, void> _glMakeImageHandleResidentNV = (delegate* unmanaged[Stdcall]<GLuint64, GLenum, void>)getProcAddress("glMakeImageHandleResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glMakeNamedBufferNonResidentNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glMakeNamedBufferNonResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glMakeNamedBufferResidentNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glMakeNamedBufferResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, void> _glMakeTextureHandleNonResidentARB = (delegate* unmanaged[Stdcall]<GLuint64, void>)getProcAddress("glMakeTextureHandleNonResidentARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, void> _glMakeTextureHandleNonResidentNV = (delegate* unmanaged[Stdcall]<GLuint64, void>)getProcAddress("glMakeTextureHandleNonResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, void> _glMakeTextureHandleResidentARB = (delegate* unmanaged[Stdcall]<GLuint64, void>)getProcAddress("glMakeTextureHandleResidentARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, void> _glMakeTextureHandleResidentNV = (delegate* unmanaged[Stdcall]<GLuint64, void>)getProcAddress("glMakeTextureHandleResidentNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*, void> _glMap1d = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble*, void>)getProcAddress("glMap1d");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*, void> _glMap1f = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat*, void>)getProcAddress("glMap1f");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, void> _glMap1xOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, void>)getProcAddress("glMap1xOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*, void> _glMap2d = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*, void>)getProcAddress("glMap2d");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*, void> _glMap2f = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*, void>)getProcAddress("glMap2f");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed, void> _glMap2xOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed, void>)getProcAddress("glMap2xOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*> _glMapBuffer = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*>)getProcAddress("glMapBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*> _glMapBufferARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*>)getProcAddress("glMapBufferARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*> _glMapBufferOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*>)getProcAddress("glMapBufferOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLbitfield, void*> _glMapBufferRange = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLbitfield, void*>)getProcAddress("glMapBufferRange");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLbitfield, void*> _glMapBufferRangeEXT = (delegate* unmanaged[Stdcall]<GLenum, GLintptr, GLsizeiptr, GLbitfield, void*>)getProcAddress("glMapBufferRangeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, void*, void> _glMapControlPointsNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, void*, void>)getProcAddress("glMapControlPointsNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, void> _glMapGrid1d = (delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, void>)getProcAddress("glMapGrid1d");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, void> _glMapGrid1f = (delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, void>)getProcAddress("glMapGrid1f");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfixed, GLfixed, void> _glMapGrid1xOES = (delegate* unmanaged[Stdcall]<GLint, GLfixed, GLfixed, void>)getProcAddress("glMapGrid1xOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble, void> _glMapGrid2d = (delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble, void>)getProcAddress("glMapGrid2d");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat, void> _glMapGrid2f = (delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat, void>)getProcAddress("glMapGrid2f");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfixed, GLfixed, GLfixed, GLfixed, void> _glMapGrid2xOES = (delegate* unmanaged[Stdcall]<GLint, GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glMapGrid2xOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*> _glMapNamedBuffer = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*>)getProcAddress("glMapNamedBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*> _glMapNamedBufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*>)getProcAddress("glMapNamedBufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLbitfield, void*> _glMapNamedBufferRange = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLbitfield, void*>)getProcAddress("glMapNamedBufferRange");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLbitfield, void*> _glMapNamedBufferRangeEXT = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLbitfield, void*>)getProcAddress("glMapNamedBufferRangeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void*> _glMapObjectBufferATI = (delegate* unmanaged[Stdcall]<GLuint, void*>)getProcAddress("glMapObjectBufferATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glMapParameterfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glMapParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glMapParameterivNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glMapParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLbitfield, GLint*, GLenum*, void*> _glMapTexture2DINTEL = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLbitfield, GLint*, GLenum*, void*>)getProcAddress("glMapTexture2DINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble*, void> _glMapVertexAttrib1dAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble*, void>)getProcAddress("glMapVertexAttrib1dAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat*, void> _glMapVertexAttrib1fAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat*, void>)getProcAddress("glMapVertexAttrib1fAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*, void> _glMapVertexAttrib2dAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble*, void>)getProcAddress("glMapVertexAttrib2dAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*, void> _glMapVertexAttrib2fAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat*, void>)getProcAddress("glMapVertexAttrib2fAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glMaterialf = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glMaterialf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glMaterialfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glMaterialfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glMateriali = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glMateriali");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glMaterialiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glMaterialiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glMaterialx = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glMaterialx");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glMaterialxOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glMaterialxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glMaterialxv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glMaterialxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glMaterialxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glMaterialxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, void> _glMatrixFrustumEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glMatrixFrustumEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glMatrixIndexPointerARB = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glMatrixIndexPointerARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glMatrixIndexPointerOES = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glMatrixIndexPointerOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLubyte*, void> _glMatrixIndexubvARB = (delegate* unmanaged[Stdcall]<GLint, GLubyte*, void>)getProcAddress("glMatrixIndexubvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint*, void> _glMatrixIndexuivARB = (delegate* unmanaged[Stdcall]<GLint, GLuint*, void>)getProcAddress("glMatrixIndexuivARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLushort*, void> _glMatrixIndexusvARB = (delegate* unmanaged[Stdcall]<GLint, GLushort*, void>)getProcAddress("glMatrixIndexusvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixLoad3x2fNV = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixLoad3x2fNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixLoad3x3fNV = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixLoad3x3fNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glMatrixLoadIdentityEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glMatrixLoadIdentityEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixLoadTranspose3x3fNV = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixLoadTranspose3x3fNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMatrixLoadTransposedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMatrixLoadTransposedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixLoadTransposefEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixLoadTransposefEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMatrixLoaddEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMatrixLoaddEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixLoadfEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixLoadfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glMatrixMode = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glMatrixMode");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixMult3x2fNV = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixMult3x2fNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixMult3x3fNV = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixMult3x3fNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixMultTranspose3x3fNV = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixMultTranspose3x3fNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMatrixMultTransposedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMatrixMultTransposedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixMultTransposefEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixMultTransposefEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMatrixMultdEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMatrixMultdEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMatrixMultfEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMatrixMultfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, void> _glMatrixOrthoEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glMatrixOrthoEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glMatrixPopEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glMatrixPopEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glMatrixPushEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glMatrixPushEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, void> _glMatrixRotatedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glMatrixRotatedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, GLfloat, void> _glMatrixRotatefEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glMatrixRotatefEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void> _glMatrixScaledEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glMatrixScaledEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void> _glMatrixScalefEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glMatrixScalefEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void> _glMatrixTranslatedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glMatrixTranslatedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void> _glMatrixTranslatefEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glMatrixTranslatefEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glMaxActiveShaderCoresARM = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glMaxActiveShaderCoresARM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glMaxShaderCompilerThreadsKHR = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glMaxShaderCompilerThreadsKHR");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glMaxShaderCompilerThreadsARB = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glMaxShaderCompilerThreadsARB");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glMemoryBarrier = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glMemoryBarrier");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glMemoryBarrierByRegion = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glMemoryBarrierByRegion");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glMemoryBarrierEXT = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glMemoryBarrierEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glMemoryObjectParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glMemoryObjectParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glMinSampleShading = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glMinSampleShading");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glMinSampleShadingARB = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glMinSampleShadingARB");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glMinSampleShadingOES = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glMinSampleShadingOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLboolean, void> _glMinmax = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLboolean, void>)getProcAddress("glMinmax");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLboolean, void> _glMinmaxEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLboolean, void>)getProcAddress("glMinmaxEXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glMultMatrixd = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glMultMatrixd");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glMultMatrixf = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glMultMatrixf");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glMultMatrixx = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glMultMatrixx");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glMultMatrixxOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glMultMatrixxOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glMultTransposeMatrixd = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glMultTransposeMatrixd");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glMultTransposeMatrixdARB = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glMultTransposeMatrixdARB");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glMultTransposeMatrixf = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glMultTransposeMatrixf");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glMultTransposeMatrixfARB = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glMultTransposeMatrixfARB");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glMultTransposeMatrixxOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glMultTransposeMatrixxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, GLsizei*, GLsizei, void> _glMultiDrawArrays = (delegate* unmanaged[Stdcall]<GLenum, GLint*, GLsizei*, GLsizei, void>)getProcAddress("glMultiDrawArrays");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, GLsizei*, GLsizei, void> _glMultiDrawArraysEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint*, GLsizei*, GLsizei, void>)getProcAddress("glMultiDrawArraysEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, void> _glMultiDrawArraysIndirect = (delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawArraysIndirect");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, void> _glMultiDrawArraysIndirectAMD = (delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawArraysIndirectAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, GLsizei, GLint, void> _glMultiDrawArraysIndirectBindlessCountNV = (delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, GLsizei, GLint, void>)getProcAddress("glMultiDrawArraysIndirectBindlessCountNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, GLint, void> _glMultiDrawArraysIndirectBindlessNV = (delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, GLint, void>)getProcAddress("glMultiDrawArraysIndirectBindlessNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, GLintptr, GLsizei, GLsizei, void> _glMultiDrawArraysIndirectCount = (delegate* unmanaged[Stdcall]<GLenum, void*, GLintptr, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawArraysIndirectCount");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, GLintptr, GLsizei, GLsizei, void> _glMultiDrawArraysIndirectCountARB = (delegate* unmanaged[Stdcall]<GLenum, void*, GLintptr, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawArraysIndirectCountARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, void> _glMultiDrawArraysIndirectEXT = (delegate* unmanaged[Stdcall]<GLenum, void*, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawArraysIndirectEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, GLsizei*, GLsizei, void> _glMultiDrawElementArrayAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLint*, GLsizei*, GLsizei, void>)getProcAddress("glMultiDrawElementArrayAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void*, GLsizei, void> _glMultiDrawElements = (delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void*, GLsizei, void>)getProcAddress("glMultiDrawElements");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void*, GLsizei, GLint*, void> _glMultiDrawElementsBaseVertex = (delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void*, GLsizei, GLint*, void>)getProcAddress("glMultiDrawElementsBaseVertex");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void*, GLsizei, GLint*, void> _glMultiDrawElementsBaseVertexEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void*, GLsizei, GLint*, void>)getProcAddress("glMultiDrawElementsBaseVertexEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void*, GLsizei, void> _glMultiDrawElementsEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei*, GLenum, void*, GLsizei, void>)getProcAddress("glMultiDrawElementsEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, void> _glMultiDrawElementsIndirect = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawElementsIndirect");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, void> _glMultiDrawElementsIndirectAMD = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawElementsIndirectAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, GLsizei, GLint, void> _glMultiDrawElementsIndirectBindlessCountNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, GLsizei, GLint, void>)getProcAddress("glMultiDrawElementsIndirectBindlessCountNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, GLint, void> _glMultiDrawElementsIndirectBindlessNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, GLint, void>)getProcAddress("glMultiDrawElementsIndirectBindlessNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLintptr, GLsizei, GLsizei, void> _glMultiDrawElementsIndirectCount = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLintptr, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawElementsIndirectCount");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLintptr, GLsizei, GLsizei, void> _glMultiDrawElementsIndirectCountARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLintptr, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawElementsIndirectCountARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, void> _glMultiDrawElementsIndirectEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void*, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawElementsIndirectEXT");
	private readonly delegate* unmanaged[Stdcall]<GLintptr, GLsizei, GLsizei, void> _glMultiDrawMeshTasksIndirectNV = (delegate* unmanaged[Stdcall]<GLintptr, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawMeshTasksIndirectNV");
	private readonly delegate* unmanaged[Stdcall]<GLintptr, GLintptr, GLsizei, GLsizei, void> _glMultiDrawMeshTasksIndirectCountNV = (delegate* unmanaged[Stdcall]<GLintptr, GLintptr, GLsizei, GLsizei, void>)getProcAddress("glMultiDrawMeshTasksIndirectCountNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLint*, GLsizei*, GLsizei, void> _glMultiDrawRangeElementArrayAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLint*, GLsizei*, GLsizei, void>)getProcAddress("glMultiDrawRangeElementArrayAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum*, GLint*, GLsizei*, GLsizei, GLint, void> _glMultiModeDrawArraysIBM = (delegate* unmanaged[Stdcall]<GLenum*, GLint*, GLsizei*, GLsizei, GLint, void>)getProcAddress("glMultiModeDrawArraysIBM");
	private readonly delegate* unmanaged[Stdcall]<GLenum*, GLsizei*, GLenum, void*, GLsizei, GLint, void> _glMultiModeDrawElementsIBM = (delegate* unmanaged[Stdcall]<GLenum*, GLsizei*, GLenum, void*, GLsizei, GLint, void>)getProcAddress("glMultiModeDrawElementsIBM");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, void> _glMultiTexBufferEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint, void>)getProcAddress("glMultiTexBufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte, void> _glMultiTexCoord1bOES = (delegate* unmanaged[Stdcall]<GLenum, GLbyte, void>)getProcAddress("glMultiTexCoord1bOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void> _glMultiTexCoord1bvOES = (delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void>)getProcAddress("glMultiTexCoord1bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, void> _glMultiTexCoord1d = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, void>)getProcAddress("glMultiTexCoord1d");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, void> _glMultiTexCoord1dARB = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, void>)getProcAddress("glMultiTexCoord1dARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMultiTexCoord1dv = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMultiTexCoord1dv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMultiTexCoord1dvARB = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMultiTexCoord1dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glMultiTexCoord1f = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glMultiTexCoord1f");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glMultiTexCoord1fARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glMultiTexCoord1fARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMultiTexCoord1fv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMultiTexCoord1fv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMultiTexCoord1fvARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMultiTexCoord1fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhalfNV, void> _glMultiTexCoord1hNV = (delegate* unmanaged[Stdcall]<GLenum, GLhalfNV, void>)getProcAddress("glMultiTexCoord1hNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhalfNV*, void> _glMultiTexCoord1hvNV = (delegate* unmanaged[Stdcall]<GLenum, GLhalfNV*, void>)getProcAddress("glMultiTexCoord1hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glMultiTexCoord1i = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glMultiTexCoord1i");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glMultiTexCoord1iARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glMultiTexCoord1iARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glMultiTexCoord1iv = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glMultiTexCoord1iv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glMultiTexCoord1ivARB = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glMultiTexCoord1ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, void> _glMultiTexCoord1s = (delegate* unmanaged[Stdcall]<GLenum, GLshort, void>)getProcAddress("glMultiTexCoord1s");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, void> _glMultiTexCoord1sARB = (delegate* unmanaged[Stdcall]<GLenum, GLshort, void>)getProcAddress("glMultiTexCoord1sARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glMultiTexCoord1sv = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glMultiTexCoord1sv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glMultiTexCoord1svARB = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glMultiTexCoord1svARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glMultiTexCoord1xOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glMultiTexCoord1xOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glMultiTexCoord1xvOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glMultiTexCoord1xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte, GLbyte, void> _glMultiTexCoord2bOES = (delegate* unmanaged[Stdcall]<GLenum, GLbyte, GLbyte, void>)getProcAddress("glMultiTexCoord2bOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void> _glMultiTexCoord2bvOES = (delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void>)getProcAddress("glMultiTexCoord2bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, void> _glMultiTexCoord2d = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, void>)getProcAddress("glMultiTexCoord2d");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, void> _glMultiTexCoord2dARB = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, void>)getProcAddress("glMultiTexCoord2dARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMultiTexCoord2dv = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMultiTexCoord2dv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMultiTexCoord2dvARB = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMultiTexCoord2dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, void> _glMultiTexCoord2f = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, void>)getProcAddress("glMultiTexCoord2f");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, void> _glMultiTexCoord2fARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, void>)getProcAddress("glMultiTexCoord2fARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMultiTexCoord2fv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMultiTexCoord2fv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMultiTexCoord2fvARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMultiTexCoord2fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhalfNV, GLhalfNV, void> _glMultiTexCoord2hNV = (delegate* unmanaged[Stdcall]<GLenum, GLhalfNV, GLhalfNV, void>)getProcAddress("glMultiTexCoord2hNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhalfNV*, void> _glMultiTexCoord2hvNV = (delegate* unmanaged[Stdcall]<GLenum, GLhalfNV*, void>)getProcAddress("glMultiTexCoord2hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, void> _glMultiTexCoord2i = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, void>)getProcAddress("glMultiTexCoord2i");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, void> _glMultiTexCoord2iARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, void>)getProcAddress("glMultiTexCoord2iARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glMultiTexCoord2iv = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glMultiTexCoord2iv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glMultiTexCoord2ivARB = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glMultiTexCoord2ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, void> _glMultiTexCoord2s = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, void>)getProcAddress("glMultiTexCoord2s");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, void> _glMultiTexCoord2sARB = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, void>)getProcAddress("glMultiTexCoord2sARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glMultiTexCoord2sv = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glMultiTexCoord2sv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glMultiTexCoord2svARB = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glMultiTexCoord2svARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, void> _glMultiTexCoord2xOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, void>)getProcAddress("glMultiTexCoord2xOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glMultiTexCoord2xvOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glMultiTexCoord2xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte, GLbyte, GLbyte, void> _glMultiTexCoord3bOES = (delegate* unmanaged[Stdcall]<GLenum, GLbyte, GLbyte, GLbyte, void>)getProcAddress("glMultiTexCoord3bOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void> _glMultiTexCoord3bvOES = (delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void>)getProcAddress("glMultiTexCoord3bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void> _glMultiTexCoord3d = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glMultiTexCoord3d");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void> _glMultiTexCoord3dARB = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glMultiTexCoord3dARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMultiTexCoord3dv = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMultiTexCoord3dv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMultiTexCoord3dvARB = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMultiTexCoord3dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void> _glMultiTexCoord3f = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glMultiTexCoord3f");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void> _glMultiTexCoord3fARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glMultiTexCoord3fARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMultiTexCoord3fv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMultiTexCoord3fv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMultiTexCoord3fvARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMultiTexCoord3fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhalfNV, GLhalfNV, GLhalfNV, void> _glMultiTexCoord3hNV = (delegate* unmanaged[Stdcall]<GLenum, GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glMultiTexCoord3hNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhalfNV*, void> _glMultiTexCoord3hvNV = (delegate* unmanaged[Stdcall]<GLenum, GLhalfNV*, void>)getProcAddress("glMultiTexCoord3hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, void> _glMultiTexCoord3i = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, void>)getProcAddress("glMultiTexCoord3i");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, void> _glMultiTexCoord3iARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, void>)getProcAddress("glMultiTexCoord3iARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glMultiTexCoord3iv = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glMultiTexCoord3iv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glMultiTexCoord3ivARB = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glMultiTexCoord3ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, void> _glMultiTexCoord3s = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, void>)getProcAddress("glMultiTexCoord3s");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, void> _glMultiTexCoord3sARB = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, void>)getProcAddress("glMultiTexCoord3sARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glMultiTexCoord3sv = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glMultiTexCoord3sv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glMultiTexCoord3svARB = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glMultiTexCoord3svARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLfixed, void> _glMultiTexCoord3xOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glMultiTexCoord3xOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glMultiTexCoord3xvOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glMultiTexCoord3xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte, GLbyte, GLbyte, GLbyte, void> _glMultiTexCoord4bOES = (delegate* unmanaged[Stdcall]<GLenum, GLbyte, GLbyte, GLbyte, GLbyte, void>)getProcAddress("glMultiTexCoord4bOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void> _glMultiTexCoord4bvOES = (delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void>)getProcAddress("glMultiTexCoord4bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, void> _glMultiTexCoord4d = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glMultiTexCoord4d");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, void> _glMultiTexCoord4dARB = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glMultiTexCoord4dARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMultiTexCoord4dv = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMultiTexCoord4dv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glMultiTexCoord4dvARB = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glMultiTexCoord4dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, GLfloat, void> _glMultiTexCoord4f = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glMultiTexCoord4f");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, GLfloat, void> _glMultiTexCoord4fARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glMultiTexCoord4fARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMultiTexCoord4fv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMultiTexCoord4fv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glMultiTexCoord4fvARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glMultiTexCoord4fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void> _glMultiTexCoord4hNV = (delegate* unmanaged[Stdcall]<GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glMultiTexCoord4hNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLhalfNV*, void> _glMultiTexCoord4hvNV = (delegate* unmanaged[Stdcall]<GLenum, GLhalfNV*, void>)getProcAddress("glMultiTexCoord4hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, void> _glMultiTexCoord4i = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, void>)getProcAddress("glMultiTexCoord4i");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, void> _glMultiTexCoord4iARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, void>)getProcAddress("glMultiTexCoord4iARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glMultiTexCoord4iv = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glMultiTexCoord4iv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glMultiTexCoord4ivARB = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glMultiTexCoord4ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, GLshort, void> _glMultiTexCoord4s = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glMultiTexCoord4s");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, GLshort, void> _glMultiTexCoord4sARB = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glMultiTexCoord4sARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glMultiTexCoord4sv = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glMultiTexCoord4sv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glMultiTexCoord4svARB = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glMultiTexCoord4svARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLfixed, GLfixed, void> _glMultiTexCoord4x = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glMultiTexCoord4x");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLfixed, GLfixed, void> _glMultiTexCoord4xOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glMultiTexCoord4xOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glMultiTexCoord4xvOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glMultiTexCoord4xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glMultiTexCoordP1ui = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glMultiTexCoordP1ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glMultiTexCoordP1uiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glMultiTexCoordP1uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glMultiTexCoordP2ui = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glMultiTexCoordP2ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glMultiTexCoordP2uiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glMultiTexCoordP2uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glMultiTexCoordP3ui = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glMultiTexCoordP3ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glMultiTexCoordP3uiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glMultiTexCoordP3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glMultiTexCoordP4ui = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glMultiTexCoordP4ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glMultiTexCoordP4uiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glMultiTexCoordP4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, void*, void> _glMultiTexCoordPointerEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, void*, void>)getProcAddress("glMultiTexCoordPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat, void> _glMultiTexEnvfEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat, void>)getProcAddress("glMultiTexEnvfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void> _glMultiTexEnvfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void>)getProcAddress("glMultiTexEnvfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint, void> _glMultiTexEnviEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint, void>)getProcAddress("glMultiTexEnviEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glMultiTexEnvivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glMultiTexEnvivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLdouble, void> _glMultiTexGendEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLdouble, void>)getProcAddress("glMultiTexGendEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLdouble*, void> _glMultiTexGendvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLdouble*, void>)getProcAddress("glMultiTexGendvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat, void> _glMultiTexGenfEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat, void>)getProcAddress("glMultiTexGenfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void> _glMultiTexGenfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void>)getProcAddress("glMultiTexGenfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint, void> _glMultiTexGeniEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint, void>)getProcAddress("glMultiTexGeniEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glMultiTexGenivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glMultiTexGenivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, void*, void> _glMultiTexImage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glMultiTexImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> _glMultiTexImage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glMultiTexImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> _glMultiTexImage3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glMultiTexImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glMultiTexParameterIivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glMultiTexParameterIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint*, void> _glMultiTexParameterIuivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLuint*, void>)getProcAddress("glMultiTexParameterIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat, void> _glMultiTexParameterfEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat, void>)getProcAddress("glMultiTexParameterfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void> _glMultiTexParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void>)getProcAddress("glMultiTexParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint, void> _glMultiTexParameteriEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint, void>)getProcAddress("glMultiTexParameteriEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void> _glMultiTexParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLint*, void>)getProcAddress("glMultiTexParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glMultiTexRenderbufferEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glMultiTexRenderbufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void*, void> _glMultiTexSubImage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glMultiTexSubImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glMultiTexSubImage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glMultiTexSubImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glMultiTexSubImage3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glMultiTexSubImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<void> _glMulticastBarrierNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glMulticastBarrierNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void> _glMulticastBlitFramebufferNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum, void>)getProcAddress("glMulticastBlitFramebufferNV");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, GLuint, GLintptr, GLsizeiptr, void*, void> _glMulticastBufferSubDataNV = (delegate* unmanaged[Stdcall]<GLbitfield, GLuint, GLintptr, GLsizeiptr, void*, void>)getProcAddress("glMulticastBufferSubDataNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, void> _glMulticastCopyBufferSubDataNV = (delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, void>)getProcAddress("glMulticastCopyBufferSubDataNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void> _glMulticastCopyImageSubDataNV = (delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glMulticastCopyImageSubDataNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLsizei, GLfloat*, void> _glMulticastFramebufferSampleLocationsfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glMulticastFramebufferSampleLocationsfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint64*, void> _glMulticastGetQueryObjecti64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint64*, void>)getProcAddress("glMulticastGetQueryObjecti64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> _glMulticastGetQueryObjectivNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void>)getProcAddress("glMulticastGetQueryObjectivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLuint64*, void> _glMulticastGetQueryObjectui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLuint64*, void>)getProcAddress("glMulticastGetQueryObjectui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLuint*, void> _glMulticastGetQueryObjectuivNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLuint*, void>)getProcAddress("glMulticastGetQueryObjectuivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLint*, void> _glMulticastScissorArrayvNVX = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLint*, void>)getProcAddress("glMulticastScissorArrayvNVX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLfloat*, void> _glMulticastViewportArrayvNVX = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glMulticastViewportArrayvNVX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, void> _glMulticastViewportPositionWScaleNVX = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLfloat, GLfloat, void>)getProcAddress("glMulticastViewportPositionWScaleNVX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, void> _glMulticastWaitSyncNV = (delegate* unmanaged[Stdcall]<GLuint, GLbitfield, void>)getProcAddress("glMulticastWaitSyncNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64, void> _glNamedBufferAttachMemoryNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64, void>)getProcAddress("glNamedBufferAttachMemoryNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLenum, void> _glNamedBufferData = (delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLenum, void>)getProcAddress("glNamedBufferData");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLenum, void> _glNamedBufferDataEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLenum, void>)getProcAddress("glNamedBufferDataEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLboolean, void> _glNamedBufferPageCommitmentARB = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLboolean, void>)getProcAddress("glNamedBufferPageCommitmentARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLboolean, void> _glNamedBufferPageCommitmentEXT = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLboolean, void>)getProcAddress("glNamedBufferPageCommitmentEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLuint, GLuint64, GLboolean, void> _glNamedBufferPageCommitmentMemNV = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLuint, GLuint64, GLboolean, void>)getProcAddress("glNamedBufferPageCommitmentMemNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLbitfield, void> _glNamedBufferStorage = (delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLbitfield, void>)getProcAddress("glNamedBufferStorage");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield, void> _glNamedBufferStorageExternalEXT = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, GLeglClientBufferEXT, GLbitfield, void>)getProcAddress("glNamedBufferStorageExternalEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLbitfield, void> _glNamedBufferStorageEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, void*, GLbitfield, void>)getProcAddress("glNamedBufferStorageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, GLuint, GLuint64, void> _glNamedBufferStorageMemEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizeiptr, GLuint, GLuint64, void>)getProcAddress("glNamedBufferStorageMemEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void> _glNamedBufferSubData = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void>)getProcAddress("glNamedBufferSubData");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void> _glNamedBufferSubDataEXT = (delegate* unmanaged[Stdcall]<GLuint, GLintptr, GLsizeiptr, void*, void>)getProcAddress("glNamedBufferSubDataEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, void> _glNamedCopyBufferSubDataEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr, void>)getProcAddress("glNamedCopyBufferSubDataEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glNamedFramebufferDrawBuffer = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glNamedFramebufferDrawBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, void> _glNamedFramebufferDrawBuffers = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum*, void>)getProcAddress("glNamedFramebufferDrawBuffers");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glNamedFramebufferParameteri = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glNamedFramebufferParameteri");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glNamedFramebufferParameteriEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glNamedFramebufferParameteriEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glNamedFramebufferReadBuffer = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glNamedFramebufferReadBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, void> _glNamedFramebufferRenderbuffer = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, void>)getProcAddress("glNamedFramebufferRenderbuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, void> _glNamedFramebufferRenderbufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, void>)getProcAddress("glNamedFramebufferRenderbufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLfloat*, void> _glNamedFramebufferSampleLocationsfvARB = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glNamedFramebufferSampleLocationsfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLfloat*, void> _glNamedFramebufferSampleLocationsfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glNamedFramebufferSampleLocationsfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, void> _glNamedFramebufferTexture = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, void>)getProcAddress("glNamedFramebufferTexture");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat*, void> _glNamedFramebufferSamplePositionsfvAMD = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat*, void>)getProcAddress("glNamedFramebufferSamplePositionsfvAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, GLint, void> _glNamedFramebufferTexture1DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glNamedFramebufferTexture1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, GLint, void> _glNamedFramebufferTexture2DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, GLint, void>)getProcAddress("glNamedFramebufferTexture2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, GLint, GLint, void> _glNamedFramebufferTexture3DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, GLint, GLint, void>)getProcAddress("glNamedFramebufferTexture3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, void> _glNamedFramebufferTextureEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, void>)getProcAddress("glNamedFramebufferTextureEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLenum, void> _glNamedFramebufferTextureFaceEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLenum, void>)getProcAddress("glNamedFramebufferTextureFaceEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLint, void> _glNamedFramebufferTextureLayer = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLint, void>)getProcAddress("glNamedFramebufferTextureLayer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLint, void> _glNamedFramebufferTextureLayerEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLint, void>)getProcAddress("glNamedFramebufferTextureLayerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLint, GLsizei, void> _glNamedFramebufferTextureMultiviewOVR = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLint, GLsizei, void>)getProcAddress("glNamedFramebufferTextureMultiviewOVR");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glNamedProgramLocalParameter4dEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glNamedProgramLocalParameter4dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLdouble*, void> _glNamedProgramLocalParameter4dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLdouble*, void>)getProcAddress("glNamedProgramLocalParameter4dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glNamedProgramLocalParameter4fEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glNamedProgramLocalParameter4fEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLfloat*, void> _glNamedProgramLocalParameter4fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLfloat*, void>)getProcAddress("glNamedProgramLocalParameter4fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint, void> _glNamedProgramLocalParameterI4iEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint, void>)getProcAddress("glNamedProgramLocalParameterI4iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint*, void> _glNamedProgramLocalParameterI4ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLint*, void>)getProcAddress("glNamedProgramLocalParameterI4ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glNamedProgramLocalParameterI4uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glNamedProgramLocalParameterI4uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLuint*, void> _glNamedProgramLocalParameterI4uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLuint*, void>)getProcAddress("glNamedProgramLocalParameterI4uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLfloat*, void> _glNamedProgramLocalParameters4fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glNamedProgramLocalParameters4fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLint*, void> _glNamedProgramLocalParametersI4ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLint*, void>)getProcAddress("glNamedProgramLocalParametersI4ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLuint*, void> _glNamedProgramLocalParametersI4uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLsizei, GLuint*, void>)getProcAddress("glNamedProgramLocalParametersI4uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLsizei, void*, void> _glNamedProgramStringEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glNamedProgramStringEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLsizei, void> _glNamedRenderbufferStorage = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLsizei, void>)getProcAddress("glNamedRenderbufferStorage");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLsizei, void> _glNamedRenderbufferStorageEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLsizei, void>)getProcAddress("glNamedRenderbufferStorageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, void> _glNamedRenderbufferStorageMultisample = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glNamedRenderbufferStorageMultisample");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei, void> _glNamedRenderbufferStorageMultisampleAdvancedAMD = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glNamedRenderbufferStorageMultisampleAdvancedAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei, void> _glNamedRenderbufferStorageMultisampleCoverageEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glNamedRenderbufferStorageMultisampleCoverageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, void> _glNamedRenderbufferStorageMultisampleEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glNamedRenderbufferStorageMultisampleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLchar*, GLint, GLchar*, void> _glNamedStringARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLchar*, GLint, GLchar*, void>)getProcAddress("glNamedStringARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glNewList = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glNewList");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, void*, GLenum, GLuint> _glNewObjectBufferATI = (delegate* unmanaged[Stdcall]<GLsizei, void*, GLenum, GLuint>)getProcAddress("glNewObjectBufferATI");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void> _glNormal3b = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void>)getProcAddress("glNormal3b");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glNormal3bv = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glNormal3bv");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glNormal3d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glNormal3d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glNormal3dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glNormal3dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glNormal3f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glNormal3f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glNormal3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glNormal3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void> _glNormal3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void>)getProcAddress("glNormal3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glNormal3fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glNormal3fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void> _glNormal3hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glNormal3hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glNormal3hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glNormal3hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glNormal3i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glNormal3i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glNormal3iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glNormal3iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glNormal3s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glNormal3s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glNormal3sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glNormal3sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glNormal3x = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glNormal3x");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glNormal3xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glNormal3xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glNormal3xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glNormal3xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void> _glNormalFormatNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void>)getProcAddress("glNormalFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glNormalP3ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glNormalP3ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glNormalP3uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glNormalP3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glNormalPointer = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glNormalPointer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, void*, void> _glNormalPointerEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, void*, void>)getProcAddress("glNormalPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void*, GLint, void> _glNormalPointerListIBM = (delegate* unmanaged[Stdcall]<GLenum, GLint, void*, GLint, void>)getProcAddress("glNormalPointerListIBM");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, void> _glNormalPointervINTEL = (delegate* unmanaged[Stdcall]<GLenum, void*, void>)getProcAddress("glNormalPointervINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte, GLbyte, GLbyte, void> _glNormalStream3bATI = (delegate* unmanaged[Stdcall]<GLenum, GLbyte, GLbyte, GLbyte, void>)getProcAddress("glNormalStream3bATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void> _glNormalStream3bvATI = (delegate* unmanaged[Stdcall]<GLenum, GLbyte*, void>)getProcAddress("glNormalStream3bvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void> _glNormalStream3dATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glNormalStream3dATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glNormalStream3dvATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glNormalStream3dvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void> _glNormalStream3fATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glNormalStream3fATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glNormalStream3fvATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glNormalStream3fvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, void> _glNormalStream3iATI = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, void>)getProcAddress("glNormalStream3iATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glNormalStream3ivATI = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glNormalStream3ivATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, void> _glNormalStream3sATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, void>)getProcAddress("glNormalStream3sATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glNormalStream3svATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glNormalStream3svATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void> _glObjectLabel = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void>)getProcAddress("glObjectLabel");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void> _glObjectLabelKHR = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void>)getProcAddress("glObjectLabelKHR");
	private readonly delegate* unmanaged[Stdcall]<void*, GLsizei, GLchar*, void> _glObjectPtrLabel = (delegate* unmanaged[Stdcall]<void*, GLsizei, GLchar*, void>)getProcAddress("glObjectPtrLabel");
	private readonly delegate* unmanaged[Stdcall]<void*, GLsizei, GLchar*, void> _glObjectPtrLabelKHR = (delegate* unmanaged[Stdcall]<void*, GLsizei, GLchar*, void>)getProcAddress("glObjectPtrLabelKHR");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLenum> _glObjectPurgeableAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLenum>)getProcAddress("glObjectPurgeableAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLenum> _glObjectUnpurgeableAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLenum>)getProcAddress("glObjectUnpurgeableAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, void> _glOrtho = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glOrtho");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glOrthof = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glOrthof");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glOrthofOES = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glOrthofOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void> _glOrthox = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glOrthox");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void> _glOrthoxOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glOrthoxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glPNTrianglesfATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glPNTrianglesfATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glPNTrianglesiATI = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glPNTrianglesiATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, void> _glPassTexCoordATI = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, void>)getProcAddress("glPassTexCoordATI");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glPassThrough = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glPassThrough");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glPassThroughxOES = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glPassThroughxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glPatchParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glPatchParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glPatchParameteri = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glPatchParameteri");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glPatchParameteriEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glPatchParameteriEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glPatchParameteriOES = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glPatchParameteriOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void> _glPathColorGenNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLfloat*, void>)getProcAddress("glPathColorGenNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLsizei, GLenum, void*, void> _glPathCommandsNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLsizei, GLenum, void*, void>)getProcAddress("glPathCommandsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, void*, void> _glPathCoordsNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, void*, void>)getProcAddress("glPathCoordsNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glPathCoverDepthFuncNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glPathCoverDepthFuncNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glPathDashArrayNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glPathDashArrayNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glPathFogGenNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glPathFogGenNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLbitfield, GLuint, GLsizei, GLuint, GLfloat, GLenum> _glPathGlyphIndexArrayNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLbitfield, GLuint, GLsizei, GLuint, GLfloat, GLenum>)getProcAddress("glPathGlyphIndexArrayNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void*, GLbitfield, GLuint, GLfloat, GLuint*, GLenum> _glPathGlyphIndexRangeNV = (delegate* unmanaged[Stdcall]<GLenum, void*, GLbitfield, GLuint, GLfloat, GLuint*, GLenum>)getProcAddress("glPathGlyphIndexRangeNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat, void> _glPathGlyphRangeNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat, void>)getProcAddress("glPathGlyphRangeNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLbitfield, GLsizei, GLenum, void*, GLenum, GLuint, GLfloat, void> _glPathGlyphsNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLbitfield, GLsizei, GLenum, void*, GLenum, GLuint, GLfloat, void>)getProcAddress("glPathGlyphsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizeiptr, void*, GLsizei, GLuint, GLsizei, GLuint, GLfloat, GLenum> _glPathMemoryGlyphIndexArrayNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizeiptr, void*, GLsizei, GLuint, GLsizei, GLuint, GLfloat, GLenum>)getProcAddress("glPathMemoryGlyphIndexArrayNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void> _glPathParameterfNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void>)getProcAddress("glPathParameterfNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glPathParameterfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glPathParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glPathParameteriNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glPathParameteriNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glPathParameterivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glPathParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glPathStencilDepthOffsetNV = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glPathStencilDepthOffsetNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint, void> _glPathStencilFuncNV = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint, void>)getProcAddress("glPathStencilFuncNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, void*, void> _glPathStringNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, void*, void>)getProcAddress("glPathStringNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLsizei, GLubyte*, GLsizei, GLenum, void*, void> _glPathSubCommandsNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLsizei, GLubyte*, GLsizei, GLenum, void*, void>)getProcAddress("glPathSubCommandsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLenum, void*, void> _glPathSubCoordsNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLenum, void*, void>)getProcAddress("glPathSubCoordsNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLfloat*, void> _glPathTexGenNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLfloat*, void>)getProcAddress("glPathTexGenNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glPauseTransformFeedback = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPauseTransformFeedback");
	private readonly delegate* unmanaged[Stdcall]<void> _glPauseTransformFeedbackNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPauseTransformFeedbackNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glPixelDataRangeNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glPixelDataRangeNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void> _glPixelMapfv = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void>)getProcAddress("glPixelMapfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> _glPixelMapuiv = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void>)getProcAddress("glPixelMapuiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLushort*, void> _glPixelMapusv = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLushort*, void>)getProcAddress("glPixelMapusv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLfixed*, void> _glPixelMapx = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLfixed*, void>)getProcAddress("glPixelMapx");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glPixelStoref = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glPixelStoref");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glPixelStorei = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glPixelStorei");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glPixelStorex = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glPixelStorex");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glPixelTexGenParameterfSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glPixelTexGenParameterfSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glPixelTexGenParameterfvSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glPixelTexGenParameterfvSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glPixelTexGenParameteriSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glPixelTexGenParameteriSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glPixelTexGenParameterivSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glPixelTexGenParameterivSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glPixelTexGenSGIX = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glPixelTexGenSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glPixelTransferf = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glPixelTransferf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glPixelTransferi = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glPixelTransferi");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glPixelTransferxOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glPixelTransferxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glPixelTransformParameterfEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glPixelTransformParameterfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glPixelTransformParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glPixelTransformParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glPixelTransformParameteriEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glPixelTransformParameteriEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glPixelTransformParameterivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glPixelTransformParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glPixelZoom = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glPixelZoom");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void> _glPixelZoomxOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void>)getProcAddress("glPixelZoomxOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLfloat, GLfloat*, GLfloat*, GLfloat*, GLfloat*, GLboolean> _glPointAlongPathNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLsizei, GLfloat, GLfloat*, GLfloat*, GLfloat*, GLfloat*, GLboolean>)getProcAddress("glPointAlongPathNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glPointParameterf = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glPointParameterf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glPointParameterfARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glPointParameterfARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glPointParameterfEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glPointParameterfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glPointParameterfSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glPointParameterfSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glPointParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glPointParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glPointParameterfvARB = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glPointParameterfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glPointParameterfvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glPointParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glPointParameterfvSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glPointParameterfvSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glPointParameteri = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glPointParameteri");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glPointParameteriNV = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glPointParameteriNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glPointParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glPointParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glPointParameterivNV = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glPointParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glPointParameterx = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glPointParameterx");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed, void> _glPointParameterxOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed, void>)getProcAddress("glPointParameterxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glPointParameterxv = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glPointParameterxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void> _glPointParameterxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLfixed*, void>)getProcAddress("glPointParameterxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glPointSize = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glPointSize");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glPointSizePointerOES = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glPointSizePointerOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glPointSizex = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glPointSizex");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glPointSizexOES = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glPointSizexOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLint> _glPollAsyncSGIX = (delegate* unmanaged[Stdcall]<GLuint*, GLint>)getProcAddress("glPollAsyncSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLint*, GLint> _glPollInstrumentsSGIX = (delegate* unmanaged[Stdcall]<GLint*, GLint>)getProcAddress("glPollInstrumentsSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glPolygonMode = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glPolygonMode");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glPolygonModeNV = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glPolygonModeNV");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glPolygonOffset = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glPolygonOffset");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glPolygonOffsetClamp = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glPolygonOffsetClamp");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glPolygonOffsetClampEXT = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glPolygonOffsetClampEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glPolygonOffsetEXT = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glPolygonOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void> _glPolygonOffsetx = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void>)getProcAddress("glPolygonOffsetx");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void> _glPolygonOffsetxOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void>)getProcAddress("glPolygonOffsetxOES");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, void> _glPolygonStipple = (delegate* unmanaged[Stdcall]<GLubyte*, void>)getProcAddress("glPolygonStipple");
	private readonly delegate* unmanaged[Stdcall]<void> _glPopAttrib = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPopAttrib");
	private readonly delegate* unmanaged[Stdcall]<void> _glPopClientAttrib = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPopClientAttrib");
	private readonly delegate* unmanaged[Stdcall]<void> _glPopDebugGroup = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPopDebugGroup");
	private readonly delegate* unmanaged[Stdcall]<void> _glPopDebugGroupKHR = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPopDebugGroupKHR");
	private readonly delegate* unmanaged[Stdcall]<void> _glPopGroupMarkerEXT = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPopGroupMarkerEXT");
	private readonly delegate* unmanaged[Stdcall]<void> _glPopMatrix = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPopMatrix");
	private readonly delegate* unmanaged[Stdcall]<void> _glPopName = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPopName");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, void> _glPresentFrameDualFillNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, void>)getProcAddress("glPresentFrameDualFillNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint, void> _glPresentFrameKeyedNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint, void>)getProcAddress("glPresentFrameKeyedNV");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glPrimitiveBoundingBox = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glPrimitiveBoundingBox");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glPrimitiveBoundingBoxARB = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glPrimitiveBoundingBoxARB");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glPrimitiveBoundingBoxEXT = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glPrimitiveBoundingBoxEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glPrimitiveBoundingBoxOES = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glPrimitiveBoundingBoxOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glPrimitiveRestartIndex = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glPrimitiveRestartIndex");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glPrimitiveRestartIndexNV = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glPrimitiveRestartIndexNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glPrimitiveRestartNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPrimitiveRestartNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLfloat*, void> _glPrioritizeTextures = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLfloat*, void>)getProcAddress("glPrioritizeTextures");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLclampf*, void> _glPrioritizeTexturesEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLclampf*, void>)getProcAddress("glPrioritizeTexturesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLfixed*, void> _glPrioritizeTexturesxOES = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLfixed*, void>)getProcAddress("glPrioritizeTexturesxOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLsizei, void> _glProgramBinary = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLsizei, void>)getProcAddress("glProgramBinary");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLint, void> _glProgramBinaryOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, GLint, void>)getProcAddress("glProgramBinaryOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLint*, void> _glProgramBufferParametersIivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLint*, void>)getProcAddress("glProgramBufferParametersIivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLuint*, void> _glProgramBufferParametersIuivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLuint*, void>)getProcAddress("glProgramBufferParametersIuivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLfloat*, void> _glProgramBufferParametersfvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glProgramBufferParametersfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glProgramEnvParameter4dARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glProgramEnvParameter4dARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void> _glProgramEnvParameter4dvARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void>)getProcAddress("glProgramEnvParameter4dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glProgramEnvParameter4fARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glProgramEnvParameter4fARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glProgramEnvParameter4fvARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glProgramEnvParameter4fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint, GLint, GLint, GLint, void> _glProgramEnvParameterI4iNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint, GLint, GLint, GLint, void>)getProcAddress("glProgramEnvParameterI4iNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void> _glProgramEnvParameterI4ivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void>)getProcAddress("glProgramEnvParameterI4ivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glProgramEnvParameterI4uiNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glProgramEnvParameterI4uiNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void> _glProgramEnvParameterI4uivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void>)getProcAddress("glProgramEnvParameterI4uivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void> _glProgramEnvParameters4fvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glProgramEnvParameters4fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLint*, void> _glProgramEnvParametersI4ivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLint*, void>)getProcAddress("glProgramEnvParametersI4ivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, void> _glProgramEnvParametersI4uivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, void>)getProcAddress("glProgramEnvParametersI4uivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glProgramLocalParameter4dARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glProgramLocalParameter4dARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void> _glProgramLocalParameter4dvARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void>)getProcAddress("glProgramLocalParameter4dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glProgramLocalParameter4fARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glProgramLocalParameter4fARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glProgramLocalParameter4fvARB = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glProgramLocalParameter4fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint, GLint, GLint, GLint, void> _glProgramLocalParameterI4iNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint, GLint, GLint, GLint, void>)getProcAddress("glProgramLocalParameterI4iNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void> _glProgramLocalParameterI4ivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void>)getProcAddress("glProgramLocalParameterI4ivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, void> _glProgramLocalParameterI4uiNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glProgramLocalParameterI4uiNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void> _glProgramLocalParameterI4uivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint*, void>)getProcAddress("glProgramLocalParameterI4uivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void> _glProgramLocalParameters4fvEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glProgramLocalParameters4fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLint*, void> _glProgramLocalParametersI4ivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLint*, void>)getProcAddress("glProgramLocalParametersI4ivNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, void> _glProgramLocalParametersI4uivNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLuint*, void>)getProcAddress("glProgramLocalParametersI4uivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLdouble, GLdouble, GLdouble, GLdouble, void> _glProgramNamedParameter4dNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glProgramNamedParameter4dNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLdouble*, void> _glProgramNamedParameter4dvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLdouble*, void>)getProcAddress("glProgramNamedParameter4dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLfloat, GLfloat, GLfloat, GLfloat, void> _glProgramNamedParameter4fNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glProgramNamedParameter4fNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLfloat*, void> _glProgramNamedParameter4fvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, GLfloat*, void>)getProcAddress("glProgramNamedParameter4fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glProgramParameter4dNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glProgramParameter4dNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void> _glProgramParameter4dvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLdouble*, void>)getProcAddress("glProgramParameter4dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glProgramParameter4fNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glProgramParameter4fNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glProgramParameter4fvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glProgramParameter4fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glProgramParameteri = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glProgramParameteri");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glProgramParameteriARB = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glProgramParameteriARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glProgramParameteriEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glProgramParameteriEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLdouble*, void> _glProgramParameters4dvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLdouble*, void>)getProcAddress("glProgramParameters4dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void> _glProgramParameters4fvNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLfloat*, void>)getProcAddress("glProgramParameters4fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLint, GLfloat*, void> _glProgramPathFragmentInputGenNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLint, GLfloat*, void>)getProcAddress("glProgramPathFragmentInputGenNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, void*, void> _glProgramStringARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glProgramStringARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> _glProgramSubroutineParametersuivNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void>)getProcAddress("glProgramSubroutineParametersuivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, void> _glProgramUniform1d = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, void>)getProcAddress("glProgramUniform1d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, void> _glProgramUniform1dEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, void>)getProcAddress("glProgramUniform1dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glProgramUniform1dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glProgramUniform1dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glProgramUniform1dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glProgramUniform1dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, void> _glProgramUniform1f = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, void>)getProcAddress("glProgramUniform1f");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, void> _glProgramUniform1fEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, void>)getProcAddress("glProgramUniform1fEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glProgramUniform1fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glProgramUniform1fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glProgramUniform1fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glProgramUniform1fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void> _glProgramUniform1i = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void>)getProcAddress("glProgramUniform1i");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64, void> _glProgramUniform1i64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64, void>)getProcAddress("glProgramUniform1i64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT, void> _glProgramUniform1i64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT, void>)getProcAddress("glProgramUniform1i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void> _glProgramUniform1i64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void>)getProcAddress("glProgramUniform1i64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64EXT*, void> _glProgramUniform1i64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64EXT*, void>)getProcAddress("glProgramUniform1i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void> _glProgramUniform1iEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void>)getProcAddress("glProgramUniform1iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glProgramUniform1iv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glProgramUniform1iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glProgramUniform1ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glProgramUniform1ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, void> _glProgramUniform1ui = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, void>)getProcAddress("glProgramUniform1ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, void> _glProgramUniform1ui64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, void>)getProcAddress("glProgramUniform1ui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, void> _glProgramUniform1ui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, void>)getProcAddress("glProgramUniform1ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void> _glProgramUniform1ui64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void>)getProcAddress("glProgramUniform1ui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void> _glProgramUniform1ui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glProgramUniform1ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, void> _glProgramUniform1uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, void>)getProcAddress("glProgramUniform1uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glProgramUniform1uiv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glProgramUniform1uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glProgramUniform1uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glProgramUniform1uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, void> _glProgramUniform2d = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, void>)getProcAddress("glProgramUniform2d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, void> _glProgramUniform2dEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, void>)getProcAddress("glProgramUniform2dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glProgramUniform2dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glProgramUniform2dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glProgramUniform2dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glProgramUniform2dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, void> _glProgramUniform2f = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, void>)getProcAddress("glProgramUniform2f");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, void> _glProgramUniform2fEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, void>)getProcAddress("glProgramUniform2fEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glProgramUniform2fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glProgramUniform2fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glProgramUniform2fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glProgramUniform2fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void> _glProgramUniform2i = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void>)getProcAddress("glProgramUniform2i");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64, GLint64, void> _glProgramUniform2i64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64, GLint64, void>)getProcAddress("glProgramUniform2i64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT, GLint64EXT, void> _glProgramUniform2i64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT, GLint64EXT, void>)getProcAddress("glProgramUniform2i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void> _glProgramUniform2i64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void>)getProcAddress("glProgramUniform2i64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64EXT*, void> _glProgramUniform2i64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64EXT*, void>)getProcAddress("glProgramUniform2i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void> _glProgramUniform2iEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void>)getProcAddress("glProgramUniform2iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glProgramUniform2iv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glProgramUniform2iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glProgramUniform2ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glProgramUniform2ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, void> _glProgramUniform2ui = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, void>)getProcAddress("glProgramUniform2ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, GLuint64, void> _glProgramUniform2ui64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, GLuint64, void>)getProcAddress("glProgramUniform2ui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, GLuint64EXT, void> _glProgramUniform2ui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, GLuint64EXT, void>)getProcAddress("glProgramUniform2ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void> _glProgramUniform2ui64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void>)getProcAddress("glProgramUniform2ui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void> _glProgramUniform2ui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glProgramUniform2ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, void> _glProgramUniform2uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, void>)getProcAddress("glProgramUniform2uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glProgramUniform2uiv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glProgramUniform2uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glProgramUniform2uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glProgramUniform2uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, GLdouble, void> _glProgramUniform3d = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glProgramUniform3d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, GLdouble, void> _glProgramUniform3dEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glProgramUniform3dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glProgramUniform3dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glProgramUniform3dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glProgramUniform3dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glProgramUniform3dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, void> _glProgramUniform3f = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glProgramUniform3f");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, void> _glProgramUniform3fEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glProgramUniform3fEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glProgramUniform3fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glProgramUniform3fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glProgramUniform3fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glProgramUniform3fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void> _glProgramUniform3i = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void>)getProcAddress("glProgramUniform3i");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64, GLint64, GLint64, void> _glProgramUniform3i64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64, GLint64, GLint64, void>)getProcAddress("glProgramUniform3i64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, void> _glProgramUniform3i64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, void>)getProcAddress("glProgramUniform3i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void> _glProgramUniform3i64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void>)getProcAddress("glProgramUniform3i64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64EXT*, void> _glProgramUniform3i64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64EXT*, void>)getProcAddress("glProgramUniform3i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void> _glProgramUniform3iEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void>)getProcAddress("glProgramUniform3iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glProgramUniform3iv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glProgramUniform3iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glProgramUniform3ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glProgramUniform3ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, void> _glProgramUniform3ui = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, void>)getProcAddress("glProgramUniform3ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, GLuint64, GLuint64, void> _glProgramUniform3ui64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, GLuint64, GLuint64, void>)getProcAddress("glProgramUniform3ui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, void> _glProgramUniform3ui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, void>)getProcAddress("glProgramUniform3ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void> _glProgramUniform3ui64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void>)getProcAddress("glProgramUniform3ui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void> _glProgramUniform3ui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glProgramUniform3ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, void> _glProgramUniform3uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, void>)getProcAddress("glProgramUniform3uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glProgramUniform3uiv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glProgramUniform3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glProgramUniform3uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glProgramUniform3uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glProgramUniform4d = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glProgramUniform4d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glProgramUniform4dEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glProgramUniform4dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glProgramUniform4dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glProgramUniform4dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void> _glProgramUniform4dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLdouble*, void>)getProcAddress("glProgramUniform4dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glProgramUniform4f = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glProgramUniform4f");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glProgramUniform4fEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glProgramUniform4fEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glProgramUniform4fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glProgramUniform4fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void> _glProgramUniform4fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLfloat*, void>)getProcAddress("glProgramUniform4fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, void> _glProgramUniform4i = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, void>)getProcAddress("glProgramUniform4i");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64, GLint64, GLint64, GLint64, void> _glProgramUniform4i64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64, GLint64, GLint64, GLint64, void>)getProcAddress("glProgramUniform4i64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT, void> _glProgramUniform4i64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT, void>)getProcAddress("glProgramUniform4i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void> _glProgramUniform4i64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64*, void>)getProcAddress("glProgramUniform4i64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64EXT*, void> _glProgramUniform4i64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint64EXT*, void>)getProcAddress("glProgramUniform4i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, void> _glProgramUniform4iEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, void>)getProcAddress("glProgramUniform4iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glProgramUniform4iv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glProgramUniform4iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void> _glProgramUniform4ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLint*, void>)getProcAddress("glProgramUniform4ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, GLuint, void> _glProgramUniform4ui = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glProgramUniform4ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, GLuint64, GLuint64, GLuint64, void> _glProgramUniform4ui64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, GLuint64, GLuint64, GLuint64, void>)getProcAddress("glProgramUniform4ui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT, void> _glProgramUniform4ui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT, void>)getProcAddress("glProgramUniform4ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void> _glProgramUniform4ui64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void>)getProcAddress("glProgramUniform4ui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void> _glProgramUniform4ui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glProgramUniform4ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, GLuint, void> _glProgramUniform4uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glProgramUniform4uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glProgramUniform4uiv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glProgramUniform4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void> _glProgramUniform4uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint*, void>)getProcAddress("glProgramUniform4uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, void> _glProgramUniformHandleui64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, void>)getProcAddress("glProgramUniformHandleui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, void> _glProgramUniformHandleui64IMG = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, void>)getProcAddress("glProgramUniformHandleui64IMG");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, void> _glProgramUniformHandleui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64, void>)getProcAddress("glProgramUniformHandleui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void> _glProgramUniformHandleui64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void>)getProcAddress("glProgramUniformHandleui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void> _glProgramUniformHandleui64vIMG = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void>)getProcAddress("glProgramUniformHandleui64vIMG");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void> _glProgramUniformHandleui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64*, void>)getProcAddress("glProgramUniformHandleui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix2dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix2dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix2dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix2dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix2fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix2fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix2fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix2fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix2x3dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix2x3dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix2x3dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix2x3dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix2x3fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix2x3fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix2x3fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix2x3fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix2x4dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix2x4dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix2x4dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix2x4dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix2x4fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix2x4fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix2x4fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix2x4fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix3dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix3dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix3dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix3dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix3fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix3fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix3fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix3fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix3x2dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix3x2dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix3x2dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix3x2dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix3x2fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix3x2fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix3x2fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix3x2fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix3x4dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix3x4dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix3x4dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix3x4dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix3x4fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix3x4fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix3x4fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix3x4fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix4dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix4dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix4dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix4dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix4fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix4fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix4fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix4fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix4x2dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix4x2dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix4x2dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix4x2dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix4x2fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix4x2fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix4x2fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix4x2fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix4x3dv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix4x3dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void> _glProgramUniformMatrix4x3dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glProgramUniformMatrix4x3dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix4x3fv = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix4x3fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void> _glProgramUniformMatrix4x3fvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glProgramUniformMatrix4x3fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, void> _glProgramUniformui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint64EXT, void>)getProcAddress("glProgramUniformui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void> _glProgramUniformui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glProgramUniformui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glProgramVertexLimitNV = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glProgramVertexLimitNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glProvokingVertex = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glProvokingVertex");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glProvokingVertexEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glProvokingVertexEXT");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glPushAttrib = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glPushAttrib");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glPushClientAttrib = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glPushClientAttrib");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glPushClientAttribDefaultEXT = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glPushClientAttribDefaultEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void> _glPushDebugGroup = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void>)getProcAddress("glPushDebugGroup");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void> _glPushDebugGroupKHR = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLsizei, GLchar*, void>)getProcAddress("glPushDebugGroupKHR");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLchar*, void> _glPushGroupMarkerEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLchar*, void>)getProcAddress("glPushGroupMarkerEXT");
	private readonly delegate* unmanaged[Stdcall]<void> _glPushMatrix = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glPushMatrix");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glPushName = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glPushName");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glQueryCounter = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glQueryCounter");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glQueryCounterEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glQueryCounterEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, GLint*, GLbitfield> _glQueryMatrixxOES = (delegate* unmanaged[Stdcall]<GLfixed*, GLint*, GLbitfield>)getProcAddress("glQueryMatrixxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLuint, void> _glQueryObjectParameteruiAMD = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLuint, void>)getProcAddress("glQueryObjectParameteruiAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint, GLint*, GLint> _glQueryResourceNV = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint, GLint*, GLint>)getProcAddress("glQueryResourceNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLchar*, void> _glQueryResourceTagNV = (delegate* unmanaged[Stdcall]<GLint, GLchar*, void>)getProcAddress("glQueryResourceTagNV");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glRasterPos2d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glRasterPos2d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glRasterPos2dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glRasterPos2dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glRasterPos2f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glRasterPos2f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glRasterPos2fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glRasterPos2fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> _glRasterPos2i = (delegate* unmanaged[Stdcall]<GLint, GLint, void>)getProcAddress("glRasterPos2i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glRasterPos2iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glRasterPos2iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, void> _glRasterPos2s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, void>)getProcAddress("glRasterPos2s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glRasterPos2sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glRasterPos2sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void> _glRasterPos2xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void>)getProcAddress("glRasterPos2xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glRasterPos2xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glRasterPos2xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glRasterPos3d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glRasterPos3d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glRasterPos3dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glRasterPos3dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glRasterPos3f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glRasterPos3f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glRasterPos3fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glRasterPos3fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glRasterPos3i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glRasterPos3i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glRasterPos3iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glRasterPos3iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glRasterPos3s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glRasterPos3s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glRasterPos3sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glRasterPos3sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glRasterPos3xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glRasterPos3xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glRasterPos3xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glRasterPos3xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void> _glRasterPos4d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glRasterPos4d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glRasterPos4dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glRasterPos4dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glRasterPos4f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glRasterPos4f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glRasterPos4fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glRasterPos4fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> _glRasterPos4i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void>)getProcAddress("glRasterPos4i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glRasterPos4iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glRasterPos4iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void> _glRasterPos4s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glRasterPos4s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glRasterPos4sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glRasterPos4sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glRasterPos4xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glRasterPos4xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glRasterPos4xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glRasterPos4xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean, void> _glRasterSamplesEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean, void>)getProcAddress("glRasterSamplesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glReadBuffer = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glReadBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glReadBufferIndexedEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glReadBufferIndexedEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glReadBufferNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glReadBufferNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glReadInstrumentsSGIX = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glReadInstrumentsSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glReadPixels = (delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glReadPixels");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void> _glReadnPixels = (delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glReadnPixels");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void> _glReadnPixelsARB = (delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glReadnPixelsARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void> _glReadnPixelsEXT = (delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glReadnPixelsEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void> _glReadnPixelsKHR = (delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void*, void>)getProcAddress("glReadnPixelsKHR");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLboolean> _glReleaseKeyedMutexWin32EXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint64, GLboolean>)getProcAddress("glReleaseKeyedMutexWin32EXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void> _glRectd = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glRectd");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, GLdouble*, void> _glRectdv = (delegate* unmanaged[Stdcall]<GLdouble*, GLdouble*, void>)getProcAddress("glRectdv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glRectf = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glRectf");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void> _glRectfv = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void>)getProcAddress("glRectfv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> _glRecti = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void>)getProcAddress("glRecti");
	private readonly delegate* unmanaged[Stdcall]<GLint*, GLint*, void> _glRectiv = (delegate* unmanaged[Stdcall]<GLint*, GLint*, void>)getProcAddress("glRectiv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void> _glRects = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glRects");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, GLshort*, void> _glRectsv = (delegate* unmanaged[Stdcall]<GLshort*, GLshort*, void>)getProcAddress("glRectsv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glRectxOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glRectxOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, GLfixed*, void> _glRectxvOES = (delegate* unmanaged[Stdcall]<GLfixed*, GLfixed*, void>)getProcAddress("glRectxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glReferencePlaneSGIX = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glReferencePlaneSGIX");
	private readonly delegate* unmanaged[Stdcall]<void> _glReleaseShaderCompiler = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glReleaseShaderCompiler");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glRenderGpuMaskNV = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glRenderGpuMaskNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint> _glRenderMode = (delegate* unmanaged[Stdcall]<GLenum, GLint>)getProcAddress("glRenderMode");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorage = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorage");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageMultisample = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageMultisample");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageMultisampleANGLE = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageMultisampleANGLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageMultisampleAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageMultisampleAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageMultisampleAdvancedAMD = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageMultisampleAdvancedAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageMultisampleCoverageNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageMultisampleCoverageNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageMultisampleEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageMultisampleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageMultisampleIMG = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageMultisampleIMG");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageMultisampleNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageMultisampleNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, void> _glRenderbufferStorageOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, void>)getProcAddress("glRenderbufferStorageOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glReplacementCodePointerSUN = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glReplacementCodePointerSUN");
	private readonly delegate* unmanaged[Stdcall]<GLubyte, void> _glReplacementCodeubSUN = (delegate* unmanaged[Stdcall]<GLubyte, void>)getProcAddress("glReplacementCodeubSUN");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, void> _glReplacementCodeubvSUN = (delegate* unmanaged[Stdcall]<GLubyte*, void>)getProcAddress("glReplacementCodeubvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glReplacementCodeuiColor3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glReplacementCodeuiColor3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, void> _glReplacementCodeuiColor3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, void>)getProcAddress("glReplacementCodeuiColor3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glReplacementCodeuiColor4fNormal3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glReplacementCodeuiColor4fNormal3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, GLfloat*, void> _glReplacementCodeuiColor4fNormal3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, GLfloat*, void>)getProcAddress("glReplacementCodeuiColor4fNormal3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat, void> _glReplacementCodeuiColor4ubVertex3fSUN = (delegate* unmanaged[Stdcall]<GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glReplacementCodeuiColor4ubVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLubyte*, GLfloat*, void> _glReplacementCodeuiColor4ubVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLuint*, GLubyte*, GLfloat*, void>)getProcAddress("glReplacementCodeuiColor4ubVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glReplacementCodeuiNormal3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glReplacementCodeuiNormal3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, void> _glReplacementCodeuiNormal3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, void>)getProcAddress("glReplacementCodeuiNormal3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glReplacementCodeuiSUN = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glReplacementCodeuiSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, GLfloat*, GLfloat*, void> _glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, GLfloat*, GLfloat*, void>)getProcAddress("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, GLfloat*, void> _glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, GLfloat*, void>)getProcAddress("glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glReplacementCodeuiTexCoord2fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glReplacementCodeuiTexCoord2fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, void> _glReplacementCodeuiTexCoord2fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, GLfloat*, void>)getProcAddress("glReplacementCodeuiTexCoord2fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, void> _glReplacementCodeuiVertex3fSUN = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glReplacementCodeuiVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, void> _glReplacementCodeuiVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLuint*, GLfloat*, void>)getProcAddress("glReplacementCodeuiVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, void> _glReplacementCodeuivSUN = (delegate* unmanaged[Stdcall]<GLuint*, void>)getProcAddress("glReplacementCodeuivSUN");
	private readonly delegate* unmanaged[Stdcall]<GLushort, void> _glReplacementCodeusSUN = (delegate* unmanaged[Stdcall]<GLushort, void>)getProcAddress("glReplacementCodeusSUN");
	private readonly delegate* unmanaged[Stdcall]<GLushort*, void> _glReplacementCodeusvSUN = (delegate* unmanaged[Stdcall]<GLushort*, void>)getProcAddress("glReplacementCodeusvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glRequestResidentProgramsNV = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glRequestResidentProgramsNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glResetHistogram = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glResetHistogram");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glResetHistogramEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glResetHistogramEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glResetMemoryObjectParameterNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glResetMemoryObjectParameterNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glResetMinmax = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glResetMinmax");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glResetMinmaxEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glResetMinmaxEXT");
	private readonly delegate* unmanaged[Stdcall]<void> _glResizeBuffersMESA = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glResizeBuffersMESA");
	private readonly delegate* unmanaged[Stdcall]<void> _glResolveDepthValuesNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glResolveDepthValuesNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glResolveMultisampleFramebufferAPPLE = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glResolveMultisampleFramebufferAPPLE");
	private readonly delegate* unmanaged[Stdcall]<void> _glResumeTransformFeedback = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glResumeTransformFeedback");
	private readonly delegate* unmanaged[Stdcall]<void> _glResumeTransformFeedbackNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glResumeTransformFeedbackNV");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void> _glRotated = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glRotated");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glRotatef = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glRotatef");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glRotatex = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glRotatex");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glRotatexOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glRotatexOES");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLboolean, void> _glSampleCoverage = (delegate* unmanaged[Stdcall]<GLfloat, GLboolean, void>)getProcAddress("glSampleCoverage");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLboolean, void> _glSampleCoverageARB = (delegate* unmanaged[Stdcall]<GLfloat, GLboolean, void>)getProcAddress("glSampleCoverageARB");
	private readonly delegate* unmanaged[Stdcall]<GLclampx, GLboolean, void> _glSampleCoveragex = (delegate* unmanaged[Stdcall]<GLclampx, GLboolean, void>)getProcAddress("glSampleCoveragex");
	private readonly delegate* unmanaged[Stdcall]<GLclampx, GLboolean, void> _glSampleCoveragexOES = (delegate* unmanaged[Stdcall]<GLclampx, GLboolean, void>)getProcAddress("glSampleCoveragexOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, void> _glSampleMapATI = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, void>)getProcAddress("glSampleMapATI");
	private readonly delegate* unmanaged[Stdcall]<GLclampf, GLboolean, void> _glSampleMaskEXT = (delegate* unmanaged[Stdcall]<GLclampf, GLboolean, void>)getProcAddress("glSampleMaskEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, void> _glSampleMaskIndexedNV = (delegate* unmanaged[Stdcall]<GLuint, GLbitfield, void>)getProcAddress("glSampleMaskIndexedNV");
	private readonly delegate* unmanaged[Stdcall]<GLclampf, GLboolean, void> _glSampleMaskSGIS = (delegate* unmanaged[Stdcall]<GLclampf, GLboolean, void>)getProcAddress("glSampleMaskSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, void> _glSampleMaski = (delegate* unmanaged[Stdcall]<GLuint, GLbitfield, void>)getProcAddress("glSampleMaski");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glSamplePatternEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glSamplePatternEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glSamplePatternSGIS = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glSamplePatternSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glSamplerParameterIiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glSamplerParameterIiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glSamplerParameterIivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glSamplerParameterIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glSamplerParameterIivOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glSamplerParameterIivOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glSamplerParameterIuiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glSamplerParameterIuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glSamplerParameterIuivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glSamplerParameterIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glSamplerParameterIuivOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glSamplerParameterIuivOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void> _glSamplerParameterf = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void>)getProcAddress("glSamplerParameterf");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glSamplerParameterfv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glSamplerParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glSamplerParameteri = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glSamplerParameteri");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glSamplerParameteriv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glSamplerParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glScaled = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glScaled");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glScalef = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glScalef");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glScalex = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glScalex");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glScalexOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glScalexOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, void> _glScissor = (delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glScissor");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, void> _glScissorArrayv = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, void>)getProcAddress("glScissorArrayv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, void> _glScissorArrayvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, void>)getProcAddress("glScissorArrayvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, void> _glScissorArrayvOES = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, void>)getProcAddress("glScissorArrayvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, void> _glScissorExclusiveArrayvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, void>)getProcAddress("glScissorExclusiveArrayvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, void> _glScissorExclusiveNV = (delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glScissorExclusiveNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLsizei, void> _glScissorIndexed = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glScissorIndexed");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLsizei, void> _glScissorIndexedNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glScissorIndexedNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLsizei, void> _glScissorIndexedOES = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glScissorIndexedOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glScissorIndexedv = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glScissorIndexedv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glScissorIndexedvNV = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glScissorIndexedvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glScissorIndexedvOES = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glScissorIndexedvOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void> _glSecondaryColor3b = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void>)getProcAddress("glSecondaryColor3b");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void> _glSecondaryColor3bEXT = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void>)getProcAddress("glSecondaryColor3bEXT");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glSecondaryColor3bv = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glSecondaryColor3bv");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glSecondaryColor3bvEXT = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glSecondaryColor3bvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glSecondaryColor3d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glSecondaryColor3d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glSecondaryColor3dEXT = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glSecondaryColor3dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glSecondaryColor3dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glSecondaryColor3dv");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glSecondaryColor3dvEXT = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glSecondaryColor3dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glSecondaryColor3f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glSecondaryColor3f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glSecondaryColor3fEXT = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glSecondaryColor3fEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glSecondaryColor3fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glSecondaryColor3fv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glSecondaryColor3fvEXT = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glSecondaryColor3fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void> _glSecondaryColor3hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glSecondaryColor3hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glSecondaryColor3hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glSecondaryColor3hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glSecondaryColor3i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glSecondaryColor3i");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glSecondaryColor3iEXT = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glSecondaryColor3iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glSecondaryColor3iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glSecondaryColor3iv");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glSecondaryColor3ivEXT = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glSecondaryColor3ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glSecondaryColor3s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glSecondaryColor3s");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glSecondaryColor3sEXT = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glSecondaryColor3sEXT");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glSecondaryColor3sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glSecondaryColor3sv");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glSecondaryColor3svEXT = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glSecondaryColor3svEXT");
	private readonly delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, void> _glSecondaryColor3ub = (delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, void>)getProcAddress("glSecondaryColor3ub");
	private readonly delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, void> _glSecondaryColor3ubEXT = (delegate* unmanaged[Stdcall]<GLubyte, GLubyte, GLubyte, void>)getProcAddress("glSecondaryColor3ubEXT");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, void> _glSecondaryColor3ubv = (delegate* unmanaged[Stdcall]<GLubyte*, void>)getProcAddress("glSecondaryColor3ubv");
	private readonly delegate* unmanaged[Stdcall]<GLubyte*, void> _glSecondaryColor3ubvEXT = (delegate* unmanaged[Stdcall]<GLubyte*, void>)getProcAddress("glSecondaryColor3ubvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glSecondaryColor3ui = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glSecondaryColor3ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glSecondaryColor3uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glSecondaryColor3uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, void> _glSecondaryColor3uiv = (delegate* unmanaged[Stdcall]<GLuint*, void>)getProcAddress("glSecondaryColor3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint*, void> _glSecondaryColor3uivEXT = (delegate* unmanaged[Stdcall]<GLuint*, void>)getProcAddress("glSecondaryColor3uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLushort, GLushort, GLushort, void> _glSecondaryColor3us = (delegate* unmanaged[Stdcall]<GLushort, GLushort, GLushort, void>)getProcAddress("glSecondaryColor3us");
	private readonly delegate* unmanaged[Stdcall]<GLushort, GLushort, GLushort, void> _glSecondaryColor3usEXT = (delegate* unmanaged[Stdcall]<GLushort, GLushort, GLushort, void>)getProcAddress("glSecondaryColor3usEXT");
	private readonly delegate* unmanaged[Stdcall]<GLushort*, void> _glSecondaryColor3usv = (delegate* unmanaged[Stdcall]<GLushort*, void>)getProcAddress("glSecondaryColor3usv");
	private readonly delegate* unmanaged[Stdcall]<GLushort*, void> _glSecondaryColor3usvEXT = (delegate* unmanaged[Stdcall]<GLushort*, void>)getProcAddress("glSecondaryColor3usvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void> _glSecondaryColorFormatNV = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void>)getProcAddress("glSecondaryColorFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glSecondaryColorP3ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glSecondaryColorP3ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glSecondaryColorP3uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glSecondaryColorP3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glSecondaryColorPointer = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glSecondaryColorPointer");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glSecondaryColorPointerEXT = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glSecondaryColorPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLint, void*, GLint, void> _glSecondaryColorPointerListIBM = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLint, void*, GLint, void>)getProcAddress("glSecondaryColorPointerListIBM");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void> _glSelectBuffer = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, void>)getProcAddress("glSelectBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLuint, GLint, GLuint*, void> _glSelectPerfMonitorCountersAMD = (delegate* unmanaged[Stdcall]<GLuint, GLboolean, GLuint, GLint, GLuint*, void>)getProcAddress("glSelectPerfMonitorCountersAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glSemaphoreParameterivNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glSemaphoreParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64*, void> _glSemaphoreParameterui64vEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint64*, void>)getProcAddress("glSemaphoreParameterui64vEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void*, void> _glSeparableFilter2D = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void*, void>)getProcAddress("glSeparableFilter2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void*, void> _glSeparableFilter2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, void*, void*, void>)getProcAddress("glSeparableFilter2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glSetFenceAPPLE = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glSetFenceAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glSetFenceNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glSetFenceNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glSetFragmentShaderConstantATI = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glSetFragmentShaderConstantATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glSetInvariantEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glSetInvariantEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void> _glSetLocalConstantEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void*, void>)getProcAddress("glSetLocalConstantEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void> _glSetMultisamplefvAMD = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLfloat*, void>)getProcAddress("glSetMultisamplefvAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glShadeModel = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glShadeModel");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLenum, void*, GLsizei, void> _glShaderBinary = (delegate* unmanaged[Stdcall]<GLsizei, GLuint*, GLenum, void*, GLsizei, void>)getProcAddress("glShaderBinary");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void> _glShaderOp1EXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, void>)getProcAddress("glShaderOp1EXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, void> _glShaderOp2EXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, void>)getProcAddress("glShaderOp2EXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, void> _glShaderOp3EXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glShaderOp3EXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLint*, void> _glShaderSource = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLint*, void>)getProcAddress("glShaderSource");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, GLsizei, GLcharARB*, GLint*, void> _glShaderSourceARB = (delegate* unmanaged[Stdcall]<GLhandleARB, GLsizei, GLcharARB*, GLint*, void>)getProcAddress("glShaderSourceARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glShaderStorageBlockBinding = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glShaderStorageBlockBinding");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glShadingRateEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glShadingRateEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glShadingRateCombinerOpsEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glShadingRateCombinerOpsEXT");
	private readonly delegate* unmanaged[Stdcall]<GLboolean, void> _glShadingRateImageBarrierNV = (delegate* unmanaged[Stdcall]<GLboolean, void>)getProcAddress("glShadingRateImageBarrierNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glShadingRateQCOM = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glShadingRateQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLenum*, void> _glShadingRateImagePaletteNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLenum*, void>)getProcAddress("glShadingRateImagePaletteNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glShadingRateSampleOrderNV = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glShadingRateSampleOrderNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void> _glShadingRateSampleOrderCustomNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLint*, void>)getProcAddress("glShadingRateSampleOrderCustomNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void> _glSharpenTexFuncSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLfloat*, void>)getProcAddress("glSharpenTexFuncSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint*, GLuint, GLuint*, GLenum*, void> _glSignalSemaphoreEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint*, GLuint, GLuint*, GLenum*, void>)getProcAddress("glSignalSemaphoreEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLuint64*, void> _glSignalSemaphoreui64NVX = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLuint64*, void>)getProcAddress("glSignalSemaphoreui64NVX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLuint, GLuint*, GLuint*, void> _glSpecializeShader = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLuint, GLuint*, GLuint*, void>)getProcAddress("glSpecializeShader");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLuint, GLuint*, GLuint*, void> _glSpecializeShaderARB = (delegate* unmanaged[Stdcall]<GLuint, GLchar*, GLuint, GLuint*, GLuint*, void>)getProcAddress("glSpecializeShaderARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glSpriteParameterfSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glSpriteParameterfSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glSpriteParameterfvSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glSpriteParameterfvSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glSpriteParameteriSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glSpriteParameteriSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glSpriteParameterivSGIX = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glSpriteParameterivSGIX");
	private readonly delegate* unmanaged[Stdcall]<void> _glStartInstrumentsSGIX = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glStartInstrumentsSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLbitfield, void> _glStartTilingQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLbitfield, void>)getProcAddress("glStartTilingQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, void> _glStateCaptureNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, void>)getProcAddress("glStateCaptureNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLuint, void> _glStencilClearTagEXT = (delegate* unmanaged[Stdcall]<GLsizei, GLuint, void>)getProcAddress("glStencilClearTagEXT");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLenum, GLuint, GLenum, GLfloat*, void> _glStencilFillPathInstancedNV = (delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLenum, GLuint, GLenum, GLfloat*, void>)getProcAddress("glStencilFillPathInstancedNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, void> _glStencilFillPathNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, void>)getProcAddress("glStencilFillPathNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint, void> _glStencilFunc = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLuint, void>)getProcAddress("glStencilFunc");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLuint, void> _glStencilFuncSeparate = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLuint, void>)getProcAddress("glStencilFuncSeparate");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLuint, void> _glStencilFuncSeparateATI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, GLuint, void>)getProcAddress("glStencilFuncSeparateATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glStencilMask = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glStencilMask");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glStencilMaskSeparate = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glStencilMaskSeparate");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void> _glStencilOp = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, void>)getProcAddress("glStencilOp");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void> _glStencilOpSeparate = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glStencilOpSeparate");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void> _glStencilOpSeparateATI = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glStencilOpSeparateATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glStencilOpValueAMD = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glStencilOpValueAMD");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLint, GLuint, GLenum, GLfloat*, void> _glStencilStrokePathInstancedNV = (delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLint, GLuint, GLenum, GLfloat*, void>)getProcAddress("glStencilStrokePathInstancedNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, void> _glStencilStrokePathNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, void>)getProcAddress("glStencilStrokePathNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLenum, GLuint, GLenum, GLenum, GLfloat*, void> _glStencilThenCoverFillPathInstancedNV = (delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLenum, GLuint, GLenum, GLenum, GLfloat*, void>)getProcAddress("glStencilThenCoverFillPathInstancedNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, void> _glStencilThenCoverFillPathNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, void>)getProcAddress("glStencilThenCoverFillPathNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLint, GLuint, GLenum, GLenum, GLfloat*, void> _glStencilThenCoverStrokePathInstancedNV = (delegate* unmanaged[Stdcall]<GLsizei, GLenum, void*, GLuint, GLint, GLuint, GLenum, GLenum, GLfloat*, void>)getProcAddress("glStencilThenCoverStrokePathInstancedNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLenum, void> _glStencilThenCoverStrokePathNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, GLenum, void>)getProcAddress("glStencilThenCoverStrokePathNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glStopInstrumentsSGIX = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glStopInstrumentsSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, void*, void> _glStringMarkerGREMEDY = (delegate* unmanaged[Stdcall]<GLsizei, void*, void>)getProcAddress("glStringMarkerGREMEDY");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glSubpixelPrecisionBiasNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glSubpixelPrecisionBiasNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLenum, GLenum, GLenum, void> _glSwizzleEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glSwizzleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glSyncTextureINTEL = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glSyncTextureINTEL");
	private readonly delegate* unmanaged[Stdcall]<void> _glTagSampleBufferSGIX = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glTagSampleBufferSGIX");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void> _glTangent3bEXT = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void>)getProcAddress("glTangent3bEXT");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glTangent3bvEXT = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glTangent3bvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glTangent3dEXT = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glTangent3dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glTangent3dvEXT = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glTangent3dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glTangent3fEXT = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTangent3fEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glTangent3fvEXT = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glTangent3fvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glTangent3iEXT = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glTangent3iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glTangent3ivEXT = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glTangent3ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glTangent3sEXT = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glTangent3sEXT");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glTangent3svEXT = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glTangent3svEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glTangentPointerEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glTangentPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glTbufferMask3DFX = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glTbufferMask3DFX");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glTessellationFactorAMD = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glTessellationFactorAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glTessellationModeAMD = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glTessellationModeAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glTestFenceAPPLE = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glTestFenceAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glTestFenceNV = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glTestFenceNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean> _glTestObjectAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLboolean>)getProcAddress("glTestObjectAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint64, void> _glTexAttachMemoryNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLuint64, void>)getProcAddress("glTexAttachMemoryNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glTexBuffer = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glTexBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glTexBufferARB = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glTexBufferARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glTexBufferEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glTexBufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void> _glTexBufferOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, void>)getProcAddress("glTexBufferOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLintptr, GLsizeiptr, void> _glTexBufferRange = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glTexBufferRange");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLintptr, GLsizeiptr, void> _glTexBufferRangeEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glTexBufferRangeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLintptr, GLsizeiptr, void> _glTexBufferRangeOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glTexBufferRangeOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glTexBumpParameterfvATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glTexBumpParameterfvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glTexBumpParameterivATI = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glTexBumpParameterivATI");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, void> _glTexCoord1bOES = (delegate* unmanaged[Stdcall]<GLbyte, void>)getProcAddress("glTexCoord1bOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glTexCoord1bvOES = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glTexCoord1bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, void> _glTexCoord1d = (delegate* unmanaged[Stdcall]<GLdouble, void>)getProcAddress("glTexCoord1d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glTexCoord1dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glTexCoord1dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glTexCoord1f = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glTexCoord1f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glTexCoord1fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glTexCoord1fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, void> _glTexCoord1hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, void>)getProcAddress("glTexCoord1hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glTexCoord1hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glTexCoord1hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glTexCoord1i = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glTexCoord1i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glTexCoord1iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glTexCoord1iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, void> _glTexCoord1s = (delegate* unmanaged[Stdcall]<GLshort, void>)getProcAddress("glTexCoord1s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glTexCoord1sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glTexCoord1sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glTexCoord1xOES = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glTexCoord1xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glTexCoord1xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glTexCoord1xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, void> _glTexCoord2bOES = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, void>)getProcAddress("glTexCoord2bOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glTexCoord2bvOES = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glTexCoord2bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glTexCoord2d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glTexCoord2d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glTexCoord2dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glTexCoord2dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glTexCoord2f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glTexCoord2f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glTexCoord2fColor3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTexCoord2fColor3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, void> _glTexCoord2fColor3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, void>)getProcAddress("glTexCoord2fColor3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glTexCoord2fColor4fNormal3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTexCoord2fColor4fNormal3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, GLfloat*, void> _glTexCoord2fColor4fNormal3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, GLfloat*, void>)getProcAddress("glTexCoord2fColor4fNormal3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat, void> _glTexCoord2fColor4ubVertex3fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTexCoord2fColor4ubVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLubyte*, GLfloat*, void> _glTexCoord2fColor4ubVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLubyte*, GLfloat*, void>)getProcAddress("glTexCoord2fColor4ubVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glTexCoord2fNormal3fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTexCoord2fNormal3fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, void> _glTexCoord2fNormal3fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, void>)getProcAddress("glTexCoord2fNormal3fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glTexCoord2fVertex3fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTexCoord2fVertex3fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void> _glTexCoord2fVertex3fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void>)getProcAddress("glTexCoord2fVertex3fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glTexCoord2fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glTexCoord2fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, void> _glTexCoord2hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, void>)getProcAddress("glTexCoord2hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glTexCoord2hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glTexCoord2hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> _glTexCoord2i = (delegate* unmanaged[Stdcall]<GLint, GLint, void>)getProcAddress("glTexCoord2i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glTexCoord2iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glTexCoord2iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, void> _glTexCoord2s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, void>)getProcAddress("glTexCoord2s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glTexCoord2sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glTexCoord2sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void> _glTexCoord2xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void>)getProcAddress("glTexCoord2xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glTexCoord2xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glTexCoord2xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void> _glTexCoord3bOES = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void>)getProcAddress("glTexCoord3bOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glTexCoord3bvOES = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glTexCoord3bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glTexCoord3d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glTexCoord3d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glTexCoord3dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glTexCoord3dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glTexCoord3f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTexCoord3f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glTexCoord3fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glTexCoord3fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void> _glTexCoord3hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glTexCoord3hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glTexCoord3hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glTexCoord3hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glTexCoord3i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glTexCoord3i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glTexCoord3iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glTexCoord3iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glTexCoord3s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glTexCoord3s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glTexCoord3sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glTexCoord3sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glTexCoord3xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glTexCoord3xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glTexCoord3xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glTexCoord3xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, GLbyte, void> _glTexCoord4bOES = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, GLbyte, void>)getProcAddress("glTexCoord4bOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glTexCoord4bvOES = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glTexCoord4bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void> _glTexCoord4d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glTexCoord4d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glTexCoord4dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glTexCoord4dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glTexCoord4f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTexCoord4f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glTexCoord4fColor4fNormal3fVertex4fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTexCoord4fColor4fNormal3fVertex4fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, GLfloat*, void> _glTexCoord4fColor4fNormal3fVertex4fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, GLfloat*, GLfloat*, void>)getProcAddress("glTexCoord4fColor4fNormal3fVertex4fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glTexCoord4fVertex4fSUN = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTexCoord4fVertex4fSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void> _glTexCoord4fVertex4fvSUN = (delegate* unmanaged[Stdcall]<GLfloat*, GLfloat*, void>)getProcAddress("glTexCoord4fVertex4fvSUN");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glTexCoord4fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glTexCoord4fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void> _glTexCoord4hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glTexCoord4hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glTexCoord4hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glTexCoord4hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> _glTexCoord4i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void>)getProcAddress("glTexCoord4i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glTexCoord4iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glTexCoord4iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void> _glTexCoord4s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glTexCoord4s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glTexCoord4sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glTexCoord4sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void> _glTexCoord4xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, GLfixed, void>)getProcAddress("glTexCoord4xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glTexCoord4xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glTexCoord4xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void> _glTexCoordFormatNV = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void>)getProcAddress("glTexCoordFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glTexCoordP1ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glTexCoordP1ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glTexCoordP1uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glTexCoordP1uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glTexCoordP2ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glTexCoordP2ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glTexCoordP2uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glTexCoordP2uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glTexCoordP3ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glTexCoordP3ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glTexCoordP3uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glTexCoordP3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glTexCoordP4ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glTexCoordP4ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glTexCoordP4uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glTexCoordP4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glTexCoordPointer = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glTexCoordPointer");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, GLsizei, void*, void> _glTexCoordPointerEXT = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, GLsizei, void*, void>)getProcAddress("glTexCoordPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLint, void*, GLint, void> _glTexCoordPointerListIBM = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLint, void*, GLint, void>)getProcAddress("glTexCoordPointerListIBM");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, void*, void> _glTexCoordPointervINTEL = (delegate* unmanaged[Stdcall]<GLint, GLenum, void*, void>)getProcAddress("glTexCoordPointervINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glTexEnvf = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glTexEnvf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glTexEnvfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glTexEnvfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glTexEnvi = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glTexEnvi");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glTexEnviv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glTexEnviv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glTexEnvx = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glTexEnvx");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glTexEnvxOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glTexEnvxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glTexEnvxv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glTexEnvxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glTexEnvxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glTexEnvxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glTexEstimateMotionQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glTexEstimateMotionQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void> _glTexEstimateMotionRegionsQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glTexEstimateMotionRegionsQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat, void> _glExtrapolateTex2DQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat, void>)getProcAddress("glExtrapolateTex2DQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLfloat*, void> _glTexFilterFuncSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLfloat*, void>)getProcAddress("glTexFilterFuncSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLdouble, void> _glTexGend = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLdouble, void>)getProcAddress("glTexGend");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLdouble*, void> _glTexGendv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLdouble*, void>)getProcAddress("glTexGendv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glTexGenf = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glTexGenf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glTexGenfOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glTexGenfOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glTexGenfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glTexGenfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glTexGenfvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glTexGenfvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glTexGeni = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glTexGeni");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glTexGeniOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glTexGeniOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glTexGeniv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glTexGeniv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glTexGenivOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glTexGenivOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glTexGenxOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glTexGenxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glTexGenxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glTexGenxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, void*, void> _glTexImage1D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glTexImage1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> _glTexImage2D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glTexImage2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void> _glTexImage2DMultisample = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexImage2DMultisample");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean, void> _glTexImage2DMultisampleCoverageNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexImage2DMultisampleCoverageNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> _glTexImage3D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glTexImage3D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> _glTexImage3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glTexImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTexImage3DMultisample = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexImage3DMultisample");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTexImage3DMultisampleCoverageNV = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexImage3DMultisampleCoverageNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> _glTexImage3DOES = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glTexImage3DOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> _glTexImage4DSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glTexImage4DSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTexPageCommitmentARB = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexPageCommitmentARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTexPageCommitmentEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexPageCommitmentEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, GLboolean, void> _glTexPageCommitmentMemNV = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, GLboolean, void>)getProcAddress("glTexPageCommitmentMemNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glTexParameterIiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glTexParameterIiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glTexParameterIivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glTexParameterIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glTexParameterIivOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glTexParameterIivOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glTexParameterIuiv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glTexParameterIuiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glTexParameterIuivEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glTexParameterIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void> _glTexParameterIuivOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLuint*, void>)getProcAddress("glTexParameterIuivOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void> _glTexParameterf = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat, void>)getProcAddress("glTexParameterf");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void> _glTexParameterfv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfloat*, void>)getProcAddress("glTexParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glTexParameteri = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glTexParameteri");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glTexParameteriv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glTexParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glTexParameterx = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glTexParameterx");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void> _glTexParameterxOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed, void>)getProcAddress("glTexParameterxOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glTexParameterxv = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glTexParameterxv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void> _glTexParameterxvOES = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLfixed*, void>)getProcAddress("glTexParameterxvOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glTexRenderbufferNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glTexRenderbufferNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, void> _glTexStorage1D = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, void>)getProcAddress("glTexStorage1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, void> _glTexStorage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, void>)getProcAddress("glTexStorage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> _glTexStorage2D = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glTexStorage2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> _glTexStorage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glTexStorage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void> _glTexStorage2DMultisample = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexStorage2DMultisample");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void> _glTexStorage3D = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glTexStorage3D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void> _glTexStorage3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glTexStorage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTexStorage3DMultisample = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexStorage3DMultisample");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTexStorage3DMultisampleOES = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexStorage3DMultisampleOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLint*, void> _glTexStorageAttribs2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLint*, void>)getProcAddress("glTexStorageAttribs2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLint*, void> _glTexStorageAttribs3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLint*, void>)getProcAddress("glTexStorageAttribs3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLuint, GLuint64, void> _glTexStorageMem1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLuint, GLuint64, void>)getProcAddress("glTexStorageMem1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64, void> _glTexStorageMem2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64, void>)getProcAddress("glTexStorageMem2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64, void> _glTexStorageMem2DMultisampleEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64, void>)getProcAddress("glTexStorageMem2DMultisampleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, void> _glTexStorageMem3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, void>)getProcAddress("glTexStorageMem3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64, void> _glTexStorageMem3DMultisampleEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64, void>)getProcAddress("glTexStorageMem3DMultisampleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield, void> _glTexStorageSparseAMD = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield, void>)getProcAddress("glTexStorageSparseAMD");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void*, void> _glTexSubImage1D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTexSubImage1D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void*, void> _glTexSubImage1DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTexSubImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTexSubImage2D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTexSubImage2D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTexSubImage2DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTexSubImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTexSubImage3D = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTexSubImage3D");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTexSubImage3DEXT = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTexSubImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTexSubImage3DOES = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTexSubImage3DOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTexSubImage4DSGIS = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTexSubImage4DSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64, void> _glTextureAttachMemoryNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint64, void>)getProcAddress("glTextureAttachMemoryNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glTextureBarrier = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glTextureBarrier");
	private readonly delegate* unmanaged[Stdcall]<void> _glTextureBarrierNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glTextureBarrierNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, void> _glTextureBuffer = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, void>)getProcAddress("glTextureBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, void> _glTextureBufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, void>)getProcAddress("glTextureBufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLintptr, GLsizeiptr, void> _glTextureBufferRange = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glTextureBufferRange");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr, void> _glTextureBufferRangeEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glTextureBufferRangeEXT");
	private readonly delegate* unmanaged[Stdcall]<GLboolean, GLboolean, GLboolean, GLboolean, void> _glTextureColorMaskSGIS = (delegate* unmanaged[Stdcall]<GLboolean, GLboolean, GLboolean, GLboolean, void>)getProcAddress("glTextureColorMaskSGIS");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glTextureFoveationParametersQCOM = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTextureFoveationParametersQCOM");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, void*, void> _glTextureImage1DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glTextureImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> _glTextureImage2DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glTextureImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean, void> _glTextureImage2DMultisampleCoverageNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTextureImage2DMultisampleCoverageNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean, void> _glTextureImage2DMultisampleNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTextureImage2DMultisampleNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void> _glTextureImage3DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, void*, void>)getProcAddress("glTextureImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTextureImage3DMultisampleCoverageNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTextureImage3DMultisampleCoverageNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTextureImage3DMultisampleNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTextureImage3DMultisampleNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glTextureLightEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glTextureLightEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, void> _glTextureMaterialEXT = (delegate* unmanaged[Stdcall]<GLenum, GLenum, void>)getProcAddress("glTextureMaterialEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, void> _glTextureNormalEXT = (delegate* unmanaged[Stdcall]<GLenum, void>)getProcAddress("glTextureNormalEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTexturePageCommitmentEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTexturePageCommitmentEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, GLboolean, void> _glTexturePageCommitmentMemNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, GLboolean, void>)getProcAddress("glTexturePageCommitmentMemNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glTextureParameterIiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glTextureParameterIiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> _glTextureParameterIivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void>)getProcAddress("glTextureParameterIivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void> _glTextureParameterIuiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint*, void>)getProcAddress("glTextureParameterIuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint*, void> _glTextureParameterIuivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLuint*, void>)getProcAddress("glTextureParameterIuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void> _glTextureParameterf = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat, void>)getProcAddress("glTextureParameterf");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLfloat, void> _glTextureParameterfEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLfloat, void>)getProcAddress("glTextureParameterfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void> _glTextureParameterfv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLfloat*, void>)getProcAddress("glTextureParameterfv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLfloat*, void> _glTextureParameterfvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLfloat*, void>)getProcAddress("glTextureParameterfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glTextureParameteri = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glTextureParameteri");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint, void> _glTextureParameteriEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint, void>)getProcAddress("glTextureParameteriEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void> _glTextureParameteriv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint*, void>)getProcAddress("glTextureParameteriv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void> _glTextureParameterivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLint*, void>)getProcAddress("glTextureParameterivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void> _glTextureRangeAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, void*, void>)getProcAddress("glTextureRangeAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, void> _glTextureRenderbufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, void>)getProcAddress("glTextureRenderbufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, void> _glTextureStorage1D = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, void>)getProcAddress("glTextureStorage1D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, void> _glTextureStorage1DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, void>)getProcAddress("glTextureStorage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, void> _glTextureStorage2D = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glTextureStorage2D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, void> _glTextureStorage2DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, void>)getProcAddress("glTextureStorage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void> _glTextureStorage2DMultisample = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTextureStorage2DMultisample");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void> _glTextureStorage2DMultisampleEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTextureStorage2DMultisampleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void> _glTextureStorage3D = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glTextureStorage3D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void> _glTextureStorage3DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, void>)getProcAddress("glTextureStorage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTextureStorage3DMultisample = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTextureStorage3DMultisample");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void> _glTextureStorage3DMultisampleEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, void>)getProcAddress("glTextureStorage3DMultisampleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLuint, GLuint64, void> _glTextureStorageMem1DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLuint, GLuint64, void>)getProcAddress("glTextureStorageMem1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64, void> _glTextureStorageMem2DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLuint, GLuint64, void>)getProcAddress("glTextureStorageMem2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64, void> _glTextureStorageMem2DMultisampleEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean, GLuint, GLuint64, void>)getProcAddress("glTextureStorageMem2DMultisampleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, void> _glTextureStorageMem3DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLuint, GLuint64, void>)getProcAddress("glTextureStorageMem3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64, void> _glTextureStorageMem3DMultisampleEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean, GLuint, GLuint64, void>)getProcAddress("glTextureStorageMem3DMultisampleEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield, void> _glTextureStorageSparseAMD = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield, void>)getProcAddress("glTextureStorageSparseAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLenum, GLenum, void*, void> _glTextureSubImage1D = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTextureSubImage1D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void*, void> _glTextureSubImage1DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTextureSubImage1DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTextureSubImage2D = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTextureSubImage2D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTextureSubImage2DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTextureSubImage2DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTextureSubImage3D = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTextureSubImage3D");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void> _glTextureSubImage3DEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, void*, void>)getProcAddress("glTextureSubImage3DEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, void> _glTextureView = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glTextureView");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, void> _glTextureViewEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glTextureViewEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, void> _glTextureViewOES = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glTextureViewOES");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLenum, void> _glTrackMatrixNV = (delegate* unmanaged[Stdcall]<GLenum, GLuint, GLenum, GLenum, void>)getProcAddress("glTrackMatrixNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLint*, GLenum, void> _glTransformFeedbackAttribsNV = (delegate* unmanaged[Stdcall]<GLsizei, GLint*, GLenum, void>)getProcAddress("glTransformFeedbackAttribsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glTransformFeedbackBufferBase = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glTransformFeedbackBufferBase");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLintptr, GLsizeiptr, void> _glTransformFeedbackBufferRange = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLintptr, GLsizeiptr, void>)getProcAddress("glTransformFeedbackBufferRange");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLint*, GLsizei, GLint*, GLenum, void> _glTransformFeedbackStreamAttribsNV = (delegate* unmanaged[Stdcall]<GLsizei, GLint*, GLsizei, GLint*, GLenum, void>)getProcAddress("glTransformFeedbackStreamAttribsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLenum, void> _glTransformFeedbackVaryings = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLenum, void>)getProcAddress("glTransformFeedbackVaryings");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLenum, void> _glTransformFeedbackVaryingsEXT = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLchar*, GLenum, void>)getProcAddress("glTransformFeedbackVaryingsEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, GLenum, void> _glTransformFeedbackVaryingsNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLint*, GLenum, void>)getProcAddress("glTransformFeedbackVaryingsNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLfloat*, void> _glTransformPathNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLfloat*, void>)getProcAddress("glTransformPathNV");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glTranslated = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glTranslated");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glTranslatef = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glTranslatef");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glTranslatex = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glTranslatex");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glTranslatexOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glTranslatexOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLdouble, void> _glUniform1d = (delegate* unmanaged[Stdcall]<GLint, GLdouble, void>)getProcAddress("glUniform1d");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLdouble*, void> _glUniform1dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLdouble*, void>)getProcAddress("glUniform1dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, void> _glUniform1f = (delegate* unmanaged[Stdcall]<GLint, GLfloat, void>)getProcAddress("glUniform1f");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, void> _glUniform1fARB = (delegate* unmanaged[Stdcall]<GLint, GLfloat, void>)getProcAddress("glUniform1fARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> _glUniform1fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void>)getProcAddress("glUniform1fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> _glUniform1fvARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void>)getProcAddress("glUniform1fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> _glUniform1i = (delegate* unmanaged[Stdcall]<GLint, GLint, void>)getProcAddress("glUniform1i");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint64, void> _glUniform1i64ARB = (delegate* unmanaged[Stdcall]<GLint, GLint64, void>)getProcAddress("glUniform1i64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint64EXT, void> _glUniform1i64NV = (delegate* unmanaged[Stdcall]<GLint, GLint64EXT, void>)getProcAddress("glUniform1i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64*, void> _glUniform1i64vARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64*, void>)getProcAddress("glUniform1i64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64EXT*, void> _glUniform1i64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64EXT*, void>)getProcAddress("glUniform1i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> _glUniform1iARB = (delegate* unmanaged[Stdcall]<GLint, GLint, void>)getProcAddress("glUniform1iARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> _glUniform1iv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void>)getProcAddress("glUniform1iv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> _glUniform1ivARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void>)getProcAddress("glUniform1ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint, void> _glUniform1ui = (delegate* unmanaged[Stdcall]<GLint, GLuint, void>)getProcAddress("glUniform1ui");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64, void> _glUniform1ui64ARB = (delegate* unmanaged[Stdcall]<GLint, GLuint64, void>)getProcAddress("glUniform1ui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, void> _glUniform1ui64NV = (delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, void>)getProcAddress("glUniform1ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void> _glUniform1ui64vARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void>)getProcAddress("glUniform1ui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void> _glUniform1ui64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glUniform1ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint, void> _glUniform1uiEXT = (delegate* unmanaged[Stdcall]<GLint, GLuint, void>)getProcAddress("glUniform1uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> _glUniform1uiv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void>)getProcAddress("glUniform1uiv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> _glUniform1uivEXT = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void>)getProcAddress("glUniform1uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, void> _glUniform2d = (delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, void>)getProcAddress("glUniform2d");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLdouble*, void> _glUniform2dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLdouble*, void>)getProcAddress("glUniform2dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, void> _glUniform2f = (delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, void>)getProcAddress("glUniform2f");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, void> _glUniform2fARB = (delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, void>)getProcAddress("glUniform2fARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> _glUniform2fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void>)getProcAddress("glUniform2fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> _glUniform2fvARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void>)getProcAddress("glUniform2fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glUniform2i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glUniform2i");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint64, GLint64, void> _glUniform2i64ARB = (delegate* unmanaged[Stdcall]<GLint, GLint64, GLint64, void>)getProcAddress("glUniform2i64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint64EXT, GLint64EXT, void> _glUniform2i64NV = (delegate* unmanaged[Stdcall]<GLint, GLint64EXT, GLint64EXT, void>)getProcAddress("glUniform2i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64*, void> _glUniform2i64vARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64*, void>)getProcAddress("glUniform2i64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64EXT*, void> _glUniform2i64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64EXT*, void>)getProcAddress("glUniform2i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glUniform2iARB = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glUniform2iARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> _glUniform2iv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void>)getProcAddress("glUniform2iv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> _glUniform2ivARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void>)getProcAddress("glUniform2ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, void> _glUniform2ui = (delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, void>)getProcAddress("glUniform2ui");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64, GLuint64, void> _glUniform2ui64ARB = (delegate* unmanaged[Stdcall]<GLint, GLuint64, GLuint64, void>)getProcAddress("glUniform2ui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, GLuint64EXT, void> _glUniform2ui64NV = (delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, GLuint64EXT, void>)getProcAddress("glUniform2ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void> _glUniform2ui64vARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void>)getProcAddress("glUniform2ui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void> _glUniform2ui64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glUniform2ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, void> _glUniform2uiEXT = (delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, void>)getProcAddress("glUniform2uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> _glUniform2uiv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void>)getProcAddress("glUniform2uiv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> _glUniform2uivEXT = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void>)getProcAddress("glUniform2uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, GLdouble, void> _glUniform3d = (delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glUniform3d");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLdouble*, void> _glUniform3dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLdouble*, void>)getProcAddress("glUniform3dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, void> _glUniform3f = (delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glUniform3f");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, void> _glUniform3fARB = (delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glUniform3fARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> _glUniform3fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void>)getProcAddress("glUniform3fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> _glUniform3fvARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void>)getProcAddress("glUniform3fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> _glUniform3i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void>)getProcAddress("glUniform3i");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint64, GLint64, GLint64, void> _glUniform3i64ARB = (delegate* unmanaged[Stdcall]<GLint, GLint64, GLint64, GLint64, void>)getProcAddress("glUniform3i64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint64EXT, GLint64EXT, GLint64EXT, void> _glUniform3i64NV = (delegate* unmanaged[Stdcall]<GLint, GLint64EXT, GLint64EXT, GLint64EXT, void>)getProcAddress("glUniform3i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64*, void> _glUniform3i64vARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64*, void>)getProcAddress("glUniform3i64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64EXT*, void> _glUniform3i64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64EXT*, void>)getProcAddress("glUniform3i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> _glUniform3iARB = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void>)getProcAddress("glUniform3iARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> _glUniform3iv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void>)getProcAddress("glUniform3iv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> _glUniform3ivARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void>)getProcAddress("glUniform3ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, void> _glUniform3ui = (delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, void>)getProcAddress("glUniform3ui");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64, GLuint64, GLuint64, void> _glUniform3ui64ARB = (delegate* unmanaged[Stdcall]<GLint, GLuint64, GLuint64, GLuint64, void>)getProcAddress("glUniform3ui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, void> _glUniform3ui64NV = (delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, void>)getProcAddress("glUniform3ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void> _glUniform3ui64vARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void>)getProcAddress("glUniform3ui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void> _glUniform3ui64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glUniform3ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, void> _glUniform3uiEXT = (delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, void>)getProcAddress("glUniform3uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> _glUniform3uiv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void>)getProcAddress("glUniform3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> _glUniform3uivEXT = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void>)getProcAddress("glUniform3uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glUniform4d = (delegate* unmanaged[Stdcall]<GLint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glUniform4d");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLdouble*, void> _glUniform4dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLdouble*, void>)getProcAddress("glUniform4dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glUniform4f = (delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glUniform4f");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glUniform4fARB = (delegate* unmanaged[Stdcall]<GLint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glUniform4fARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> _glUniform4fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void>)getProcAddress("glUniform4fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void> _glUniform4fvARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLfloat*, void>)getProcAddress("glUniform4fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, void> _glUniform4i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, void>)getProcAddress("glUniform4i");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint64, GLint64, GLint64, GLint64, void> _glUniform4i64ARB = (delegate* unmanaged[Stdcall]<GLint, GLint64, GLint64, GLint64, GLint64, void>)getProcAddress("glUniform4i64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT, void> _glUniform4i64NV = (delegate* unmanaged[Stdcall]<GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT, void>)getProcAddress("glUniform4i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64*, void> _glUniform4i64vARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64*, void>)getProcAddress("glUniform4i64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64EXT*, void> _glUniform4i64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint64EXT*, void>)getProcAddress("glUniform4i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, void> _glUniform4iARB = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, GLint, void>)getProcAddress("glUniform4iARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> _glUniform4iv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void>)getProcAddress("glUniform4iv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void> _glUniform4ivARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLint*, void>)getProcAddress("glUniform4ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, GLuint, void> _glUniform4ui = (delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glUniform4ui");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64, GLuint64, GLuint64, GLuint64, void> _glUniform4ui64ARB = (delegate* unmanaged[Stdcall]<GLint, GLuint64, GLuint64, GLuint64, GLuint64, void>)getProcAddress("glUniform4ui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT, void> _glUniform4ui64NV = (delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT, void>)getProcAddress("glUniform4ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void> _glUniform4ui64vARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void>)getProcAddress("glUniform4ui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void> _glUniform4ui64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glUniform4ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, GLuint, void> _glUniform4uiEXT = (delegate* unmanaged[Stdcall]<GLint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glUniform4uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> _glUniform4uiv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void>)getProcAddress("glUniform4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void> _glUniform4uivEXT = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint*, void>)getProcAddress("glUniform4uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glUniformBlockBinding = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glUniformBlockBinding");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, void> _glUniformBufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLuint, void>)getProcAddress("glUniformBufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64, void> _glUniformHandleui64ARB = (delegate* unmanaged[Stdcall]<GLint, GLuint64, void>)getProcAddress("glUniformHandleui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64, void> _glUniformHandleui64IMG = (delegate* unmanaged[Stdcall]<GLint, GLuint64, void>)getProcAddress("glUniformHandleui64IMG");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64, void> _glUniformHandleui64NV = (delegate* unmanaged[Stdcall]<GLint, GLuint64, void>)getProcAddress("glUniformHandleui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void> _glUniformHandleui64vARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void>)getProcAddress("glUniformHandleui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void> _glUniformHandleui64vIMG = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void>)getProcAddress("glUniformHandleui64vIMG");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void> _glUniformHandleui64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64*, void>)getProcAddress("glUniformHandleui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void> _glUniformMatrix2dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glUniformMatrix2dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix2fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix2fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix2fvARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix2fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void> _glUniformMatrix2x3dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glUniformMatrix2x3dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix2x3fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix2x3fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix2x3fvNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix2x3fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void> _glUniformMatrix2x4dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glUniformMatrix2x4dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix2x4fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix2x4fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix2x4fvNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix2x4fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void> _glUniformMatrix3dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glUniformMatrix3dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix3fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix3fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix3fvARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix3fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void> _glUniformMatrix3x2dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glUniformMatrix3x2dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix3x2fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix3x2fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix3x2fvNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix3x2fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void> _glUniformMatrix3x4dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glUniformMatrix3x4dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix3x4fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix3x4fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix3x4fvNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix3x4fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void> _glUniformMatrix4dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glUniformMatrix4dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix4fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix4fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix4fvARB = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix4fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void> _glUniformMatrix4x2dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glUniformMatrix4x2dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix4x2fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix4x2fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix4x2fvNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix4x2fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void> _glUniformMatrix4x3dv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLdouble*, void>)getProcAddress("glUniformMatrix4x3dv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix4x3fv = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix4x3fv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void> _glUniformMatrix4x3fvNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLboolean, GLfloat*, void>)getProcAddress("glUniformMatrix4x3fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void> _glUniformSubroutinesuiv = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLuint*, void>)getProcAddress("glUniformSubroutinesuiv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, void> _glUniformui64NV = (delegate* unmanaged[Stdcall]<GLint, GLuint64EXT, void>)getProcAddress("glUniformui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void> _glUniformui64vNV = (delegate* unmanaged[Stdcall]<GLint, GLsizei, GLuint64EXT*, void>)getProcAddress("glUniformui64vNV");
	private readonly delegate* unmanaged[Stdcall]<void> _glUnlockArraysEXT = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glUnlockArraysEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean> _glUnmapBuffer = (delegate* unmanaged[Stdcall]<GLenum, GLboolean>)getProcAddress("glUnmapBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean> _glUnmapBufferARB = (delegate* unmanaged[Stdcall]<GLenum, GLboolean>)getProcAddress("glUnmapBufferARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLboolean> _glUnmapBufferOES = (delegate* unmanaged[Stdcall]<GLenum, GLboolean>)getProcAddress("glUnmapBufferOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glUnmapNamedBuffer = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glUnmapNamedBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLboolean> _glUnmapNamedBufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLboolean>)getProcAddress("glUnmapNamedBufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glUnmapObjectBufferATI = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glUnmapObjectBufferATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, void> _glUnmapTexture2DINTEL = (delegate* unmanaged[Stdcall]<GLuint, GLint, void>)getProcAddress("glUnmapTexture2DINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, void*, GLenum, void> _glUpdateObjectBufferATI = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, void*, GLenum, void>)getProcAddress("glUpdateObjectBufferATI");
	private readonly delegate* unmanaged[Stdcall]<GLbitfield, void> _glUploadGpuMaskNVX = (delegate* unmanaged[Stdcall]<GLbitfield, void>)getProcAddress("glUploadGpuMaskNVX");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glUseProgram = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glUseProgram");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, void> _glUseProgramObjectARB = (delegate* unmanaged[Stdcall]<GLhandleARB, void>)getProcAddress("glUseProgramObjectARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, void> _glUseProgramStages = (delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, void>)getProcAddress("glUseProgramStages");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, void> _glUseProgramStagesEXT = (delegate* unmanaged[Stdcall]<GLuint, GLbitfield, GLuint, void>)getProcAddress("glUseProgramStagesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glUseShaderProgramEXT = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glUseShaderProgramEXT");
	private readonly delegate* unmanaged[Stdcall]<void> _glVDPAUFiniNV = (delegate* unmanaged[Stdcall]<void>)getProcAddress("glVDPAUFiniNV");
	private readonly delegate* unmanaged[Stdcall]<GLvdpauSurfaceNV, GLenum, GLsizei, GLsizei*, GLint*, void> _glVDPAUGetSurfaceivNV = (delegate* unmanaged[Stdcall]<GLvdpauSurfaceNV, GLenum, GLsizei, GLsizei*, GLint*, void>)getProcAddress("glVDPAUGetSurfaceivNV");
	private readonly delegate* unmanaged[Stdcall]<void*, void*, void> _glVDPAUInitNV = (delegate* unmanaged[Stdcall]<void*, void*, void>)getProcAddress("glVDPAUInitNV");
	private readonly delegate* unmanaged[Stdcall]<GLvdpauSurfaceNV, GLboolean> _glVDPAUIsSurfaceNV = (delegate* unmanaged[Stdcall]<GLvdpauSurfaceNV, GLboolean>)getProcAddress("glVDPAUIsSurfaceNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLvdpauSurfaceNV*, void> _glVDPAUMapSurfacesNV = (delegate* unmanaged[Stdcall]<GLsizei, GLvdpauSurfaceNV*, void>)getProcAddress("glVDPAUMapSurfacesNV");
	private readonly delegate* unmanaged[Stdcall]<void*, GLenum, GLsizei, GLuint*, GLvdpauSurfaceNV> _glVDPAURegisterOutputSurfaceNV = (delegate* unmanaged[Stdcall]<void*, GLenum, GLsizei, GLuint*, GLvdpauSurfaceNV>)getProcAddress("glVDPAURegisterOutputSurfaceNV");
	private readonly delegate* unmanaged[Stdcall]<void*, GLenum, GLsizei, GLuint*, GLvdpauSurfaceNV> _glVDPAURegisterVideoSurfaceNV = (delegate* unmanaged[Stdcall]<void*, GLenum, GLsizei, GLuint*, GLvdpauSurfaceNV>)getProcAddress("glVDPAURegisterVideoSurfaceNV");
	private readonly delegate* unmanaged[Stdcall]<void*, GLenum, GLsizei, GLuint*, GLboolean, GLvdpauSurfaceNV> _glVDPAURegisterVideoSurfaceWithPictureStructureNV = (delegate* unmanaged[Stdcall]<void*, GLenum, GLsizei, GLuint*, GLboolean, GLvdpauSurfaceNV>)getProcAddress("glVDPAURegisterVideoSurfaceWithPictureStructureNV");
	private readonly delegate* unmanaged[Stdcall]<GLvdpauSurfaceNV, GLenum, void> _glVDPAUSurfaceAccessNV = (delegate* unmanaged[Stdcall]<GLvdpauSurfaceNV, GLenum, void>)getProcAddress("glVDPAUSurfaceAccessNV");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, GLvdpauSurfaceNV*, void> _glVDPAUUnmapSurfacesNV = (delegate* unmanaged[Stdcall]<GLsizei, GLvdpauSurfaceNV*, void>)getProcAddress("glVDPAUUnmapSurfacesNV");
	private readonly delegate* unmanaged[Stdcall]<GLvdpauSurfaceNV, void> _glVDPAUUnregisterSurfaceNV = (delegate* unmanaged[Stdcall]<GLvdpauSurfaceNV, void>)getProcAddress("glVDPAUUnregisterSurfaceNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glValidateProgram = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glValidateProgram");
	private readonly delegate* unmanaged[Stdcall]<GLhandleARB, void> _glValidateProgramARB = (delegate* unmanaged[Stdcall]<GLhandleARB, void>)getProcAddress("glValidateProgramARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glValidateProgramPipeline = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glValidateProgramPipeline");
	private readonly delegate* unmanaged[Stdcall]<GLuint, void> _glValidateProgramPipelineEXT = (delegate* unmanaged[Stdcall]<GLuint, void>)getProcAddress("glValidateProgramPipelineEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLuint, GLuint, void> _glVariantArrayObjectATI = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLsizei, GLuint, GLuint, void>)getProcAddress("glVariantArrayObjectATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, void*, void> _glVariantPointerEXT = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLuint, void*, void>)getProcAddress("glVariantPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> _glVariantbvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void>)getProcAddress("glVariantbvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVariantdvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVariantdvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVariantfvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVariantfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVariantivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVariantivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVariantsvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVariantsvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> _glVariantubvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void>)getProcAddress("glVariantubvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVariantuivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVariantuivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> _glVariantusvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLushort*, void>)getProcAddress("glVariantusvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, void> _glVertex2bOES = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, void>)getProcAddress("glVertex2bOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glVertex2bvOES = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glVertex2bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glVertex2d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glVertex2d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glVertex2dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glVertex2dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glVertex2f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glVertex2f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glVertex2fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glVertex2fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, void> _glVertex2hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, void>)getProcAddress("glVertex2hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glVertex2hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glVertex2hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> _glVertex2i = (delegate* unmanaged[Stdcall]<GLint, GLint, void>)getProcAddress("glVertex2i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glVertex2iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glVertex2iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, void> _glVertex2s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, void>)getProcAddress("glVertex2s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glVertex2sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glVertex2sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, void> _glVertex2xOES = (delegate* unmanaged[Stdcall]<GLfixed, void>)getProcAddress("glVertex2xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glVertex2xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glVertex2xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void> _glVertex3bOES = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, void>)getProcAddress("glVertex3bOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glVertex3bvOES = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glVertex3bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glVertex3d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertex3d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glVertex3dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glVertex3dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glVertex3f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertex3f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glVertex3fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glVertex3fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void> _glVertex3hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glVertex3hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glVertex3hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glVertex3hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glVertex3i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glVertex3i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glVertex3iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glVertex3iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glVertex3s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glVertex3s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glVertex3sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glVertex3sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void> _glVertex3xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, void>)getProcAddress("glVertex3xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glVertex3xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glVertex3xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, GLbyte, void> _glVertex4bOES = (delegate* unmanaged[Stdcall]<GLbyte, GLbyte, GLbyte, GLbyte, void>)getProcAddress("glVertex4bOES");
	private readonly delegate* unmanaged[Stdcall]<GLbyte*, void> _glVertex4bvOES = (delegate* unmanaged[Stdcall]<GLbyte*, void>)getProcAddress("glVertex4bvOES");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void> _glVertex4d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertex4d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glVertex4dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glVertex4dv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glVertex4f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertex4f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glVertex4fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glVertex4fv");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void> _glVertex4hNV = (delegate* unmanaged[Stdcall]<GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glVertex4hNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glVertex4hvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glVertex4hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> _glVertex4i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void>)getProcAddress("glVertex4i");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glVertex4iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glVertex4iv");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void> _glVertex4s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glVertex4s");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glVertex4sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glVertex4sv");
	private readonly delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void> _glVertex4xOES = (delegate* unmanaged[Stdcall]<GLfixed, GLfixed, GLfixed, void>)getProcAddress("glVertex4xOES");
	private readonly delegate* unmanaged[Stdcall]<GLfixed*, void> _glVertex4xvOES = (delegate* unmanaged[Stdcall]<GLfixed*, void>)getProcAddress("glVertex4xvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glVertexArrayAttribBinding = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glVertexArrayAttribBinding");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLboolean, GLuint, void> _glVertexArrayAttribFormat = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLboolean, GLuint, void>)getProcAddress("glVertexArrayAttribFormat");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void> _glVertexArrayAttribIFormat = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void>)getProcAddress("glVertexArrayAttribIFormat");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void> _glVertexArrayAttribLFormat = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void>)getProcAddress("glVertexArrayAttribLFormat");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLintptr, GLsizei, void> _glVertexArrayBindVertexBufferEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLintptr, GLsizei, void>)getProcAddress("glVertexArrayBindVertexBufferEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glVertexArrayBindingDivisor = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glVertexArrayBindingDivisor");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void> _glVertexArrayColorOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayColorOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLintptr, void> _glVertexArrayEdgeFlagOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayEdgeFlagOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexArrayElementBuffer = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexArrayElementBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLsizei, GLintptr, void> _glVertexArrayFogCoordOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayFogCoordOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLsizei, GLintptr, void> _glVertexArrayIndexOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayIndexOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr, void> _glVertexArrayMultiTexCoordOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayMultiTexCoordOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLsizei, GLintptr, void> _glVertexArrayNormalOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayNormalOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glVertexArrayParameteriAPPLE = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glVertexArrayParameteriAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, void*, void> _glVertexArrayRangeAPPLE = (delegate* unmanaged[Stdcall]<GLsizei, void*, void>)getProcAddress("glVertexArrayRangeAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLsizei, void*, void> _glVertexArrayRangeNV = (delegate* unmanaged[Stdcall]<GLsizei, void*, void>)getProcAddress("glVertexArrayRangeNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void> _glVertexArraySecondaryColorOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArraySecondaryColorOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void> _glVertexArrayTexCoordOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayTexCoordOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glVertexArrayVertexAttribBindingEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glVertexArrayVertexAttribBindingEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glVertexArrayVertexAttribDivisorEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glVertexArrayVertexAttribDivisorEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLboolean, GLuint, void> _glVertexArrayVertexAttribFormatEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLboolean, GLuint, void>)getProcAddress("glVertexArrayVertexAttribFormatEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void> _glVertexArrayVertexAttribIFormatEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void>)getProcAddress("glVertexArrayVertexAttribIFormatEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void> _glVertexArrayVertexAttribIOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayVertexAttribIOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void> _glVertexArrayVertexAttribLFormatEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLuint, void>)getProcAddress("glVertexArrayVertexAttribLFormatEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void> _glVertexArrayVertexAttribLOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayVertexAttribLOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr, void> _glVertexArrayVertexAttribOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayVertexAttribOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glVertexArrayVertexBindingDivisorEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glVertexArrayVertexBindingDivisorEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLintptr, GLsizei, void> _glVertexArrayVertexBuffer = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLintptr, GLsizei, void>)getProcAddress("glVertexArrayVertexBuffer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLuint*, GLintptr*, GLsizei*, void> _glVertexArrayVertexBuffers = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLsizei, GLuint*, GLintptr*, GLsizei*, void>)getProcAddress("glVertexArrayVertexBuffers");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void> _glVertexArrayVertexOffsetEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr, void>)getProcAddress("glVertexArrayVertexOffsetEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, void> _glVertexAttrib1d = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, void>)getProcAddress("glVertexAttrib1d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, void> _glVertexAttrib1dARB = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, void>)getProcAddress("glVertexAttrib1dARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, void> _glVertexAttrib1dNV = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, void>)getProcAddress("glVertexAttrib1dNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib1dv = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib1dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib1dvARB = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib1dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib1dvNV = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib1dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, void> _glVertexAttrib1f = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, void>)getProcAddress("glVertexAttrib1f");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, void> _glVertexAttrib1fARB = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, void>)getProcAddress("glVertexAttrib1fARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, void> _glVertexAttrib1fNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, void>)getProcAddress("glVertexAttrib1fNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib1fv = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib1fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib1fvARB = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib1fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib1fvNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib1fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLhalfNV, void> _glVertexAttrib1hNV = (delegate* unmanaged[Stdcall]<GLuint, GLhalfNV, void>)getProcAddress("glVertexAttrib1hNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLhalfNV*, void> _glVertexAttrib1hvNV = (delegate* unmanaged[Stdcall]<GLuint, GLhalfNV*, void>)getProcAddress("glVertexAttrib1hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, void> _glVertexAttrib1s = (delegate* unmanaged[Stdcall]<GLuint, GLshort, void>)getProcAddress("glVertexAttrib1s");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, void> _glVertexAttrib1sARB = (delegate* unmanaged[Stdcall]<GLuint, GLshort, void>)getProcAddress("glVertexAttrib1sARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, void> _glVertexAttrib1sNV = (delegate* unmanaged[Stdcall]<GLuint, GLshort, void>)getProcAddress("glVertexAttrib1sNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib1sv = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib1sv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib1svARB = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib1svARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib1svNV = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib1svNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> _glVertexAttrib2d = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void>)getProcAddress("glVertexAttrib2d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> _glVertexAttrib2dARB = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void>)getProcAddress("glVertexAttrib2dARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> _glVertexAttrib2dNV = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void>)getProcAddress("glVertexAttrib2dNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib2dv = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib2dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib2dvARB = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib2dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib2dvNV = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib2dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void> _glVertexAttrib2f = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void>)getProcAddress("glVertexAttrib2f");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void> _glVertexAttrib2fARB = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void>)getProcAddress("glVertexAttrib2fARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void> _glVertexAttrib2fNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void>)getProcAddress("glVertexAttrib2fNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib2fv = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib2fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib2fvARB = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib2fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib2fvNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib2fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLhalfNV, GLhalfNV, void> _glVertexAttrib2hNV = (delegate* unmanaged[Stdcall]<GLuint, GLhalfNV, GLhalfNV, void>)getProcAddress("glVertexAttrib2hNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLhalfNV*, void> _glVertexAttrib2hvNV = (delegate* unmanaged[Stdcall]<GLuint, GLhalfNV*, void>)getProcAddress("glVertexAttrib2hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, void> _glVertexAttrib2s = (delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, void>)getProcAddress("glVertexAttrib2s");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, void> _glVertexAttrib2sARB = (delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, void>)getProcAddress("glVertexAttrib2sARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, void> _glVertexAttrib2sNV = (delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, void>)getProcAddress("glVertexAttrib2sNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib2sv = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib2sv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib2svARB = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib2svARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib2svNV = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib2svNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void> _glVertexAttrib3d = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttrib3d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void> _glVertexAttrib3dARB = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttrib3dARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void> _glVertexAttrib3dNV = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttrib3dNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib3dv = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib3dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib3dvARB = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib3dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib3dvNV = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib3dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, void> _glVertexAttrib3f = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertexAttrib3f");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, void> _glVertexAttrib3fARB = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertexAttrib3fARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, void> _glVertexAttrib3fNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertexAttrib3fNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib3fv = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib3fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib3fvARB = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib3fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib3fvNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib3fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLhalfNV, GLhalfNV, GLhalfNV, void> _glVertexAttrib3hNV = (delegate* unmanaged[Stdcall]<GLuint, GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glVertexAttrib3hNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLhalfNV*, void> _glVertexAttrib3hvNV = (delegate* unmanaged[Stdcall]<GLuint, GLhalfNV*, void>)getProcAddress("glVertexAttrib3hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, void> _glVertexAttrib3s = (delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, void>)getProcAddress("glVertexAttrib3s");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, void> _glVertexAttrib3sARB = (delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, void>)getProcAddress("glVertexAttrib3sARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, void> _glVertexAttrib3sNV = (delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, void>)getProcAddress("glVertexAttrib3sNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib3sv = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib3sv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib3svARB = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib3svARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib3svNV = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib3svNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> _glVertexAttrib4Nbv = (delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void>)getProcAddress("glVertexAttrib4Nbv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> _glVertexAttrib4NbvARB = (delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void>)getProcAddress("glVertexAttrib4NbvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttrib4Niv = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttrib4Niv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttrib4NivARB = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttrib4NivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib4Nsv = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib4Nsv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib4NsvARB = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib4NsvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte, GLubyte, GLubyte, GLubyte, void> _glVertexAttrib4Nub = (delegate* unmanaged[Stdcall]<GLuint, GLubyte, GLubyte, GLubyte, GLubyte, void>)getProcAddress("glVertexAttrib4Nub");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte, GLubyte, GLubyte, GLubyte, void> _glVertexAttrib4NubARB = (delegate* unmanaged[Stdcall]<GLuint, GLubyte, GLubyte, GLubyte, GLubyte, void>)getProcAddress("glVertexAttrib4NubARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> _glVertexAttrib4Nubv = (delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void>)getProcAddress("glVertexAttrib4Nubv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> _glVertexAttrib4NubvARB = (delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void>)getProcAddress("glVertexAttrib4NubvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttrib4Nuiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttrib4Nuiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttrib4NuivARB = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttrib4NuivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> _glVertexAttrib4Nusv = (delegate* unmanaged[Stdcall]<GLuint, GLushort*, void>)getProcAddress("glVertexAttrib4Nusv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> _glVertexAttrib4NusvARB = (delegate* unmanaged[Stdcall]<GLuint, GLushort*, void>)getProcAddress("glVertexAttrib4NusvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> _glVertexAttrib4bv = (delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void>)getProcAddress("glVertexAttrib4bv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> _glVertexAttrib4bvARB = (delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void>)getProcAddress("glVertexAttrib4bvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glVertexAttrib4d = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttrib4d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glVertexAttrib4dARB = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttrib4dARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glVertexAttrib4dNV = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttrib4dNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib4dv = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib4dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib4dvARB = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib4dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttrib4dvNV = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttrib4dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glVertexAttrib4f = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertexAttrib4f");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glVertexAttrib4fARB = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertexAttrib4fARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glVertexAttrib4fNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertexAttrib4fNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib4fv = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib4fv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib4fvARB = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib4fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glVertexAttrib4fvNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glVertexAttrib4fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void> _glVertexAttrib4hNV = (delegate* unmanaged[Stdcall]<GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV, void>)getProcAddress("glVertexAttrib4hNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLhalfNV*, void> _glVertexAttrib4hvNV = (delegate* unmanaged[Stdcall]<GLuint, GLhalfNV*, void>)getProcAddress("glVertexAttrib4hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttrib4iv = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttrib4iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttrib4ivARB = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttrib4ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, GLshort, void> _glVertexAttrib4s = (delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glVertexAttrib4s");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, GLshort, void> _glVertexAttrib4sARB = (delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glVertexAttrib4sARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, GLshort, void> _glVertexAttrib4sNV = (delegate* unmanaged[Stdcall]<GLuint, GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glVertexAttrib4sNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib4sv = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib4sv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib4svARB = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib4svARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttrib4svNV = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttrib4svNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte, GLubyte, GLubyte, GLubyte, void> _glVertexAttrib4ubNV = (delegate* unmanaged[Stdcall]<GLuint, GLubyte, GLubyte, GLubyte, GLubyte, void>)getProcAddress("glVertexAttrib4ubNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> _glVertexAttrib4ubv = (delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void>)getProcAddress("glVertexAttrib4ubv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> _glVertexAttrib4ubvARB = (delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void>)getProcAddress("glVertexAttrib4ubvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> _glVertexAttrib4ubvNV = (delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void>)getProcAddress("glVertexAttrib4ubvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttrib4uiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttrib4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttrib4uivARB = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttrib4uivARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> _glVertexAttrib4usv = (delegate* unmanaged[Stdcall]<GLuint, GLushort*, void>)getProcAddress("glVertexAttrib4usv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> _glVertexAttrib4usvARB = (delegate* unmanaged[Stdcall]<GLuint, GLushort*, void>)getProcAddress("glVertexAttrib4usvARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint, void> _glVertexAttribArrayObjectATI = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint, void>)getProcAddress("glVertexAttribArrayObjectATI");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexAttribBinding = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexAttribBinding");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexAttribDivisor = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexAttribDivisor");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexAttribDivisorANGLE = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexAttribDivisorANGLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexAttribDivisorARB = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexAttribDivisorARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexAttribDivisorEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexAttribDivisorEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexAttribDivisorNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexAttribDivisorNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLuint, void> _glVertexAttribFormat = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLuint, void>)getProcAddress("glVertexAttribFormat");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLsizei, void> _glVertexAttribFormatNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLsizei, void>)getProcAddress("glVertexAttribFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, void> _glVertexAttribI1i = (delegate* unmanaged[Stdcall]<GLuint, GLint, void>)getProcAddress("glVertexAttribI1i");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, void> _glVertexAttribI1iEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, void>)getProcAddress("glVertexAttribI1iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttribI1iv = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttribI1iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttribI1ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttribI1ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexAttribI1ui = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexAttribI1ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexAttribI1uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexAttribI1uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttribI1uiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttribI1uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttribI1uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttribI1uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void> _glVertexAttribI2i = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void>)getProcAddress("glVertexAttribI2i");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void> _glVertexAttribI2iEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, void>)getProcAddress("glVertexAttribI2iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttribI2iv = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttribI2iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttribI2ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttribI2ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glVertexAttribI2ui = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glVertexAttribI2ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void> _glVertexAttribI2uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, void>)getProcAddress("glVertexAttribI2uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttribI2uiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttribI2uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttribI2uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttribI2uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void> _glVertexAttribI3i = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void>)getProcAddress("glVertexAttribI3i");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void> _glVertexAttribI3iEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, void>)getProcAddress("glVertexAttribI3iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttribI3iv = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttribI3iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttribI3ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttribI3ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void> _glVertexAttribI3ui = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glVertexAttribI3ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void> _glVertexAttribI3uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glVertexAttribI3uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttribI3uiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttribI3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttribI3uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttribI3uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> _glVertexAttribI4bv = (delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void>)getProcAddress("glVertexAttribI4bv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void> _glVertexAttribI4bvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLbyte*, void>)getProcAddress("glVertexAttribI4bvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void> _glVertexAttribI4i = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void>)getProcAddress("glVertexAttribI4i");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void> _glVertexAttribI4iEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLint, GLint, GLint, void>)getProcAddress("glVertexAttribI4iEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttribI4iv = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttribI4iv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint*, void> _glVertexAttribI4ivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint*, void>)getProcAddress("glVertexAttribI4ivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttribI4sv = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttribI4sv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLshort*, void> _glVertexAttribI4svEXT = (delegate* unmanaged[Stdcall]<GLuint, GLshort*, void>)getProcAddress("glVertexAttribI4svEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> _glVertexAttribI4ubv = (delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void>)getProcAddress("glVertexAttribI4ubv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void> _glVertexAttribI4ubvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLubyte*, void>)getProcAddress("glVertexAttribI4ubvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLuint, void> _glVertexAttribI4ui = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glVertexAttribI4ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLuint, void> _glVertexAttribI4uiEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint, GLuint, GLuint, void>)getProcAddress("glVertexAttribI4uiEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttribI4uiv = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttribI4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, void> _glVertexAttribI4uivEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, void>)getProcAddress("glVertexAttribI4uivEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> _glVertexAttribI4usv = (delegate* unmanaged[Stdcall]<GLuint, GLushort*, void>)getProcAddress("glVertexAttribI4usv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLushort*, void> _glVertexAttribI4usvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLushort*, void>)getProcAddress("glVertexAttribI4usvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLuint, void> _glVertexAttribIFormat = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLuint, void>)getProcAddress("glVertexAttribIFormat");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void> _glVertexAttribIFormatNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void>)getProcAddress("glVertexAttribIFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void> _glVertexAttribIPointer = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void>)getProcAddress("glVertexAttribIPointer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void> _glVertexAttribIPointerEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void>)getProcAddress("glVertexAttribIPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, void> _glVertexAttribL1d = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, void>)getProcAddress("glVertexAttribL1d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, void> _glVertexAttribL1dEXT = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, void>)getProcAddress("glVertexAttribL1dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttribL1dv = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttribL1dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttribL1dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttribL1dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint64EXT, void> _glVertexAttribL1i64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint64EXT, void>)getProcAddress("glVertexAttribL1i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint64EXT*, void> _glVertexAttribL1i64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint64EXT*, void>)getProcAddress("glVertexAttribL1i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, void> _glVertexAttribL1ui64ARB = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, void>)getProcAddress("glVertexAttribL1ui64ARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, void> _glVertexAttribL1ui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, void>)getProcAddress("glVertexAttribL1ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void> _glVertexAttribL1ui64vARB = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void>)getProcAddress("glVertexAttribL1ui64vARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void> _glVertexAttribL1ui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void>)getProcAddress("glVertexAttribL1ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> _glVertexAttribL2d = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void>)getProcAddress("glVertexAttribL2d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void> _glVertexAttribL2dEXT = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, void>)getProcAddress("glVertexAttribL2dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttribL2dv = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttribL2dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttribL2dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttribL2dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint64EXT, GLint64EXT, void> _glVertexAttribL2i64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint64EXT, GLint64EXT, void>)getProcAddress("glVertexAttribL2i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint64EXT*, void> _glVertexAttribL2i64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint64EXT*, void>)getProcAddress("glVertexAttribL2i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint64EXT, void> _glVertexAttribL2ui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint64EXT, void>)getProcAddress("glVertexAttribL2ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void> _glVertexAttribL2ui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void>)getProcAddress("glVertexAttribL2ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void> _glVertexAttribL3d = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttribL3d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void> _glVertexAttribL3dEXT = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttribL3dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttribL3dv = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttribL3dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttribL3dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttribL3dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint64EXT, GLint64EXT, GLint64EXT, void> _glVertexAttribL3i64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint64EXT, GLint64EXT, GLint64EXT, void>)getProcAddress("glVertexAttribL3i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint64EXT*, void> _glVertexAttribL3i64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint64EXT*, void>)getProcAddress("glVertexAttribL3i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, void> _glVertexAttribL3ui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, void>)getProcAddress("glVertexAttribL3ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void> _glVertexAttribL3ui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void>)getProcAddress("glVertexAttribL3ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glVertexAttribL4d = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttribL4d");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void> _glVertexAttribL4dEXT = (delegate* unmanaged[Stdcall]<GLuint, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexAttribL4dEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttribL4dv = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttribL4dv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void> _glVertexAttribL4dvEXT = (delegate* unmanaged[Stdcall]<GLuint, GLdouble*, void>)getProcAddress("glVertexAttribL4dvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT, void> _glVertexAttribL4i64NV = (delegate* unmanaged[Stdcall]<GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT, void>)getProcAddress("glVertexAttribL4i64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint64EXT*, void> _glVertexAttribL4i64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLint64EXT*, void>)getProcAddress("glVertexAttribL4i64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT, void> _glVertexAttribL4ui64NV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT, void>)getProcAddress("glVertexAttribL4ui64NV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void> _glVertexAttribL4ui64vNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint64EXT*, void>)getProcAddress("glVertexAttribL4ui64vNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLuint, void> _glVertexAttribLFormat = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLuint, void>)getProcAddress("glVertexAttribLFormat");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void> _glVertexAttribLFormatNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void>)getProcAddress("glVertexAttribLFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void> _glVertexAttribLPointer = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void>)getProcAddress("glVertexAttribLPointer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void> _glVertexAttribLPointerEXT = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void>)getProcAddress("glVertexAttribLPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void> _glVertexAttribP1ui = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void>)getProcAddress("glVertexAttribP1ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint*, void> _glVertexAttribP1uiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint*, void>)getProcAddress("glVertexAttribP1uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void> _glVertexAttribP2ui = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void>)getProcAddress("glVertexAttribP2ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint*, void> _glVertexAttribP2uiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint*, void>)getProcAddress("glVertexAttribP2uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void> _glVertexAttribP3ui = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void>)getProcAddress("glVertexAttribP3ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint*, void> _glVertexAttribP3uiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint*, void>)getProcAddress("glVertexAttribP3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void> _glVertexAttribP4ui = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint, void>)getProcAddress("glVertexAttribP4ui");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint*, void> _glVertexAttribP4uiv = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLboolean, GLuint*, void>)getProcAddress("glVertexAttribP4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void> _glVertexAttribParameteriAMD = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLint, void>)getProcAddress("glVertexAttribParameteriAMD");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLsizei, void*, void> _glVertexAttribPointer = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLsizei, void*, void>)getProcAddress("glVertexAttribPointer");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLsizei, void*, void> _glVertexAttribPointerARB = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLboolean, GLsizei, void*, void>)getProcAddress("glVertexAttribPointerARB");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void> _glVertexAttribPointerNV = (delegate* unmanaged[Stdcall]<GLuint, GLint, GLenum, GLsizei, void*, void>)getProcAddress("glVertexAttribPointerNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void> _glVertexAttribs1dvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void>)getProcAddress("glVertexAttribs1dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glVertexAttribs1fvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glVertexAttribs1fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLhalfNV*, void> _glVertexAttribs1hvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLhalfNV*, void>)getProcAddress("glVertexAttribs1hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLshort*, void> _glVertexAttribs1svNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLshort*, void>)getProcAddress("glVertexAttribs1svNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void> _glVertexAttribs2dvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void>)getProcAddress("glVertexAttribs2dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glVertexAttribs2fvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glVertexAttribs2fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLhalfNV*, void> _glVertexAttribs2hvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLhalfNV*, void>)getProcAddress("glVertexAttribs2hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLshort*, void> _glVertexAttribs2svNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLshort*, void>)getProcAddress("glVertexAttribs2svNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void> _glVertexAttribs3dvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void>)getProcAddress("glVertexAttribs3dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glVertexAttribs3fvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glVertexAttribs3fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLhalfNV*, void> _glVertexAttribs3hvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLhalfNV*, void>)getProcAddress("glVertexAttribs3hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLshort*, void> _glVertexAttribs3svNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLshort*, void>)getProcAddress("glVertexAttribs3svNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void> _glVertexAttribs4dvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLdouble*, void>)getProcAddress("glVertexAttribs4dvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glVertexAttribs4fvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glVertexAttribs4fvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLhalfNV*, void> _glVertexAttribs4hvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLhalfNV*, void>)getProcAddress("glVertexAttribs4hvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLshort*, void> _glVertexAttribs4svNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLshort*, void>)getProcAddress("glVertexAttribs4svNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, void> _glVertexAttribs4ubvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLubyte*, void>)getProcAddress("glVertexAttribs4ubvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, void> _glVertexBindingDivisor = (delegate* unmanaged[Stdcall]<GLuint, GLuint, void>)getProcAddress("glVertexBindingDivisor");
	private readonly delegate* unmanaged[Stdcall]<GLint, void> _glVertexBlendARB = (delegate* unmanaged[Stdcall]<GLint, void>)getProcAddress("glVertexBlendARB");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glVertexBlendEnvfATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glVertexBlendEnvfATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glVertexBlendEnviATI = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glVertexBlendEnviATI");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void> _glVertexFormatNV = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void>)getProcAddress("glVertexFormatNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glVertexP2ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glVertexP2ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glVertexP2uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glVertexP2uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glVertexP3ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glVertexP3ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glVertexP3uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glVertexP3uiv");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint, void> _glVertexP4ui = (delegate* unmanaged[Stdcall]<GLenum, GLuint, void>)getProcAddress("glVertexP4ui");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLuint*, void> _glVertexP4uiv = (delegate* unmanaged[Stdcall]<GLenum, GLuint*, void>)getProcAddress("glVertexP4uiv");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glVertexPointer = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glVertexPointer");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, GLsizei, void*, void> _glVertexPointerEXT = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, GLsizei, void*, void>)getProcAddress("glVertexPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLint, void*, GLint, void> _glVertexPointerListIBM = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLint, void*, GLint, void>)getProcAddress("glVertexPointerListIBM");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, void*, void> _glVertexPointervINTEL = (delegate* unmanaged[Stdcall]<GLint, GLenum, void*, void>)getProcAddress("glVertexPointervINTEL");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, void> _glVertexStream1dATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, void>)getProcAddress("glVertexStream1dATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glVertexStream1dvATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glVertexStream1dvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, void> _glVertexStream1fATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, void>)getProcAddress("glVertexStream1fATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glVertexStream1fvATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glVertexStream1fvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, void> _glVertexStream1iATI = (delegate* unmanaged[Stdcall]<GLenum, GLint, void>)getProcAddress("glVertexStream1iATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glVertexStream1ivATI = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glVertexStream1ivATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, void> _glVertexStream1sATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort, void>)getProcAddress("glVertexStream1sATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glVertexStream1svATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glVertexStream1svATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, void> _glVertexStream2dATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, void>)getProcAddress("glVertexStream2dATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glVertexStream2dvATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glVertexStream2dvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, void> _glVertexStream2fATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, void>)getProcAddress("glVertexStream2fATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glVertexStream2fvATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glVertexStream2fvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, void> _glVertexStream2iATI = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, void>)getProcAddress("glVertexStream2iATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glVertexStream2ivATI = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glVertexStream2ivATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, void> _glVertexStream2sATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, void>)getProcAddress("glVertexStream2sATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glVertexStream2svATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glVertexStream2svATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void> _glVertexStream3dATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexStream3dATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glVertexStream3dvATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glVertexStream3dvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void> _glVertexStream3fATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertexStream3fATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glVertexStream3fvATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glVertexStream3fvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, void> _glVertexStream3iATI = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, void>)getProcAddress("glVertexStream3iATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glVertexStream3ivATI = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glVertexStream3ivATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, void> _glVertexStream3sATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, void>)getProcAddress("glVertexStream3sATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glVertexStream3svATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glVertexStream3svATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, void> _glVertexStream4dATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glVertexStream4dATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void> _glVertexStream4dvATI = (delegate* unmanaged[Stdcall]<GLenum, GLdouble*, void>)getProcAddress("glVertexStream4dvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, GLfloat, void> _glVertexStream4fATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glVertexStream4fATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void> _glVertexStream4fvATI = (delegate* unmanaged[Stdcall]<GLenum, GLfloat*, void>)getProcAddress("glVertexStream4fvATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, void> _glVertexStream4iATI = (delegate* unmanaged[Stdcall]<GLenum, GLint, GLint, GLint, GLint, void>)getProcAddress("glVertexStream4iATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLint*, void> _glVertexStream4ivATI = (delegate* unmanaged[Stdcall]<GLenum, GLint*, void>)getProcAddress("glVertexStream4ivATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, GLshort, void> _glVertexStream4sATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glVertexStream4sATI");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLshort*, void> _glVertexStream4svATI = (delegate* unmanaged[Stdcall]<GLenum, GLshort*, void>)getProcAddress("glVertexStream4svATI");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glVertexWeightPointerEXT = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glVertexWeightPointerEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, void> _glVertexWeightfEXT = (delegate* unmanaged[Stdcall]<GLfloat, void>)getProcAddress("glVertexWeightfEXT");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glVertexWeightfvEXT = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glVertexWeightfvEXT");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV, void> _glVertexWeighthNV = (delegate* unmanaged[Stdcall]<GLhalfNV, void>)getProcAddress("glVertexWeighthNV");
	private readonly delegate* unmanaged[Stdcall]<GLhalfNV*, void> _glVertexWeighthvNV = (delegate* unmanaged[Stdcall]<GLhalfNV*, void>)getProcAddress("glVertexWeighthvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint*, GLuint64EXT*, GLenum> _glVideoCaptureNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint*, GLuint64EXT*, GLenum>)getProcAddress("glVideoCaptureNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLdouble*, void> _glVideoCaptureStreamParameterdvNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLdouble*, void>)getProcAddress("glVideoCaptureStreamParameterdvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLfloat*, void> _glVideoCaptureStreamParameterfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLfloat*, void>)getProcAddress("glVideoCaptureStreamParameterfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void> _glVideoCaptureStreamParameterivNV = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLint*, void>)getProcAddress("glVideoCaptureStreamParameterivNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, void> _glViewport = (delegate* unmanaged[Stdcall]<GLint, GLint, GLsizei, GLsizei, void>)getProcAddress("glViewport");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glViewportArrayv = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glViewportArrayv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glViewportArrayvNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glViewportArrayvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void> _glViewportArrayvOES = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLfloat*, void>)getProcAddress("glViewportArrayvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glViewportIndexedf = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glViewportIndexedf");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glViewportIndexedfOES = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glViewportIndexedfOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void> _glViewportIndexedfNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glViewportIndexedfNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glViewportIndexedfv = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glViewportIndexedfv");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glViewportIndexedfvOES = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glViewportIndexedfvOES");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void> _glViewportIndexedfvNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat*, void>)getProcAddress("glViewportIndexedfvNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void> _glViewportPositionWScaleNV = (delegate* unmanaged[Stdcall]<GLuint, GLfloat, GLfloat, void>)getProcAddress("glViewportPositionWScaleNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void> _glViewportSwizzleNV = (delegate* unmanaged[Stdcall]<GLuint, GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glViewportSwizzleNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint*, GLuint, GLuint*, GLenum*, void> _glWaitSemaphoreEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLuint*, GLuint, GLuint*, GLenum*, void>)getProcAddress("glWaitSemaphoreEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLuint64*, void> _glWaitSemaphoreui64NVX = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLuint64*, void>)getProcAddress("glWaitSemaphoreui64NVX");
	private readonly delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, void> _glWaitSync = (delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, void>)getProcAddress("glWaitSync");
	private readonly delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, void> _glWaitSyncAPPLE = (delegate* unmanaged[Stdcall]<GLsync, GLbitfield, GLuint64, void>)getProcAddress("glWaitSyncAPPLE");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLfloat*, void> _glWeightPathsNV = (delegate* unmanaged[Stdcall]<GLuint, GLsizei, GLuint*, GLfloat*, void>)getProcAddress("glWeightPathsNV");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glWeightPointerARB = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glWeightPointerARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void> _glWeightPointerOES = (delegate* unmanaged[Stdcall]<GLint, GLenum, GLsizei, void*, void>)getProcAddress("glWeightPointerOES");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLbyte*, void> _glWeightbvARB = (delegate* unmanaged[Stdcall]<GLint, GLbyte*, void>)getProcAddress("glWeightbvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLdouble*, void> _glWeightdvARB = (delegate* unmanaged[Stdcall]<GLint, GLdouble*, void>)getProcAddress("glWeightdvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLfloat*, void> _glWeightfvARB = (delegate* unmanaged[Stdcall]<GLint, GLfloat*, void>)getProcAddress("glWeightfvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint*, void> _glWeightivARB = (delegate* unmanaged[Stdcall]<GLint, GLint*, void>)getProcAddress("glWeightivARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLshort*, void> _glWeightsvARB = (delegate* unmanaged[Stdcall]<GLint, GLshort*, void>)getProcAddress("glWeightsvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLubyte*, void> _glWeightubvARB = (delegate* unmanaged[Stdcall]<GLint, GLubyte*, void>)getProcAddress("glWeightubvARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLuint*, void> _glWeightuivARB = (delegate* unmanaged[Stdcall]<GLint, GLuint*, void>)getProcAddress("glWeightuivARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLushort*, void> _glWeightusvARB = (delegate* unmanaged[Stdcall]<GLint, GLushort*, void>)getProcAddress("glWeightusvARB");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glWindowPos2d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glWindowPos2d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glWindowPos2dARB = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glWindowPos2dARB");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void> _glWindowPos2dMESA = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, void>)getProcAddress("glWindowPos2dMESA");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glWindowPos2dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glWindowPos2dv");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glWindowPos2dvARB = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glWindowPos2dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glWindowPos2dvMESA = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glWindowPos2dvMESA");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glWindowPos2f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glWindowPos2f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glWindowPos2fARB = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glWindowPos2fARB");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void> _glWindowPos2fMESA = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, void>)getProcAddress("glWindowPos2fMESA");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glWindowPos2fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glWindowPos2fv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glWindowPos2fvARB = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glWindowPos2fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glWindowPos2fvMESA = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glWindowPos2fvMESA");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> _glWindowPos2i = (delegate* unmanaged[Stdcall]<GLint, GLint, void>)getProcAddress("glWindowPos2i");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> _glWindowPos2iARB = (delegate* unmanaged[Stdcall]<GLint, GLint, void>)getProcAddress("glWindowPos2iARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, void> _glWindowPos2iMESA = (delegate* unmanaged[Stdcall]<GLint, GLint, void>)getProcAddress("glWindowPos2iMESA");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glWindowPos2iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glWindowPos2iv");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glWindowPos2ivARB = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glWindowPos2ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glWindowPos2ivMESA = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glWindowPos2ivMESA");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, void> _glWindowPos2s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, void>)getProcAddress("glWindowPos2s");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, void> _glWindowPos2sARB = (delegate* unmanaged[Stdcall]<GLshort, GLshort, void>)getProcAddress("glWindowPos2sARB");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, void> _glWindowPos2sMESA = (delegate* unmanaged[Stdcall]<GLshort, GLshort, void>)getProcAddress("glWindowPos2sMESA");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glWindowPos2sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glWindowPos2sv");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glWindowPos2svARB = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glWindowPos2svARB");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glWindowPos2svMESA = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glWindowPos2svMESA");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glWindowPos3d = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glWindowPos3d");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glWindowPos3dARB = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glWindowPos3dARB");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void> _glWindowPos3dMESA = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, void>)getProcAddress("glWindowPos3dMESA");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glWindowPos3dv = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glWindowPos3dv");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glWindowPos3dvARB = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glWindowPos3dvARB");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glWindowPos3dvMESA = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glWindowPos3dvMESA");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glWindowPos3f = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glWindowPos3f");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glWindowPos3fARB = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glWindowPos3fARB");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void> _glWindowPos3fMESA = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, void>)getProcAddress("glWindowPos3fMESA");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glWindowPos3fv = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glWindowPos3fv");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glWindowPos3fvARB = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glWindowPos3fvARB");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glWindowPos3fvMESA = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glWindowPos3fvMESA");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glWindowPos3i = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glWindowPos3i");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glWindowPos3iARB = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glWindowPos3iARB");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void> _glWindowPos3iMESA = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, void>)getProcAddress("glWindowPos3iMESA");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glWindowPos3iv = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glWindowPos3iv");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glWindowPos3ivARB = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glWindowPos3ivARB");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glWindowPos3ivMESA = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glWindowPos3ivMESA");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glWindowPos3s = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glWindowPos3s");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glWindowPos3sARB = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glWindowPos3sARB");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void> _glWindowPos3sMESA = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, void>)getProcAddress("glWindowPos3sMESA");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glWindowPos3sv = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glWindowPos3sv");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glWindowPos3svARB = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glWindowPos3svARB");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glWindowPos3svMESA = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glWindowPos3svMESA");
	private readonly delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void> _glWindowPos4dMESA = (delegate* unmanaged[Stdcall]<GLdouble, GLdouble, GLdouble, GLdouble, void>)getProcAddress("glWindowPos4dMESA");
	private readonly delegate* unmanaged[Stdcall]<GLdouble*, void> _glWindowPos4dvMESA = (delegate* unmanaged[Stdcall]<GLdouble*, void>)getProcAddress("glWindowPos4dvMESA");
	private readonly delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void> _glWindowPos4fMESA = (delegate* unmanaged[Stdcall]<GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glWindowPos4fMESA");
	private readonly delegate* unmanaged[Stdcall]<GLfloat*, void> _glWindowPos4fvMESA = (delegate* unmanaged[Stdcall]<GLfloat*, void>)getProcAddress("glWindowPos4fvMESA");
	private readonly delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void> _glWindowPos4iMESA = (delegate* unmanaged[Stdcall]<GLint, GLint, GLint, GLint, void>)getProcAddress("glWindowPos4iMESA");
	private readonly delegate* unmanaged[Stdcall]<GLint*, void> _glWindowPos4ivMESA = (delegate* unmanaged[Stdcall]<GLint*, void>)getProcAddress("glWindowPos4ivMESA");
	private readonly delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void> _glWindowPos4sMESA = (delegate* unmanaged[Stdcall]<GLshort, GLshort, GLshort, GLshort, void>)getProcAddress("glWindowPos4sMESA");
	private readonly delegate* unmanaged[Stdcall]<GLshort*, void> _glWindowPos4svMESA = (delegate* unmanaged[Stdcall]<GLshort*, void>)getProcAddress("glWindowPos4svMESA");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLint*, void> _glWindowRectanglesEXT = (delegate* unmanaged[Stdcall]<GLenum, GLsizei, GLint*, void>)getProcAddress("glWindowRectanglesEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLenum, GLenum, GLenum, void> _glWriteMaskEXT = (delegate* unmanaged[Stdcall]<GLuint, GLuint, GLenum, GLenum, GLenum, GLenum, void>)getProcAddress("glWriteMaskEXT");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void> _glDrawVkImageNV = (delegate* unmanaged[Stdcall]<GLuint64, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, void>)getProcAddress("glDrawVkImageNV");
	private readonly delegate* unmanaged[Stdcall]<GLchar*, GLVULKANPROCNV> _glGetVkProcAddrNV = (delegate* unmanaged[Stdcall]<GLchar*, GLVULKANPROCNV>)getProcAddress("glGetVkProcAddrNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, void> _glWaitVkSemaphoreNV = (delegate* unmanaged[Stdcall]<GLuint64, void>)getProcAddress("glWaitVkSemaphoreNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, void> _glSignalVkSemaphoreNV = (delegate* unmanaged[Stdcall]<GLuint64, void>)getProcAddress("glSignalVkSemaphoreNV");
	private readonly delegate* unmanaged[Stdcall]<GLuint64, void> _glSignalVkFenceNV = (delegate* unmanaged[Stdcall]<GLuint64, void>)getProcAddress("glSignalVkFenceNV");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void> _glFramebufferParameteriMESA = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint, void>)getProcAddress("glFramebufferParameteriMESA");
	private readonly delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void> _glGetFramebufferParameterivMESA = (delegate* unmanaged[Stdcall]<GLenum, GLenum, GLint*, void>)getProcAddress("glGetFramebufferParameterivMESA");
}
